Imports System.Data
Imports System.Data.SqlClient
Imports System.Attribute
Imports ImpFiscales.MisFiscales

Namespace MiDataSistema
    Partial Public Class DataSistema
        Partial Public Class FichaVentas

#Region "Funciones De Grabar VENTA/PRESUPUESTO/PEDIDO/CHIMBO/NOTA ENTREGA"
            ''' <summary>
            ''' Permite Procesar Una Venta
            ''' </summary>
            ''' <param name="idunico"></param>
            ''' IDENTIFICADOR UNICO
            ''' <param name="xventa"></param>
            ''' CLASE PARA EL ENCABEZADO DE LA FACTURA
            ''' <param name="xventadetalle"></param>
            ''' CLASE PARA EL CUERPO DE LA FACTURA
            ''' <param name="xpagos"></param>
            ''' CLASE PARA LOS TIPOS DE PAGOS EFECTUADOS A LA FACTURA
            ''' <param name="xcondiciones"></param>
            ''' CONDICIONES DADAS PARA PROCESAR LA FACTURA
            ''' 


            Public Class ResultadoCntDoc
                Public Property Mensaje As String
                Public Property IsError As Boolean
                Public Property CntDoc As Integer


                Sub New()
                    Mensaje = ""
                    IsError = False
                    CntDoc = 0
                End Sub
            End Class

            Public Class ResultadoEntidad(Of T)
                Public Property Mensaje As String
                Public Property IsError As Boolean
                Public Property Entidad As T


                Sub New()
                    Mensaje = ""
                    IsError = False
                End Sub
            End Class

            Public Class ResultadoLista(Of T)
                Public Property Mensaje As String
                Public Property IsError As Boolean
                Public Property Lista As List(Of T)


                Sub New()
                    Mensaje = ""
                    IsError = False
                End Sub
            End Class



            Public Class T_SerieFiscal
                Public Property auto As String
                Public Property nombre As String
                Public Property correlativo As Integer
                Public Property estatus As String
                Public Property estatusFactura As String
                Public Property estatusNCredito As String
                Public Property estatusNDebito As String
                Public Property estatusNEntrega As String
                Public Property numeroRegistroFiscal As String
                Public ReadOnly Property esActivo As Boolean
                    Get
                        Return estatus.Trim.ToUpper = "ACTIVO"
                    End Get
                End Property
                Public ReadOnly Property esActivoParaFactura As Boolean
                    Get
                        Return estatusFactura.Trim.ToUpper = "1"
                    End Get
                End Property
                Public ReadOnly Property esActivoParaNCredito As Boolean
                    Get
                        Return estatusNCredito.Trim.ToUpper = "1"
                    End Get
                End Property
                Public ReadOnly Property esActivoParaNDebito As Boolean
                    Get
                        Return estatusNDebito.Trim.ToUpper = "1"
                    End Get
                End Property
                Public ReadOnly Property esActivoParaNEntrega As Boolean
                    Get
                        Return estatusNEntrega.Trim.ToUpper = "1"
                    End Get
                End Property

                Sub New()
                    auto = ""
                    nombre = ""
                    correlativo = 0
                    estatus = ""
                    estatusFactura = ""
                    estatusNCredito = ""
                    estatusNDebito = ""
                    estatusNEntrega = ""
                    numeroRegistroFiscal = ""
                End Sub
            End Class

            Public Class T_Deposito
                Public Property auto As String
                Public Property nombre As String
                Public Property codigo As String

                Sub New()
                    auto = ""
                    nombre = ""
                    codigo = ""
                End Sub
            End Class

            Public Class T_ConceptoInv
                Public Property auto As String
                Public Property nombre As String
                Public Property codigo As String

                Sub New()
                    auto = ""
                    nombre = ""
                    codigo = ""
                End Sub
            End Class

            Function F_SerieFiscal_GetBySerie(ByVal serie As String) As ResultadoEntidad(Of T_SerieFiscal)
                Dim result As ResultadoEntidad(Of T_SerieFiscal) = New ResultadoEntidad(Of T_SerieFiscal)

                Try
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        Try
                            Using xcmd As New SqlCommand("", xcon)
                                Dim xr As Integer = 0
                                Dim dt As DataTable = New DataTable
                                Dim xsql As String = "select auto, nombre, correlativo, estatus_venta, estatus_nd, estatus_nc, estatus_ne, nrf, estatus  from series_fiscales where nombre=@serie"
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@serie", serie)
                                xcmd.CommandText = xsql
                                Using xadap As New SqlDataAdapter(xsql, _MiCadenaConexion)
                                    xadap.SelectCommand.Parameters.AddWithValue("@serie", serie)
                                    xr = xadap.Fill(dt)
                                End Using

                                Dim ent = New T_SerieFiscal
                                If xr = 1 Then
                                    Dim data As DataRow = dt.Rows(0)
                                    ent.auto = data("auto").trim
                                    ent.nombre = data("nombre").trim
                                    ent.correlativo = data("correlativo")
                                    ent.estatusFactura = data("estatus_venta").trim
                                    ent.estatusNDebito = data("estatus_nd").trim
                                    ent.estatusNCredito = data("estatus_nc").trim
                                    ent.estatusNEntrega = data("estatus_ne").trim
                                    ent.numeroRegistroFiscal = data("nrf").trim
                                    ent.estatus = data("estatus").trim
                                    result.Entidad = ent
                                End If
                            End Using
                        Catch ex As Exception
                            With result
                                .Mensaje = ex.Message
                                .IsError = True
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Function F_Deposito_GetById(ByVal id As String) As ResultadoEntidad(Of T_Deposito)
                Dim result As ResultadoEntidad(Of T_Deposito) = New ResultadoEntidad(Of T_Deposito)

                Try
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        Try
                            Using xcmd As New SqlCommand("", xcon)
                                Dim xr As Integer = 0
                                Dim dt As DataTable = New DataTable
                                Dim xsql As String = "select auto, nombre, codigo from depositos where auto=@id"
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@id", id)
                                xcmd.CommandText = xsql
                                Using xadap As New SqlDataAdapter(xsql, _MiCadenaConexion)
                                    xadap.SelectCommand.Parameters.AddWithValue("@id", id)
                                    xr = xadap.Fill(dt)
                                End Using

                                Dim ent = New T_Deposito
                                If xr = 1 Then
                                    Dim data As DataRow = dt.Rows(0)
                                    ent.auto = data("auto").trim
                                    ent.nombre = data("nombre").trim
                                    ent.codigo = data("codigo").trim
                                    result.Entidad = ent
                                End If
                            End Using
                        Catch ex As Exception
                            With result
                                .Mensaje = ex.Message
                                .IsError = True
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Function F_ConceptoInv_GetById(ByVal id As String) As ResultadoEntidad(Of T_ConceptoInv)
                Dim result As ResultadoEntidad(Of T_ConceptoInv) = New ResultadoEntidad(Of T_ConceptoInv)

                Try
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        Try
                            Using xcmd As New SqlCommand("", xcon)
                                Dim xr As Integer = 0
                                Dim dt As DataTable = New DataTable
                                Dim xsql As String = "select auto, nombre, codigo from productos_conceptos where auto=@id"
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@id", id)
                                xcmd.CommandText = xsql
                                Using xadap As New SqlDataAdapter(xsql, _MiCadenaConexion)
                                    xadap.SelectCommand.Parameters.AddWithValue("@id", id)
                                    xr = xadap.Fill(dt)
                                End Using

                                Dim ent = New T_ConceptoInv
                                If xr = 1 Then
                                    Dim data As DataRow = dt.Rows(0)
                                    ent.auto = data("auto").trim
                                    ent.nombre = data("nombre").trim
                                    ent.codigo = data("codigo").trim
                                    result.Entidad = ent
                                End If
                            End Using
                        Catch ex As Exception
                            With result
                                .Mensaje = ex.Message
                                .IsError = True
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Public Class GenerarFactura
                Property Venta As GenerarFacturaVenta
                Property VentaDetalles As List(Of GenerarFacturaVentaDetalle)
                Property VentaMedidas As List(Of GenerarFacturaVentaMedida)
                Property VentaTemp As List(Of GenerarFacturaVentaTemp)


                Sub New()
                    Venta = New GenerarFacturaVenta
                    VentaDetalles = New List(Of GenerarFacturaVentaDetalle)
                    VentaMedidas = New List(Of GenerarFacturaVentaMedida)
                    VentaTemp = New List(Of GenerarFacturaVentaTemp)
                End Sub
            End Class

            Public Class GenerarFacturas
                Property Lista As List(Of GenerarFactura)
                Property DocInvloucrado As DocumentoInvolucrado
                Property ListaPrdDeposito As List(Of PrdDeposito)

                Sub New()
                    Lista = New List(Of GenerarFactura)
                    DocInvloucrado = New DocumentoInvolucrado
                    ListaPrdDeposito = New List(Of PrdDeposito)
                End Sub
            End Class

            Function F_Pedido_ListaPrd_Involucrado(ByVal autoDoc As String) As ResultadoLista(Of Pedido_PrdInvolucrado)
                Dim result = New ResultadoLista(Of Pedido_PrdInvolucrado)

                Try
                    Dim xtb = New DataTable
                    Dim lst = New List(Of Pedido_PrdInvolucrado)
                    Dim xsql = "select auto_productos, auto_deposito, cantidad_inventario, nombre from ventas_detalle where auto_documento=@autoDoc"
                    Using xcon As New SqlClient.SqlDataAdapter(xsql, _MiCadenaConexion)
                        xcon.SelectCommand.Parameters.Clear()
                        xcon.SelectCommand.Parameters.AddWithValue("@autoDoc", autoDoc)
                        xcon.Fill(xtb)
                    End Using
                    If xtb.Rows.Count > 0 Then
                        For Each it As DataRow In xtb.Rows
                            Dim autoPrd = it(0)
                            Dim autoDep = it(1)
                            Dim cnt = it(2)
                            Dim nombrePrd = it(3)
                            Dim rg = New Pedido_PrdInvolucrado(autoPrd, autoDep, cnt, nombrePrd)
                            lst.Add(rg)
                        Next
                        result.Lista = lst
                    Else
                        Throw New Exception("[ AUTO ] DOCUMENTO NO ENCONTRADO")
                    End If
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Function F_Pedido_Involucrado_GetData(ByVal autoDoc As String) As ResultadoEntidad(Of Pedido_Involucrado)
                Dim result = New ResultadoEntidad(Of Pedido_Involucrado)

                Try
                    Dim xtb = New DataTable
                    Dim xsql = "select documento, fecha, estatus, bloquear_almacen, dias_validez, tipo from ventas where auto=@autoDoc"
                    Using xcon As New SqlClient.SqlDataAdapter(xsql, _MiCadenaConexion)
                        xcon.SelectCommand.Parameters.Clear()
                        xcon.SelectCommand.Parameters.AddWithValue("@autoDoc", autoDoc)
                        xcon.Fill(xtb)
                    End Using
                    If xtb.Rows.Count = 1 Then
                        Dim documento = xtb(0)(0)
                        Dim fecha = xtb(0)(1)
                        Dim estatus = xtb(0)(2)
                        Dim estatusBloqueoAlm = xtb(0)(3)
                        Dim diasValidez = xtb(0)(4)
                        Dim tipoDoc = xtb(0)(5)
                        Dim rg = New Pedido_Involucrado(documento, fecha, estatus, estatusBloqueoAlm, diasValidez, tipoDoc)
                        result.Entidad = rg
                    Else
                        Throw New Exception("[ AUTO ] DOCUMENTO NO ENCONTRADO")
                    End If
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function


            Function F_GenerarFactura(ByVal documentos As GenerarFacturas) As ResultadoCntDoc
                Dim result As ResultadoCntDoc = New ResultadoCntDoc
                Dim errorSistema = ""

                Try
                    Dim xtr As SqlTransaction = Nothing
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)

                                'DESABILITAR MENSAJES DE TRUNCAMIENTO
                                Dim xxsql = "SET ANSI_WARNINGS  OFF"
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xxsql
                                xcmd.ExecuteNonQuery()

                                Dim xsql = ""
                                'VERIFICO EXISTENCIA DISPONIBLE 
                                If documentos.DocInvloucrado.estatusBloqueoAlm Then
                                    For Each it In documentos.ListaPrdDeposito
                                        xsql = "select real from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                        xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                        Dim ex = CType(xcmd.ExecuteScalar, Decimal)
                                        If it.cantInv > ex Then
                                            Throw New Exception("EXISTENCIA PRODUCTO [ " + it.nomPrd + " ] NO DISPONIBLE ")
                                        End If
                                    Next
                                End If

                                'ACTUALIZO MERCANCIA RESERVADA POR PEDIDO 
                                For Each it In documentos.DocInvloucrado.listPrd
                                    xsql = "update productos_deposito set reservada=reservada-@cnt, disponible=disponible+@cnt where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    xcmd.Parameters.AddWithValue("@cnt", it.cnt)
                                    xcmd.ExecuteNonQuery()
                                Next

                                For Each it In documentos.DocInvloucrado.listPrd
                                    xsql = "select reservada from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    Dim reservada = xcmd.ExecuteScalar

                                    xsql = "select disponible from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    Dim disponible = xcmd.ExecuteScalar
                                Next

                                Dim cntDoc = 0
                                For Each itDoc In documentos.Lista
                                    cntDoc += 1
                                    Dim ficha = itDoc
                                    Dim rt = 0
                                    errorSistema = ""

                                    'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS, CXC
                                    xsql = "update contadores set a_ventas=a_ventas+1, a_cxc=a_cxc+1"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    rt = xcmd.ExecuteNonQuery
                                    If rt = 0 Then
                                        Throw New Exception("PROBLEMA AL ACTUALIZAR CONTADORES [ VENTAS/CXC ]")
                                    End If

                                    'ACTUALIZO CONTADOR SERIE 
                                    xsql = "update series_fiscales set correlativo=correlativo+1 where auto=@autoSerie"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoSerie", ficha.Venta.serieAuto)
                                    rt = xcmd.ExecuteNonQuery
                                    If rt = 0 Then
                                        Throw New Exception("PROBLEMA AL ACTUALIZAR CONTADORES [ SERIES ]")
                                    End If

                                    xsql = "select a_ventas from contadores"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    Dim autoDoc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xsql = "select a_cxc from contadores"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    Dim autoCxC = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xsql = "select correlativo from series_fiscales where auto=@autoSerie"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoSerie", ficha.Venta.serieAuto)
                                    Dim docNumero = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xsql = "Select getdate()"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    Dim fechaHoraSistema = CType(xcmd.ExecuteScalar(), Date)
                                    Dim fechaSistema = fechaHoraSistema.Date
                                    Dim horaSistema = fechaHoraSistema.ToShortTimeString()
                                    Dim autoCxCPago As String = ""
                                    Dim autoReciboCxC As String = ""
                                    Dim numReciboCxC As String = ""
                                    Dim fechaVencimiento = fechaSistema.AddDays(ficha.Venta.diasCredito)
                                    Dim montoAcumulado As Decimal = 0D
                                    Dim montoResta As Decimal = 0D
                                    Dim estatusPagado = ""

                                    If ficha.Venta.condPagoIsContado Then
                                        montoAcumulado = ficha.Venta.montoTotal
                                        estatusPagado = "1"

                                        xsql = "update contadores set a_cxc=a_cxc+1, a_cxc_recibos=a_cxc_recibos+1, a_cxc_recibos_numero=a_cxc_recibos_numero+1"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        rt = xcmd.ExecuteNonQuery
                                        If rt = 0 Then
                                            Throw New Exception("PROBLEMA AL ACTUALIZAR CONTADORES [ RECIBO CXC ]")
                                        End If

                                        xsql = "select a_cxc from contadores"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        autoCxCPago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                        xsql = "select a_cxc_recibos from contadores"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        autoReciboCxC = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                        xsql = "select a_cxc_recibos_numero from contadores"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        numReciboCxC = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")
                                    Else
                                        montoResta = ficha.Venta.montoTotal
                                        estatusPagado = "0"
                                    End If

                                    errorSistema = "INSERTAR VENTAS"
                                    'VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                    xcmd.Parameters.AddWithValue("@auto", autoDoc)
                                    xcmd.Parameters.AddWithValue("@documento", docNumero)
                                    xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", fechaVencimiento)
                                    xcmd.Parameters.AddWithValue("@nombre", ficha.Venta.cliNombre)
                                    xcmd.Parameters.AddWithValue("@dir_fiscal", ficha.Venta.cliDirFiscal)
                                    xcmd.Parameters.AddWithValue("@ci_rif", ficha.Venta.cliCiRif)
                                    xcmd.Parameters.AddWithValue("@tipo", "01")
                                    xcmd.Parameters.AddWithValue("@exento", ficha.Venta.montoExento)
                                    xcmd.Parameters.AddWithValue("@base1", ficha.Venta.montoBase1)
                                    xcmd.Parameters.AddWithValue("@base2", ficha.Venta.montoBase2)
                                    xcmd.Parameters.AddWithValue("@base3", ficha.Venta.montoBase3)
                                    xcmd.Parameters.AddWithValue("@impuesto1", ficha.Venta.montoImpuesto1)
                                    xcmd.Parameters.AddWithValue("@impuesto2", ficha.Venta.montoImpuesto2)
                                    xcmd.Parameters.AddWithValue("@impuesto3", ficha.Venta.montoImpuesto3)
                                    xcmd.Parameters.AddWithValue("@base", ficha.Venta.montoBase)
                                    xcmd.Parameters.AddWithValue("@impuesto", ficha.Venta.montoImpuesto)
                                    xcmd.Parameters.AddWithValue("@total", ficha.Venta.montoTotal)
                                    xcmd.Parameters.AddWithValue("@tasa1", ficha.Venta.tasa1)
                                    xcmd.Parameters.AddWithValue("@tasa2", ficha.Venta.tasa2)
                                    xcmd.Parameters.AddWithValue("@tasa3", ficha.Venta.tasa3)
                                    xcmd.Parameters.AddWithValue("@nota", ficha.Venta.Notas)
                                    xcmd.Parameters.AddWithValue("@tasa_retencion_iva", 0D)
                                    xcmd.Parameters.AddWithValue("@tasa_retencion_islr", 0D)
                                    xcmd.Parameters.AddWithValue("@retencion_iva", 0D)
                                    xcmd.Parameters.AddWithValue("@retencion_islr", 0D)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                    xcmd.Parameters.AddWithValue("@codigo_entidad", ficha.Venta.cliCodigo)
                                    xcmd.Parameters.AddWithValue("@mes_relacion", fechaSistema.Month.ToString().Trim().PadLeft(2, "0"))
                                    xcmd.Parameters.AddWithValue("@control", ficha.Venta.control)
                                    xcmd.Parameters.AddWithValue("@fecha_relacion", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@orden_compra", ficha.Venta.ordeCompra)
                                    xcmd.Parameters.AddWithValue("@dias", ficha.Venta.diasCredito)
                                    xcmd.Parameters.AddWithValue("@descuento1", ficha.Venta.montoDescuento)
                                    xcmd.Parameters.AddWithValue("@descuento2", 0D)
                                    xcmd.Parameters.AddWithValue("@cargos", ficha.Venta.montoCargo)
                                    xcmd.Parameters.AddWithValue("@descuento1_porcentaje", ficha.Venta.porcDescuento)
                                    xcmd.Parameters.AddWithValue("@descuento2_porcentaje", 0D)
                                    xcmd.Parameters.AddWithValue("@cargos_porcentaje", ficha.Venta.porcCargo)
                                    xcmd.Parameters.AddWithValue("@columna", "1")
                                    xcmd.Parameters.AddWithValue("@estatus", "0")
                                    xcmd.Parameters.AddWithValue("@aplica", "")
                                    xcmd.Parameters.AddWithValue("@comprobante_retencion", "")
                                    xcmd.Parameters.AddWithValue("@subtotal", ficha.Venta.subTotal)
                                    xcmd.Parameters.AddWithValue("@telefono", ficha.Venta.cliTelefono)
                                    xcmd.Parameters.AddWithValue("@factor_cambio", ficha.Venta.factorCambio)
                                    xcmd.Parameters.AddWithValue("@codigo_vendedor", ficha.Venta.vendCodigo)
                                    xcmd.Parameters.AddWithValue("@vendedor", ficha.Venta.vendNombre)
                                    xcmd.Parameters.AddWithValue("@auto_vendedor", ficha.Venta.vendAuto)
                                    xcmd.Parameters.AddWithValue("@fecha_pedido", ficha.Venta.fechaPedido)
                                    xcmd.Parameters.AddWithValue("@pedido", ficha.Venta.numPedido)
                                    xcmd.Parameters.AddWithValue("@condicion_pago", ficha.Venta.condPago)
                                    xcmd.Parameters.AddWithValue("@usuario", ficha.Venta.usuNombre)
                                    xcmd.Parameters.AddWithValue("@codigo_usuario", ficha.Venta.usuCodigo)
                                    xcmd.Parameters.AddWithValue("@codigo_sucursal", "")
                                    xcmd.Parameters.AddWithValue("@hora", horaSistema)
                                    xcmd.Parameters.AddWithValue("@transporte", "")
                                    xcmd.Parameters.AddWithValue("@codigo_transporte", "")
                                    xcmd.Parameters.AddWithValue("@monto_divisa", ficha.Venta.montoDivisa)
                                    xcmd.Parameters.AddWithValue("@despachado", "")
                                    xcmd.Parameters.AddWithValue("@dir_despacho", ficha.Venta.cliDirDespacho)
                                    xcmd.Parameters.AddWithValue("@estacion", ficha.Venta.estacionEquipo)
                                    xcmd.Parameters.AddWithValue("@auto_recibo", autoReciboCxC)
                                    xcmd.Parameters.AddWithValue("@recibo", numReciboCxC)
                                    xcmd.Parameters.AddWithValue("@renglones", ficha.Venta.renglones)
                                    xcmd.Parameters.AddWithValue("@saldo_pendiente", ficha.Venta.saldoPend)
                                    xcmd.Parameters.AddWithValue("@ano_relacion", fechaSistema.Year.ToString().Trim().PadLeft(4, "0"))
                                    xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", "")
                                    xcmd.Parameters.AddWithValue("@dias_validez", 0)
                                    xcmd.Parameters.AddWithValue("@nrf", ficha.Venta.serieSerial)
                                    xcmd.Parameters.AddWithValue("@auto_usuario", ficha.Venta.usuAuto)
                                    xcmd.Parameters.AddWithValue("@auto_jornada", "")
                                    xcmd.Parameters.AddWithValue("@auto_operador", "")
                                    xcmd.Parameters.AddWithValue("@serie", ficha.Venta.serieNombre)
                                    xcmd.Parameters.AddWithValue("@serial", "")
                                    xcmd.Parameters.AddWithValue("@bloquear_almacen", ficha.Venta.bloquearAlmacen)
                                    xcmd.Parameters.AddWithValue("@origen_documento", "01")
                                    xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", "")
                                    xcmd.Parameters.AddWithValue("@rest_servicio_tasa", 0D)
                                    xcmd.Parameters.AddWithValue("@rest_servicio_monto", 0D)
                                    xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", "")
                                    xcmd.Parameters.AddWithValue("@descuento_por_prontopago", 0D)
                                    xcmd.Parameters.AddWithValue("@relacion_z", ficha.Venta.zFiscal)
                                    xcmd.Parameters.AddWithValue("@estatus_divisa", "0")
                                    xcmd.ExecuteNonQuery()

                                    errorSistema = "INSERTAR CXC"
                                    'CXC
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                    xcmd.Parameters.AddWithValue("@auto", autoCxC)
                                    xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@tipo_documento", "FAC")
                                    xcmd.Parameters.AddWithValue("@documento", docNumero)
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", fechaVencimiento)
                                    xcmd.Parameters.AddWithValue("@detalle", "DOCUMENTO DE VENTA")
                                    xcmd.Parameters.AddWithValue("@importe", ficha.Venta.montoTotal)
                                    xcmd.Parameters.AddWithValue("@acumulado", montoAcumulado)
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.Parameters.AddWithValue("@cliente", ficha.Venta.cliNombre)
                                    xcmd.Parameters.AddWithValue("@ci_rif", ficha.Venta.cliCiRif)
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", ficha.Venta.cliCodigo)
                                    xcmd.Parameters.AddWithValue("@cancelado", estatusPagado)
                                    xcmd.Parameters.AddWithValue("@resta", montoResta)
                                    xcmd.Parameters.AddWithValue("@operacion", "")
                                    xcmd.Parameters.AddWithValue("@estatus", "0")
                                    xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                    xcmd.Parameters.AddWithValue("@numero", "")
                                    xcmd.Parameters.AddWithValue("@auto_agencia", "")
                                    xcmd.Parameters.AddWithValue("@agencia", "")
                                    xcmd.Parameters.AddWithValue("@signo", 1)
                                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", "")
                                    xcmd.Parameters.AddWithValue("@fecha_emision", fechaSistema)
                                    xcmd.ExecuteNonQuery()


                                    'SI DOCUMENTO ES CONTADO
                                    If ficha.Venta.condPagoIsContado Then
                                        errorSistema = "INSERTAR CXC PAGO"
                                        'DOCUMENTO PAGO
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                        xcmd.Parameters.AddWithValue("@auto", autoCxCPago)
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@tipo_documento", "PAG")
                                        xcmd.Parameters.AddWithValue("@documento", numReciboCxC)
                                        xcmd.Parameters.AddWithValue("@fecha_vencimiento", fechaVencimiento)
                                        xcmd.Parameters.AddWithValue("@detalle", "")
                                        xcmd.Parameters.AddWithValue("@importe", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@acumulado", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                        xcmd.Parameters.AddWithValue("@cliente", ficha.Venta.cliNombre)
                                        xcmd.Parameters.AddWithValue("@ci_rif", ficha.Venta.cliCiRif)
                                        xcmd.Parameters.AddWithValue("@codigo_cliente", ficha.Venta.cliCodigo)
                                        xcmd.Parameters.AddWithValue("@cancelado", "")
                                        xcmd.Parameters.AddWithValue("@resta", 0D)
                                        xcmd.Parameters.AddWithValue("@operacion", "")
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@auto_documento", "")
                                        xcmd.Parameters.AddWithValue("@numero", "")
                                        xcmd.Parameters.AddWithValue("@auto_agencia", "")
                                        xcmd.Parameters.AddWithValue("@agencia", "")
                                        xcmd.Parameters.AddWithValue("@signo", -1)
                                        xcmd.Parameters.AddWithValue("@auto_mov_entrada", "")
                                        xcmd.Parameters.AddWithValue("@fecha_emision", fechaSistema)
                                        xcmd.ExecuteNonQuery()

                                        'RECIBO 
                                        errorSistema = "INSERTAR RECIBO"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
                                        xcmd.Parameters.AddWithValue("@auto", autoReciboCxC)
                                        xcmd.Parameters.AddWithValue("@numero", numReciboCxC)
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@auto_usuario", ficha.Venta.usuAuto)
                                        xcmd.Parameters.AddWithValue("@importe", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@usuario", ficha.Venta.usuNombre)
                                        xcmd.Parameters.AddWithValue("@importe_documentos", 0D)
                                        xcmd.Parameters.AddWithValue("@descuentos", 0D)
                                        xcmd.Parameters.AddWithValue("@total_documentos", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@detalle", "")
                                        xcmd.Parameters.AddWithValue("@cobrador", ficha.Venta.cobradorNombre)
                                        xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                        xcmd.Parameters.AddWithValue("@nombre_cliente", ficha.Venta.cliNombre)
                                        xcmd.Parameters.AddWithValue("@ci_rif_cliente", ficha.Venta.cliCiRif)
                                        xcmd.Parameters.AddWithValue("@codigo_cliente", ficha.Venta.cliCodigo)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@direccion", ficha.Venta.cliDirFiscal)
                                        xcmd.Parameters.AddWithValue("@telefono", ficha.Venta.cliTelefono)
                                        xcmd.Parameters.AddWithValue("@auto_cobrador", ficha.Venta.cobradorAuto)
                                        xcmd.Parameters.AddWithValue("@anticipos", 0D)
                                        xcmd.Parameters.AddWithValue("@cant_doc_rel", 1)
                                        xcmd.Parameters.AddWithValue("@monto_nc_pagadas", 0D)
                                        xcmd.Parameters.AddWithValue("@cant_nc_pagadas", 0D)
                                        xcmd.Parameters.AddWithValue("@auto_cxc", autoCxCPago)
                                        xcmd.ExecuteNonQuery()

                                        'DOCUMENTO PAGADO
                                        errorSistema = "INSERTAR CXC DOCUMENTO PAGO"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                        xcmd.Parameters.AddWithValue("@item", 1)
                                        xcmd.Parameters.AddWithValue("@operacion", "Cancelación")
                                        xcmd.Parameters.AddWithValue("@monto", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@auto_cxc", autoCxC)
                                        xcmd.Parameters.AddWithValue("@documento", docNumero)
                                        xcmd.Parameters.AddWithValue("@auto_cxc_pago", autoCxCPago)
                                        xcmd.Parameters.AddWithValue("@tipo", "PAG")
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@detalle", "")
                                        xcmd.Parameters.AddWithValue("@auto_cxc_recibo", autoReciboCxC)
                                        xcmd.Parameters.AddWithValue("@numero_recibo", numReciboCxC)
                                        xcmd.Parameters.AddWithValue("@origen", "FACTURA")
                                        xcmd.Parameters.AddWithValue("@monto_pendiente", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@signo", 1)
                                        xcmd.ExecuteNonQuery()

                                        'MODO PAGO
                                        errorSistema = "INSERTAR CXC MODO PAGO"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
                                        xcmd.Parameters.AddWithValue("@numero", "")
                                        xcmd.Parameters.AddWithValue("@agencia", "")
                                        xcmd.Parameters.AddWithValue("@importe", ficha.Venta.montoTotal)
                                        xcmd.Parameters.AddWithValue("@codigo", "TR")
                                        xcmd.Parameters.AddWithValue("@auto_recibo", autoReciboCxC)
                                        xcmd.Parameters.AddWithValue("@nombre", "TRANSFEREN")
                                        xcmd.Parameters.AddWithValue("@auto_medios_pago", "0000000011")
                                        xcmd.Parameters.AddWithValue("@auto_agencia", "")
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@monto_recibido", ficha.Venta.montoTotal)
                                        xcmd.ExecuteNonQuery()
                                    End If


                                    'VENTAS_DETALLE
                                    Dim idItem As Integer = 0
                                    For Each det In ficha.VentaDetalles
                                        errorSistema = "INSERTAR VENTA DETALLE"
                                        idItem += 1
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@auto_productos", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@codigo", det.prdCodigo)
                                        xcmd.Parameters.AddWithValue("@nombre", det.prdDescripcion)
                                        xcmd.Parameters.AddWithValue("@auto_departamento", det.departAuto)
                                        xcmd.Parameters.AddWithValue("@auto_grupo", det.grupoAuto)
                                        xcmd.Parameters.AddWithValue("@auto_subgrupo", det.subGrupAuto)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad", det.cantidad)
                                        xcmd.Parameters.AddWithValue("@empaque", det.empaque)
                                        xcmd.Parameters.AddWithValue("@descuento1p", det.descPorc_1)
                                        xcmd.Parameters.AddWithValue("@descuento2p", det.descPorc_2)
                                        xcmd.Parameters.AddWithValue("@descuento3p", det.descPorc_3)
                                        xcmd.Parameters.AddWithValue("@descuento1", det.descMonto_1)
                                        xcmd.Parameters.AddWithValue("@descuento2", det.descMonto_2)
                                        xcmd.Parameters.AddWithValue("@descuento3", det.descMonto_3)
                                        xcmd.Parameters.AddWithValue("@total_neto", det.totalNeto)
                                        xcmd.Parameters.AddWithValue("@tasa", det.tasaIva)
                                        xcmd.Parameters.AddWithValue("@impuesto", det.impuesto)
                                        xcmd.Parameters.AddWithValue("@total", det.total)
                                        xcmd.Parameters.AddWithValue("@auto", idItem.ToString().Trim().PadLeft(10, "0"))
                                        xcmd.Parameters.AddWithValue("@codigo_tasa", det.codigoTasaIva)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@tipo", "01")
                                        xcmd.Parameters.AddWithValue("@deposito", ficha.Venta.depNombre)
                                        xcmd.Parameters.AddWithValue("@signo", 1)
                                        xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                        xcmd.Parameters.AddWithValue("@decimales", det.medidaDecimales)
                                        xcmd.Parameters.AddWithValue("@contenido_empaque", det.contEmpaque)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.Parameters.AddWithValue("@costo_inventario", det.costoUnd)
                                        xcmd.Parameters.AddWithValue("@precio_neto", det.precioNeto)
                                        xcmd.Parameters.AddWithValue("@costo_venta", det.costo)
                                        xcmd.Parameters.AddWithValue("@precio_final", det.precioFinal)
                                        xcmd.Parameters.AddWithValue("@precio_inventario", det.precioInv)
                                        xcmd.Parameters.AddWithValue("@utilidad", det.utilidad)
                                        xcmd.Parameters.AddWithValue("@utilidadp", det.utilidadPorc)
                                        xcmd.Parameters.AddWithValue("@precio_item", det.precioItem)
                                        xcmd.Parameters.AddWithValue("@estatus_garantia", "0")
                                        xcmd.Parameters.AddWithValue("@estatus_serial", "0")
                                        xcmd.Parameters.AddWithValue("@codigo_deposito", ficha.Venta.depCodigo)
                                        xcmd.Parameters.AddWithValue("@dias_garantia", 0)
                                        xcmd.Parameters.AddWithValue("@detalle", det.detalle)
                                        xcmd.Parameters.AddWithValue("@psv", det.psv)
                                        xcmd.Parameters.AddWithValue("@empaque_tipo", det.empaqueTipo)
                                        xcmd.Parameters.AddWithValue("@estatus_corte", "0")
                                        xcmd.Parameters.AddWithValue("@x", 0D)
                                        xcmd.Parameters.AddWithValue("@y", 0D)
                                        xcmd.Parameters.AddWithValue("@z", 0D)
                                        xcmd.Parameters.AddWithValue("@corte", "0")
                                        xcmd.Parameters.AddWithValue("@categoria", det.categoria)
                                        xcmd.Parameters.AddWithValue("@N_esoferta", "")
                                        xcmd.Parameters.AddWithValue("@N_espesado", "0")
                                        xcmd.Parameters.AddWithValue("@N_codigobarra", "")
                                        xcmd.Parameters.AddWithValue("@N_plu", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_formato", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_depart", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_seccion", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_vendedor", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_plu", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_peso", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_precio", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_control", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_digitos", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_ticket", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_montoitem", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_numitem", 0)
                                        xcmd.Parameters.AddWithValue("@N_auto_jornada", "")
                                        xcmd.Parameters.AddWithValue("@N_auto_operador", "")
                                        xcmd.Parameters.AddWithValue("@N_automedida", det.medidaAuto)
                                        xcmd.Parameters.AddWithValue("@N_forzarmedida", det.medidaForzar)
                                        xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", det.confTipoCalcUtilidad)
                                        xcmd.Parameters.AddWithValue("@N_TipoMovimiento", "V")
                                        xcmd.Parameters.AddWithValue("@n_auto_item_origen", "")
                                        xcmd.Parameters.AddWithValue("@n_nombre_corto", det.prdNombre)
                                        xcmd.Parameters.AddWithValue("@n_licor_capacidad", 0D)
                                        xcmd.Parameters.AddWithValue("@n_licor_grados", 0D)
                                        xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", "N")
                                        xcmd.ExecuteNonQuery()


                                        'PRODUCTOS_DEPOSITO
                                        xsql = "Update productos_deposito set real=real-@cantidad_inventario where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.ExecuteNonQuery()

                                        If det.provDocOrigen Then
                                            'PRODUCTOS_DEPOSITO
                                            xsql = "Update productos_deposito set disponible=real-reservada where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql
                                            xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                            xcmd.ExecuteNonQuery()
                                        Else
                                            xsql = "Update productos_deposito set reservada=reservada-@cantidad_inventario where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql
                                            xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                            xcmd.ExecuteNonQuery()
                                        End If

                                        Dim ent = ficha.Venta.cliNombre.Trim
                                        If ficha.Venta.cliNombre.Trim.Length > 50 Then
                                            ent = ficha.Venta.cliNombre.Trim.Substring(0, 50)
                                        End If
                                        'PRODUCTOS_KARDEX
                                        errorSistema = "INSERTAR KARDEX"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad", det.cantidad)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", ficha.Venta.conceptoAuto)
                                        xcmd.Parameters.AddWithValue("@entidad", ent)
                                        xcmd.Parameters.AddWithValue("@documento", docNumero)
                                        xcmd.Parameters.AddWithValue("@medida_empaque", det.empaqueTipo)
                                        xcmd.Parameters.AddWithValue("@signo", -1)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@origen", "0801")
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@nota", "")
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", det.prdDescripcion)
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", ficha.Venta.depNombre)
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", ficha.Venta.conceptoNombre)
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", det.medidaNombre)
                                        xcmd.Parameters.AddWithValue("@n_automedida", det.medidaAuto)
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", det.contEmpaque)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", det.prdCodigo)
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", ficha.Venta.depCodigo)
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", ficha.Venta.conceptoCodigo)
                                        xcmd.ExecuteNonQuery()
                                    Next

                                    'VENTAS_MEDIDAS
                                    For Each it In ficha.VentaMedidas
                                        xcmd.Parameters.Clear()
                                        errorSistema = "INSERTAR VENTA MEDIDA"
                                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@auto_medida", it.autoMedida)
                                        xcmd.Parameters.AddWithValue("@total_medida", it.cantidad)
                                        xcmd.Parameters.AddWithValue("@decimales", it.decimales)
                                        xcmd.Parameters.AddWithValue("@nombre", it.nombreMedida)
                                        xcmd.ExecuteNonQuery()
                                    Next


                                    'ACTUALIZO CLIENTE
                                    Dim t_debito As Single = 0
                                    Dim t_credito As Single = 0
                                    Dim t_saldo As Single = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                    t_debito = xcmd.ExecuteScalar()

                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                    t_credito = xcmd.ExecuteScalar()

                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                    t_saldo = xcmd.ExecuteScalar()


                                    'CLIENTES
                                    Dim xr_cliente As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE CLIENTES SET " _
                                      + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                      + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos-@total_anticipos, " _
                                      + "fecha_ult_compra=@fecha_ult_compra where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                    xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                    xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                    xcmd.Parameters.AddWithValue("@fecha_ult_compra", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@total_anticipos", 0D)
                                    xcmd.Parameters.AddWithValue("@auto", ficha.Venta.cliAuto)
                                    xcmd.ExecuteNonQuery()


                                    'TABLA TEMPORALVENTA
                                    For Each it In ficha.VentaTemp
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "delete temporalventa where autoItem=@autoItem"
                                        xcmd.Parameters.AddWithValue("@autoItem", it.idItem)
                                        xcmd.ExecuteNonQuery()
                                    Next


                                    'TABLA VENTAS_PEDIDOS_OTROS
                                    errorSistema = "INSERTAR VENTA PEDIDA OTROS"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                    xcmd.Parameters.AddWithValue("@auto_doc_origen", documentos.DocInvloucrado.autoDoc)
                                    xcmd.Parameters.AddWithValue("@auto_doc_venta", autoDoc)
                                    xcmd.Parameters.AddWithValue("@fechaemision_origen", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@fechaproceso", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                    xcmd.Parameters.AddWithValue("@ci_rif_entidad", ficha.Venta.cliCiRif)
                                    xcmd.Parameters.AddWithValue("@nombre_entidad", ficha.Venta.cliNombre)
                                    xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", documentos.DocInvloucrado.diasValidezDoc)
                                    xcmd.Parameters.AddWithValue("@tipodocumento_origen", documentos.DocInvloucrado.tipoDoc)
                                    xcmd.Parameters.AddWithValue("@numdocumento_origen", documentos.DocInvloucrado.numDoc)
                                    xcmd.Parameters.AddWithValue("@numdocumento_venta", docNumero)
                                    xcmd.ExecuteNonQuery()
                                Next


                                ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc"
                                xcmd.Parameters.AddWithValue("@autodoc", documentos.DocInvloucrado.autoDoc)
                                Dim xres = xcmd.ExecuteNonQuery()
                                If xres = 0 Then
                                    Throw New Exception("PROBLEMA AL ACTUALIZAR PEDIDO [ ESTATUS PROCESADO ]")
                                End If


                                xtr.Commit()
                                result.CntDoc = cntDoc


                                'HABILITAR MENSAJES DE TRUNCAMIENTO
                                xxsql = "SET ANSI_WARNINGS  ON"
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xxsql
                                xcmd.ExecuteNonQuery()
                            End Using
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                With result
                                    .Mensaje = "YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE"
                                    .IsError = True
                                End With
                            ElseIf xsql.Number = 547 Then
                                With result
                                    .Mensaje = "CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO"
                                    .IsError = True
                                End With
                            Else
                                With result
                                    .Mensaje = errorSistema + xsql.Message + vbCrLf + xsql.Number.ToString
                                    .IsError = True
                                End With
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            With result
                                .Mensaje = errorSistema + ex.Message
                                .IsError = True
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = errorSistema + ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Function F_GenerarNotaEntrega(ByVal documentos As GenerarFacturas) As ResultadoCntDoc
                Dim result As ResultadoCntDoc = New ResultadoCntDoc
                Dim errorSistema = ""

                Try
                    Dim xtr As SqlTransaction = Nothing
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)

                                'DESABILITAR MENSAJES DE TRUNCAMIENTO
                                Dim xxsql = "SET ANSI_WARNINGS  OFF"
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xxsql
                                xcmd.ExecuteNonQuery()

                                Dim xsql = ""
                                'VERIFICO EXISTENCIA DISPONIBLE 
                                If documentos.DocInvloucrado.estatusBloqueoAlm Then
                                    For Each it In documentos.ListaPrdDeposito
                                        xsql = "select real from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                        xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                        Dim ex = CType(xcmd.ExecuteScalar, Decimal)
                                        If it.cantInv > ex Then
                                            Throw New Exception("EXISTENCIA PRODUCTO [ " + it.nomPrd + " ] NO DISPONIBLE ")
                                        End If
                                    Next
                                End If

                                'ACTUALIZO MERCANCIA RESERVADA POR PEDIDO 
                                For Each it In documentos.DocInvloucrado.listPrd
                                    xsql = "update productos_deposito set reservada=reservada-@cnt, disponible=disponible+@cnt where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    xcmd.Parameters.AddWithValue("@cnt", it.cnt)
                                    xcmd.ExecuteNonQuery()
                                Next

                                For Each it In documentos.DocInvloucrado.listPrd
                                    xsql = "select reservada from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    Dim reservada = xcmd.ExecuteScalar

                                    xsql = "select disponible from productos_deposito where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.autoPrd)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.autoDep)
                                    Dim disponible = xcmd.ExecuteScalar
                                Next

                                Dim cntDoc = 0
                                For Each itDoc In documentos.Lista
                                    cntDoc += 1
                                    Dim ficha = itDoc
                                    Dim rt = 0
                                    errorSistema = ""

                                    'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS, CXC
                                    xsql = "update contadores set a_ventas=a_ventas+1"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    rt = xcmd.ExecuteNonQuery
                                    If rt = 0 Then
                                        Throw New Exception("PROBLEMA AL ACTUALIZAR CONTADORES [ VENTAS/CXC ]")
                                    End If

                                    'ACTUALIZO CONTADOR SERIE 
                                    xsql = "update series_fiscales set correlativo=correlativo+1 where auto=@autoSerie"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoSerie", ficha.Venta.serieAuto)
                                    rt = xcmd.ExecuteNonQuery
                                    If rt = 0 Then
                                        Throw New Exception("PROBLEMA AL ACTUALIZAR CONTADORES [ SERIES ]")
                                    End If

                                    xsql = "select a_ventas from contadores"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    Dim autoDoc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xsql = "select correlativo from series_fiscales where auto=@autoSerie"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    xcmd.Parameters.AddWithValue("@autoSerie", ficha.Venta.serieAuto)
                                    Dim docNumero = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xsql = "Select getdate()"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql
                                    Dim fechaHoraSistema = CType(xcmd.ExecuteScalar(), Date)
                                    Dim fechaSistema = fechaHoraSistema.Date
                                    Dim horaSistema = fechaHoraSistema.ToShortTimeString()
                                    Dim autoCxCPago As String = ""
                                    Dim autoReciboCxC As String = ""
                                    Dim numReciboCxC As String = ""
                                    Dim fechaVencimiento = fechaSistema.AddDays(ficha.Venta.diasCredito)
                                    Dim montoAcumulado As Decimal = 0D
                                    Dim montoResta As Decimal = 0D
                                    Dim estatusPagado = ""


                                    'VENTAS
                                    errorSistema = "INSERTAR VENTAS"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                    xcmd.Parameters.AddWithValue("@auto", autoDoc)
                                    xcmd.Parameters.AddWithValue("@documento", docNumero)
                                    xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", fechaVencimiento)
                                    xcmd.Parameters.AddWithValue("@nombre", ficha.Venta.cliNombre)
                                    xcmd.Parameters.AddWithValue("@dir_fiscal", ficha.Venta.cliDirFiscal)
                                    xcmd.Parameters.AddWithValue("@ci_rif", ficha.Venta.cliCiRif)
                                    xcmd.Parameters.AddWithValue("@tipo", "04")
                                    xcmd.Parameters.AddWithValue("@exento", ficha.Venta.montoExento)
                                    xcmd.Parameters.AddWithValue("@base1", ficha.Venta.montoBase1)
                                    xcmd.Parameters.AddWithValue("@base2", ficha.Venta.montoBase2)
                                    xcmd.Parameters.AddWithValue("@base3", ficha.Venta.montoBase3)
                                    xcmd.Parameters.AddWithValue("@impuesto1", ficha.Venta.montoImpuesto1)
                                    xcmd.Parameters.AddWithValue("@impuesto2", ficha.Venta.montoImpuesto2)
                                    xcmd.Parameters.AddWithValue("@impuesto3", ficha.Venta.montoImpuesto3)
                                    xcmd.Parameters.AddWithValue("@base", ficha.Venta.montoBase)
                                    xcmd.Parameters.AddWithValue("@impuesto", ficha.Venta.montoImpuesto)
                                    xcmd.Parameters.AddWithValue("@total", ficha.Venta.montoTotal)
                                    xcmd.Parameters.AddWithValue("@tasa1", ficha.Venta.tasa1)
                                    xcmd.Parameters.AddWithValue("@tasa2", ficha.Venta.tasa2)
                                    xcmd.Parameters.AddWithValue("@tasa3", ficha.Venta.tasa3)
                                    xcmd.Parameters.AddWithValue("@nota", ficha.Venta.Notas)
                                    xcmd.Parameters.AddWithValue("@tasa_retencion_iva", 0D)
                                    xcmd.Parameters.AddWithValue("@tasa_retencion_islr", 0D)
                                    xcmd.Parameters.AddWithValue("@retencion_iva", 0D)
                                    xcmd.Parameters.AddWithValue("@retencion_islr", 0D)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                    xcmd.Parameters.AddWithValue("@codigo_entidad", ficha.Venta.cliCodigo)
                                    xcmd.Parameters.AddWithValue("@mes_relacion", fechaSistema.Month.ToString().Trim().PadLeft(2, "0"))
                                    xcmd.Parameters.AddWithValue("@control", ficha.Venta.control)
                                    xcmd.Parameters.AddWithValue("@fecha_relacion", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@orden_compra", ficha.Venta.ordeCompra)
                                    xcmd.Parameters.AddWithValue("@dias", ficha.Venta.diasCredito)
                                    xcmd.Parameters.AddWithValue("@descuento1", ficha.Venta.montoDescuento)
                                    xcmd.Parameters.AddWithValue("@descuento2", 0D)
                                    xcmd.Parameters.AddWithValue("@cargos", ficha.Venta.montoCargo)
                                    xcmd.Parameters.AddWithValue("@descuento1_porcentaje", ficha.Venta.porcDescuento)
                                    xcmd.Parameters.AddWithValue("@descuento2_porcentaje", 0D)
                                    xcmd.Parameters.AddWithValue("@cargos_porcentaje", ficha.Venta.porcCargo)
                                    xcmd.Parameters.AddWithValue("@columna", "1")
                                    xcmd.Parameters.AddWithValue("@estatus", "0")
                                    xcmd.Parameters.AddWithValue("@aplica", "")
                                    xcmd.Parameters.AddWithValue("@comprobante_retencion", "")
                                    xcmd.Parameters.AddWithValue("@subtotal", ficha.Venta.subTotal)
                                    xcmd.Parameters.AddWithValue("@telefono", ficha.Venta.cliTelefono)
                                    xcmd.Parameters.AddWithValue("@factor_cambio", ficha.Venta.factorCambio)
                                    xcmd.Parameters.AddWithValue("@codigo_vendedor", ficha.Venta.vendCodigo)
                                    xcmd.Parameters.AddWithValue("@vendedor", ficha.Venta.vendNombre)
                                    xcmd.Parameters.AddWithValue("@auto_vendedor", ficha.Venta.vendAuto)
                                    xcmd.Parameters.AddWithValue("@fecha_pedido", ficha.Venta.fechaPedido)
                                    xcmd.Parameters.AddWithValue("@pedido", ficha.Venta.numPedido)
                                    xcmd.Parameters.AddWithValue("@condicion_pago", ficha.Venta.condPago)
                                    xcmd.Parameters.AddWithValue("@usuario", ficha.Venta.usuNombre)
                                    xcmd.Parameters.AddWithValue("@codigo_usuario", ficha.Venta.usuCodigo)
                                    xcmd.Parameters.AddWithValue("@codigo_sucursal", "")
                                    xcmd.Parameters.AddWithValue("@hora", horaSistema)
                                    xcmd.Parameters.AddWithValue("@transporte", "")
                                    xcmd.Parameters.AddWithValue("@codigo_transporte", "")
                                    xcmd.Parameters.AddWithValue("@monto_divisa", ficha.Venta.montoDivisa)
                                    xcmd.Parameters.AddWithValue("@despachado", "")
                                    xcmd.Parameters.AddWithValue("@dir_despacho", ficha.Venta.cliDirDespacho)
                                    xcmd.Parameters.AddWithValue("@estacion", ficha.Venta.estacionEquipo)
                                    xcmd.Parameters.AddWithValue("@auto_recibo", autoReciboCxC)
                                    xcmd.Parameters.AddWithValue("@recibo", numReciboCxC)
                                    xcmd.Parameters.AddWithValue("@renglones", ficha.Venta.renglones)
                                    xcmd.Parameters.AddWithValue("@saldo_pendiente", ficha.Venta.saldoPend)
                                    xcmd.Parameters.AddWithValue("@ano_relacion", fechaSistema.Year.ToString().Trim().PadLeft(4, "0"))
                                    xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", "")
                                    xcmd.Parameters.AddWithValue("@dias_validez", 0)
                                    xcmd.Parameters.AddWithValue("@nrf", ficha.Venta.serieSerial)
                                    xcmd.Parameters.AddWithValue("@auto_usuario", ficha.Venta.usuAuto)
                                    xcmd.Parameters.AddWithValue("@auto_jornada", "")
                                    xcmd.Parameters.AddWithValue("@auto_operador", "")
                                    xcmd.Parameters.AddWithValue("@serie", ficha.Venta.serieNombre)
                                    xcmd.Parameters.AddWithValue("@serial", "")
                                    xcmd.Parameters.AddWithValue("@bloquear_almacen", ficha.Venta.bloquearAlmacen)
                                    xcmd.Parameters.AddWithValue("@origen_documento", "01")
                                    xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", "")
                                    xcmd.Parameters.AddWithValue("@rest_servicio_tasa", 0D)
                                    xcmd.Parameters.AddWithValue("@rest_servicio_monto", 0D)
                                    xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", "")
                                    xcmd.Parameters.AddWithValue("@descuento_por_prontopago", 0D)
                                    xcmd.Parameters.AddWithValue("@relacion_z", ficha.Venta.zFiscal)
                                    xcmd.Parameters.AddWithValue("@estatus_divisa", "0")
                                    xcmd.ExecuteNonQuery()


                                    'VENTAS_DETALLE
                                    Dim idItem As Integer = 0
                                    For Each det In ficha.VentaDetalles
                                        errorSistema = "INSERTAR VENTA DETALLE"
                                        idItem += 1
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@auto_productos", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@codigo", det.prdCodigo)
                                        xcmd.Parameters.AddWithValue("@nombre", det.prdDescripcion)
                                        xcmd.Parameters.AddWithValue("@auto_departamento", det.departAuto)
                                        xcmd.Parameters.AddWithValue("@auto_grupo", det.grupoAuto)
                                        xcmd.Parameters.AddWithValue("@auto_subgrupo", det.subGrupAuto)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad", det.cantidad)
                                        xcmd.Parameters.AddWithValue("@empaque", det.empaque)
                                        xcmd.Parameters.AddWithValue("@descuento1p", det.descPorc_1)
                                        xcmd.Parameters.AddWithValue("@descuento2p", det.descPorc_2)
                                        xcmd.Parameters.AddWithValue("@descuento3p", det.descPorc_3)
                                        xcmd.Parameters.AddWithValue("@descuento1", det.descMonto_1)
                                        xcmd.Parameters.AddWithValue("@descuento2", det.descMonto_2)
                                        xcmd.Parameters.AddWithValue("@descuento3", det.descMonto_3)
                                        xcmd.Parameters.AddWithValue("@total_neto", det.totalNeto)
                                        xcmd.Parameters.AddWithValue("@tasa", det.tasaIva)
                                        xcmd.Parameters.AddWithValue("@impuesto", det.impuesto)
                                        xcmd.Parameters.AddWithValue("@total", det.total)
                                        xcmd.Parameters.AddWithValue("@auto", idItem.ToString().Trim().PadLeft(10, "0"))
                                        xcmd.Parameters.AddWithValue("@codigo_tasa", det.codigoTasaIva)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@tipo", "04")
                                        xcmd.Parameters.AddWithValue("@deposito", ficha.Venta.depNombre)
                                        xcmd.Parameters.AddWithValue("@signo", 1)
                                        xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                        xcmd.Parameters.AddWithValue("@decimales", det.medidaDecimales)
                                        xcmd.Parameters.AddWithValue("@contenido_empaque", det.contEmpaque)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.Parameters.AddWithValue("@costo_inventario", det.costoUnd)
                                        xcmd.Parameters.AddWithValue("@precio_neto", det.precioNeto)
                                        xcmd.Parameters.AddWithValue("@costo_venta", det.costo)
                                        xcmd.Parameters.AddWithValue("@precio_final", det.precioFinal)
                                        xcmd.Parameters.AddWithValue("@precio_inventario", det.precioInv)
                                        xcmd.Parameters.AddWithValue("@utilidad", det.utilidad)
                                        xcmd.Parameters.AddWithValue("@utilidadp", det.utilidadPorc)
                                        xcmd.Parameters.AddWithValue("@precio_item", det.precioItem)
                                        xcmd.Parameters.AddWithValue("@estatus_garantia", "0")
                                        xcmd.Parameters.AddWithValue("@estatus_serial", "0")
                                        xcmd.Parameters.AddWithValue("@codigo_deposito", ficha.Venta.depCodigo)
                                        xcmd.Parameters.AddWithValue("@dias_garantia", 0)
                                        xcmd.Parameters.AddWithValue("@detalle", det.detalle)
                                        xcmd.Parameters.AddWithValue("@psv", det.psv)
                                        xcmd.Parameters.AddWithValue("@empaque_tipo", det.empaqueTipo)
                                        xcmd.Parameters.AddWithValue("@estatus_corte", "0")
                                        xcmd.Parameters.AddWithValue("@x", 0D)
                                        xcmd.Parameters.AddWithValue("@y", 0D)
                                        xcmd.Parameters.AddWithValue("@z", 0D)
                                        xcmd.Parameters.AddWithValue("@corte", "0")
                                        xcmd.Parameters.AddWithValue("@categoria", det.categoria)
                                        xcmd.Parameters.AddWithValue("@N_esoferta", "")
                                        xcmd.Parameters.AddWithValue("@N_espesado", "0")
                                        xcmd.Parameters.AddWithValue("@N_codigobarra", "")
                                        xcmd.Parameters.AddWithValue("@N_plu", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_formato", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_depart", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_seccion", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_vendedor", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_plu", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_peso", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_precio", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_control", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_digitos", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_ticket", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", "")
                                        xcmd.Parameters.AddWithValue("@N_etiq_montoitem", 0D)
                                        xcmd.Parameters.AddWithValue("@N_etiq_numitem", 0)
                                        xcmd.Parameters.AddWithValue("@N_auto_jornada", "")
                                        xcmd.Parameters.AddWithValue("@N_auto_operador", "")
                                        xcmd.Parameters.AddWithValue("@N_automedida", det.medidaAuto)
                                        xcmd.Parameters.AddWithValue("@N_forzarmedida", det.medidaForzar)
                                        xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", det.confTipoCalcUtilidad)
                                        xcmd.Parameters.AddWithValue("@N_TipoMovimiento", "V")
                                        xcmd.Parameters.AddWithValue("@n_auto_item_origen", "")
                                        xcmd.Parameters.AddWithValue("@n_nombre_corto", det.prdNombre)
                                        xcmd.Parameters.AddWithValue("@n_licor_capacidad", 0D)
                                        xcmd.Parameters.AddWithValue("@n_licor_grados", 0D)
                                        xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", "N")
                                        xcmd.ExecuteNonQuery()


                                        'PRODUCTOS_DEPOSITO
                                        xsql = "Update productos_deposito set real=real-@cantidad_inventario where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = xsql
                                        xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.ExecuteNonQuery()

                                        If det.provDocOrigen Then
                                            'PRODUCTOS_DEPOSITO
                                            xsql = "Update productos_deposito set disponible=real-reservada where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql
                                            xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                            xcmd.ExecuteNonQuery()
                                        Else
                                            xsql = "Update productos_deposito set reservada=reservada-@cantidad_inventario where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql
                                            xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                            xcmd.ExecuteNonQuery()
                                        End If

                                        Dim ent = ficha.Venta.cliNombre.Trim
                                        If ficha.Venta.cliNombre.Trim.Length > 50 Then
                                            ent = ficha.Venta.cliNombre.Trim.Substring(0, 50)
                                        End If
                                        'PRODUCTOS_KARDEX
                                        errorSistema = "INSERTAR KARDEX"
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", det.prdAuto)
                                        xcmd.Parameters.AddWithValue("@fecha", fechaSistema)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", ficha.Venta.depAuto)
                                        xcmd.Parameters.AddWithValue("@cantidad", det.cantidad)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", ficha.Venta.conceptoAuto)
                                        xcmd.Parameters.AddWithValue("@entidad", ent)
                                        xcmd.Parameters.AddWithValue("@documento", docNumero)
                                        xcmd.Parameters.AddWithValue("@medida_empaque", det.empaqueTipo)
                                        xcmd.Parameters.AddWithValue("@signo", -1)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", det.cantUnd)
                                        xcmd.Parameters.AddWithValue("@estatus", "0")
                                        xcmd.Parameters.AddWithValue("@origen", "0804")
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@nota", "")
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", det.prdDescripcion)
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", ficha.Venta.depNombre)
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", ficha.Venta.conceptoNombre)
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", det.medidaNombre)
                                        xcmd.Parameters.AddWithValue("@n_automedida", det.medidaAuto)
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", det.contEmpaque)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", det.prdCodigo)
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", ficha.Venta.depCodigo)
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", ficha.Venta.conceptoCodigo)
                                        xcmd.ExecuteNonQuery()
                                    Next

                                    'VENTAS_MEDIDAS
                                    For Each it In ficha.VentaMedidas
                                        xcmd.Parameters.Clear()
                                        errorSistema = "INSERTAR VENTA MEDIDA"
                                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                        xcmd.Parameters.AddWithValue("@auto_documento", autoDoc)
                                        xcmd.Parameters.AddWithValue("@auto_medida", it.autoMedida)
                                        xcmd.Parameters.AddWithValue("@total_medida", it.cantidad)
                                        xcmd.Parameters.AddWithValue("@decimales", it.decimales)
                                        xcmd.Parameters.AddWithValue("@nombre", it.nombreMedida)
                                        xcmd.ExecuteNonQuery()
                                    Next


                                    'ACTUALIZO CLIENTE
                                    Dim t_debito As Single = 0
                                    Dim t_credito As Single = 0
                                    Dim t_saldo As Single = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                    t_debito = xcmd.ExecuteScalar()

                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                    t_credito = xcmd.ExecuteScalar()

                                    xcmd.Parameters.Clear()
                                    xcmd.Parameters.AddWithValue("@auto_cliente", ficha.Venta.cliAuto)
                                    xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                    t_saldo = xcmd.ExecuteScalar()


                                    'CLIENTES
                                    Dim xr_cliente As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE CLIENTES SET " _
                                      + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                      + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos-@total_anticipos, " _
                                      + "fecha_ult_compra=@fecha_ult_compra where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                    xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                    xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                    xcmd.Parameters.AddWithValue("@fecha_ult_compra", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@total_anticipos", 0D)
                                    xcmd.Parameters.AddWithValue("@auto", ficha.Venta.cliAuto)
                                    xcmd.ExecuteNonQuery()


                                    'TABLA TEMPORALVENTA
                                    For Each it In ficha.VentaTemp
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "delete temporalventa where autoItem=@autoItem"
                                        xcmd.Parameters.AddWithValue("@autoItem", it.idItem)
                                        xcmd.ExecuteNonQuery()
                                    Next


                                    'TABLA VENTAS_PEDIDOS_OTROS
                                    errorSistema = "INSERTAR VENTA PEDIDA OTROS"
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                    xcmd.Parameters.AddWithValue("@auto_doc_origen", documentos.DocInvloucrado.autoDoc)
                                    xcmd.Parameters.AddWithValue("@auto_doc_venta", autoDoc)
                                    xcmd.Parameters.AddWithValue("@fechaemision_origen", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@fechaproceso", fechaSistema)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", ficha.Venta.cliAuto)
                                    xcmd.Parameters.AddWithValue("@ci_rif_entidad", ficha.Venta.cliCiRif)
                                    xcmd.Parameters.AddWithValue("@nombre_entidad", ficha.Venta.cliNombre)
                                    xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", documentos.DocInvloucrado.diasValidezDoc)
                                    xcmd.Parameters.AddWithValue("@tipodocumento_origen", documentos.DocInvloucrado.tipoDoc)
                                    xcmd.Parameters.AddWithValue("@numdocumento_origen", documentos.DocInvloucrado.numDoc)
                                    xcmd.Parameters.AddWithValue("@numdocumento_venta", docNumero)
                                    xcmd.ExecuteNonQuery()
                                Next


                                ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc"
                                xcmd.Parameters.AddWithValue("@autodoc", documentos.DocInvloucrado.autoDoc)
                                Dim xres = xcmd.ExecuteNonQuery()
                                If xres = 0 Then
                                    Throw New Exception("PROBLEMA AL ACTUALIZAR PEDIDO [ ESTATUS PROCESADO ]")
                                End If


                                xtr.Commit()
                                result.CntDoc = cntDoc


                                'HABILITAR MENSAJES DE TRUNCAMIENTO
                                xxsql = "SET ANSI_WARNINGS  ON"
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xxsql
                                xcmd.ExecuteNonQuery()
                            End Using
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                With result
                                    .Mensaje = "YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE"
                                    .IsError = True
                                End With
                            ElseIf xsql.Number = 547 Then
                                With result
                                    .Mensaje = "CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO"
                                    .IsError = True
                                End With
                            Else
                                With result
                                    .Mensaje = errorSistema + xsql.Message + vbCrLf + xsql.Number.ToString
                                    .IsError = True
                                End With
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            With result
                                .Mensaje = errorSistema + ex.Message
                                .IsError = True
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = errorSistema + ex.Message
                        .IsError = True
                    End With
                End Try

                Return result
            End Function

            Function F_Pedido_CambiarEstatusProcesado_Activo(ByVal ficha As Pedido_CambioEstatusActivo) As Resultado
                Dim result = New Resultado

                Try
                    Dim xtb = New DataTable
                    Dim xsql = "Select v.auto FROM ventas_presupuestopedidootros as r " +
                               "join ventas as v on r.auto_doc_venta =v.auto where auto_doc_origen=@autoDoc and v.estatus='0' "
                    Using xcon As New SqlClient.SqlDataAdapter(xsql, _MiCadenaConexion)
                        xcon.SelectCommand.Parameters.Clear()
                        xcon.SelectCommand.Parameters.AddWithValue("@autoDoc", ficha.autoDoc)
                        xcon.Fill(xtb)
                    End Using
                    If xtb.Rows.Count > 0 Then
                        Throw New Exception("PROBLEMA AL ACTUALIZAR ESTATUS DEL DOCUMENTO, EXISTEN DOCUMENTOS RELACIONADOS ACTIVOS")
                    End If

                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        Dim xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                xsql = "update ventas set estatus='0' where auto=@autoDoc"
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql
                                xcmd.Parameters.AddWithValue("@autoDoc", ficha.autoDoc)
                                Dim xr = xcmd.ExecuteNonQuery()
                                If xr = 0 Then
                                    Throw New Exception("PROBLEMA AL ACTUALIZAR PEDIDO [ ESTATUS PROCESADO ]")
                                End If

                                For Each it In ficha.items
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update productos_deposito set reservada=reservada+@cnt " +
                                    "where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.AddWithValue("@cnt", it.cnt)
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.auto_producto)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.auto_deposito)
                                    If xcmd.ExecuteNonQuery() = 0 Then
                                        Throw New Exception("PROBLEMA AL TRATAR DE COLOCAR LA MERCANCIA EN RESERVADA PARA: " + it.nombrePrd)
                                    End If

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update productos_deposito set disponible=real-reservada " +
                                    "where auto_producto=@autoPrd and auto_deposito=@autoDep"
                                    xcmd.Parameters.AddWithValue("@autoPrd", it.auto_producto)
                                    xcmd.Parameters.AddWithValue("@autoDep", it.auto_deposito)
                                    If xcmd.ExecuteNonQuery() = 0 Then
                                        Throw New Exception("PROBLEMA AL TRATAR DE COLOCAR LA MERCANCIA EN DISPONIBLE PARA: " + it.nombrePrd)
                                    End If
                                Next

                                xtr.Commit()
                            End Using
                        Catch ex As Exception
                            xtr.Rollback()
                            With result
                                .Mensaje = ex.Message
                                .Result = Resultado.EnumResult.isError
                            End With
                        End Try
                    End Using
                Catch ex As Exception
                    With result
                        .Mensaje = ex.Message
                        .Result = Resultado.EnumResult.isError
                    End With
                End Try

                Return result
            End Function



            Function F_GrabarVenta(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
                                   ByVal xpagos As List(Of FichaCtasCobrar.c_ModosPago.AgregarModoPago), _
                                   ByVal xcondiciones As CondicionesParaVenta, ByVal ximpresora As ModoImprimirFactura)

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_2 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
                Dim xsql_3 As String = "update series_fiscales set correlativo=correlativo+1, estatus_fiscal='1' where nombre=@nombre;" _
                                      + "select correlativo from series_fiscales where nombre=@nombre"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                'Tabla Usada Para Lista De Productos Para La Impresora Fiscal
                Dim xtablaprd As New DataTable
                With xtablaprd
                    .Columns.Add("cantidad", GetType(System.Decimal))
                    .Columns.Add("nombre", GetType(System.String))
                    .Columns.Add("codigo", GetType(System.String))
                    .Columns.Add("descuento1p", GetType(System.Decimal))
                    .Columns.Add("precio_neto", GetType(System.Decimal))
                    .Columns.Add("codigo_tasa", GetType(System.String))
                    .Columns.Add("detalle", GetType(System.String))
                    .Columns.Add("SUBDETALLE", GetType(System.String))
                End With

                Dim xtr As SqlTransaction = Nothing
                Try
                    Dim xfiscal As New FichaGlobal.c_SeriesFiscales
                    Dim xtb As New DataTable
                    Using xadap As New SqlDataAdapter("select * from series_fiscales where nombre=@nombre", _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                        xadap.Fill(xtb)
                    End Using

                    If xtb.Rows.Count > 0 Then
                        xfiscal.M_CargarFicha(xtb(0))
                    Else
                        Throw New Exception("ERROR... SERIE NO REGISTRADA, VERIFIQUE")
                    End If

                    If xfiscal.RegistroDato.r_EstatusSerie = TipoEstatus.Activo Then
                        If xfiscal.RegistroDato.r_EstatusParaVentas = TipoEstatus.Activo Then
                        Else
                            Throw New Exception("ERROR... SERIE NO ASIGNADA PARA EFECTUAR VENTAS, VERIFIQUE")
                        End If
                    Else
                        Throw New Exception("ERROR... SERIE ESTA EN ESTADO INACTVIO, VERIFIQUE")
                    End If


                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    'If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                    '    Dim xd1 As Decimal = 0
                    '    Dim xd2 As Decimal = 0
                    '    Dim xd3 As Decimal = 0
                    '    Dim xd4 As Decimal = 0
                    '    xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                    '    xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    'End If

                    'If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                    '    Dim xd1 As Decimal = 0
                    '    Dim xd2 As Decimal = 0
                    '    Dim xd3 As Decimal = 0
                    '    Dim xd4 As Decimal = 0
                    '    xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                    '    xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    'End If

                    'If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                    '    Dim xc1 As Decimal = 0
                    '    Dim xc2 As Decimal = 0
                    '    Dim xc3 As Decimal = 0
                    '    Dim xc4 As Decimal = 0
                    '    xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                    '    xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    '    xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    'End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    'ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    'ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    'ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    ximp1 = (xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100)
                    ximp2 = (xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100)
                    ximp3 = (xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100)

                    Dim tg As Decimal = (xexento + xb1 + xb2 + xb3 + ximp1 + ximp2 + ximp3)
                    tg = Decimal.Round(tg, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = Decimal.Round(xb1, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Base2.c_Valor = Decimal.Round(xb2, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Base3.c_Valor = Decimal.Round(xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = Decimal.Round(xexento, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Impuesto1.c_Valor = Decimal.Round(ximp1, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Impuesto2.c_Valor = Decimal.Round(ximp2, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Impuesto3.c_Valor = Decimal.Round(ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    'xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                    '                       xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = tg

                    xventa.RegistroDato.c_MontoDescuento_1.c_Valor = xventa.DsctoGeneralMonto
                    xventa.RegistroDato.c_MontoDescuento_2.c_Valor = 0
                    xventa.RegistroDato.c_MontoCargo.c_Valor = xventa.CargoGeneralMonto
                    xventa.RegistroDato.c_MontoSubTotal.c_Valor = xventa.SubTotal_1

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        If ._CondicionPago = TipoCondcionPago.Contado Then
                            .c_MontoSaldoPendiente.c_Valor = 0
                        Else
                            .c_MontoSaldoPendiente.c_Valor = .c_TotalGeneral.c_Valor
                        End If
                        .c_SerialImpresoraFiscal.c_Texto = xfiscal.RegistroDato.r_SerialFiscal
                        .c_BloquearAlmacen.c_Texto = IIf(xcondiciones._Permitir_RupturaPorExistencia, "1", "0")
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If

                        If xventa._f_FichaDocumentoOrigen IsNot Nothing Then
                            .c_NumeroPedido.c_Texto = xventa._f_FichaDocumentoOrigen._Documento
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
                    End With

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto
                            .RegistroDato.c_TipoMovimiento.c_Texto = "V"
                            .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

                            Dim x0 As Decimal = 0
                            x0 = .RegistroDato.c_PrecioNeto.c_Valor

                            .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioItem.c_Valor = x0

                            Dim x1 As Decimal = 0
                            x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_TotalNeto.c_Valor = x1

                            Dim x2 As Decimal = 0
                            x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_MontoIva.c_Valor = x2
                            .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                            Dim x3 As Decimal = 0
                            x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                            Dim x4 As Decimal = x0
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioFinal.c_Valor = x4
                            .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                            Dim x5 As Decimal = 0
                            Dim x6 As Decimal = 0
                            x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                            x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                            .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                            If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                            Else
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                            End If

                            If xcondiciones._Permitir_PrecioCero = True Then
                            Else
                                If x4 = 0 Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
                                End If
                            End If

                            If xcondiciones._Permitir_PrecioMenorCosto = True Then
                            Else
                                If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
                                End If
                            End If
                        End With

                        xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                       ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                       ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                       ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
                    Next

                    'VERIFICO LIMITE DE DOCUMENTOS DEL CLIENTE / LIMITE DE CREDITO
                    If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Credito Then
                        Dim xcliente As New FichaClientes
                        xcliente.F_BuscarCliente(xventa.RegistroDato._AutoCliente)
                        If (xcliente.f_Clientes.RegistroDato.r_LimiteCreditoPermitido = 0) Or (xcliente.f_Clientes.RegistroDato.r_CreditoDisponible >= xventa.RegistroDato.c_TotalGeneral.c_Valor) Then
                            If xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos > 0 Then
                                If (xcliente.f_Clientes.RegistroDato.r_CantidadDocPendientes + 1) > xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos Then
                                    Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE DOCUMENTOS PENDIENTES DE CREDITO, VERIFIQUE")
                                End If
                            End If
                        Else
                            Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE CREDITO, VERIFIQUE")
                        End If
                    End If

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CONTADOR AUTOMATICO CXC
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                autocxc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE SERIES FISCALES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                                'xventa.RegistroDato.c_Documento.c_Texto = xventa.RegistroDato._SerieFiscalAsignada + _
                                '                 xcmd.ExecuteScalar().ToString.Trim.PadLeft(10 - xventa.RegistroDato._SerieFiscalAsignada.Length, "0")
                                xventa.RegistroDato.c_Documento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo

                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'CXC, sea Contado / Credito
                                Dim xcxc_doc_factura As New FichaCtasCobrar.c_CxC.c_Registro
                                With xcxc_doc_factura
                                    .c_AutoAgencia.c_Texto = ""
                                    .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                    .c_AutoCxC.c_Texto = autocxc
                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                    .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                    .c_EstatusCancelado.c_Texto = "0"
                                    .c_EstatusDocumentoCxC.c_Texto = "0"
                                    .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                    .c_MontoAcumulado.c_Valor = 0
                                    .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                    .c_MontoPorCobrar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                    .c_NombreAgencia.c_Texto = ""
                                    .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                    .c_NotasDetalles.c_Texto = "DOCUMENTO DE VENTA"
                                    .c_Numero.c_Texto = ""
                                    .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                    .c_TipoDocumento.c_Texto = "FAC"
                                    .c_TipoMovimiento.c_Valor = 1
                                    .c_TipoOperacion.c_Texto = ""
                                    .c_AutoMovimientoEntrada.c_Texto = ""

                                    'Nuevo
                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                End With

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_factura.c_FechaProceso.c_Valor)
                                xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_factura.c_TipoDocumento.c_Texto).Size = xcxc_doc_factura.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xcxc_doc_factura.c_NumeroDocumento.c_Texto).Size = xcxc_doc_factura.c_NumeroDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_factura.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_factura.c_NotasDetalles.c_Texto).Size = xcxc_doc_factura.c_NotasDetalles.c_Largo
                                xcmd.Parameters.AddWithValue("@importe", xcxc_doc_factura.c_MontoImporte.c_Valor)
                                xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_factura.c_MontoAcumulado.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_factura.c_AutoCliente.c_Texto).Size = xcxc_doc_factura.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_factura.c_NombreCliente.c_Texto).Size = xcxc_doc_factura.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_factura.c_CiRifCliente.c_Texto).Size = xcxc_doc_factura.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_factura.c_CodigoCliente.c_Texto).Size = xcxc_doc_factura.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_factura.c_EstatusCancelado.c_Texto).Size = xcxc_doc_factura.c_EstatusCancelado.c_Largo
                                xcmd.Parameters.AddWithValue("@resta", xcxc_doc_factura.c_MontoPorCobrar.c_Valor)
                                xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_factura.c_TipoOperacion.c_Texto).Size = xcxc_doc_factura.c_TipoOperacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_factura.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_factura.c_EstatusDocumentoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_factura.c_AutoDocumento.c_Texto).Size = xcxc_doc_factura.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@numero", xcxc_doc_factura.c_Numero.c_Texto).Size = xcxc_doc_factura.c_Numero.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_factura.c_AutoAgencia.c_Texto).Size = xcxc_doc_factura.c_AutoAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_factura.c_NombreAgencia.c_Texto).Size = xcxc_doc_factura.c_NombreAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@signo", xcxc_doc_factura.c_TipoMovimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
                                Dim auto_concepto As Object = Nothing
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto from productos_conceptos where codigo='VENTAS'"
                                auto_concepto = xcmd.ExecuteScalar()
                                If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
                                    Throw New Exception("CONCEPTO 'VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                End If

                                Dim xconcepto As String = ""
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                xcmd.Parameters.AddWithValue("@auto", auto_concepto)
                                xconcepto = xcmd.ExecuteScalar

                                'ACTUALIZO DEPOSITO, SI EXISTE UN DOCUMENTO TIPO PEDIDO LA CUAL BLOQUEA LA EXISTENCIA
                                Dim xdoc_origen As FichaVentas.V_Ventas.c_Registro = Nothing
                                Dim xtablaNotaEnt As New DataTable
                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    Dim xdr As SqlDataReader
                                    Dim xtb1 As New DataTable
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select * from ventas where auto=@autodoc"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xdr = xcmd.ExecuteReader()
                                    xtb1.Load(xdr)
                                    xdr.Close()

                                    If xtb1.Rows.Count = 0 Then
                                        Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    End If

                                    xdoc_origen = New FichaVentas.V_Ventas.c_Registro
                                    xdoc_origen.CargarRegistro(xtb1.Rows(0))

                                    If xdoc_origen._EstatusDocumento = TipoEstatus.Inactivo Then
                                        Throw New Exception("DOCUMENTO ORIGEN HA SIDO ANULADO POR OTRO USUARIO / NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    Else
                                        'GENERO UNA TABLA LA CUAL GUARDA LA CANTIDAD TOTAL EN INVENTARIO USADA POR CADA PRODUCTO
                                        Dim xtabla_inv As New DataTable
                                        Dim xrd_inv As SqlDataReader
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select auto_productos, SUM(cantidad_inventario) as xcantidad ,auto_deposito " & _
                                                            "from ventas_detalle where auto_documento=@auto_doc_origen group by auto_productos,auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_doc_origen", xdoc_origen._AutoDocumento)
                                        xrd_inv = xcmd.ExecuteReader()
                                        xtabla_inv.Load(xrd_inv)

                                        If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                            If xdoc_origen._BloquearExistencia = True Then
                                                ' ACTUALIZO EL DEPOSITO 
                                                For Each DR_INV As DataRow In xtabla_inv.Rows
                                                    Dim xres_1 As Integer = 0
                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = "update productos_deposito set reservada=reservada-@CANTIDAD, " & _
                                                       "disponible=disponible+@CANTIDAD from productos_deposito " & _
                                                       "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
                                                    xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
                                                    xres_1 = xcmd.ExecuteNonQuery()
                                                    If xres_1 = 0 Then
                                                        Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA  RESERVADA POR PEDIDO")
                                                    End If
                                                Next
                                            End If
                                        End If
                                        If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.NotaEntrega Then
                                            ' ACTUALIZO EL DEPOSITO 
                                            For Each DR_INV As DataRow In xtabla_inv.Rows
                                                Dim xres_1 As Integer = 0
                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = "update productos_deposito set real=real+@CANTIDAD, " & _
                                                   "disponible=disponible+@CANTIDAD from productos_deposito " & _
                                                   "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
                                                xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
                                                xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
                                                xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
                                                xres_1 = xcmd.ExecuteNonQuery()
                                                If xres_1 = 0 Then
                                                    Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA DESPACHADA POR N/ENTREGA")
                                                End If
                                            Next

                                            Dim xrd_notaent As SqlDataReader
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select * from ventas_detalle where auto_documento=@auto_doc"
                                            xcmd.Parameters.AddWithValue("@auto_doc", xdoc_origen._AutoDocumento)
                                            xrd_notaent = xcmd.ExecuteReader()
                                            xtablaNotaEnt.Load(xrd_notaent)
                                        End If
                                    End If
                                End If

                                'VERIFICO SI HAY REGISTROS EN NOTAS DE ENTREGA, PARA EVALUAR CUALES FUERON PROCESADOS Y CUALES NO
                                For Each xrd_ne As DataRow In xtablaNotaEnt.Rows
                                    Dim xitem As String = xrd_ne("auto").ToString.Trim
                                    Dim xcant_ne As Decimal = xrd_ne("cantidad_inventario")
                                    Dim xvent As Boolean = False
                                    Dim xcant_vt As Decimal = 0
                                    Dim xcant_vt_unid As Decimal = 0

                                    Dim xdetalle_ne As New FichaVentas.V_VentasDetalle
                                    xdetalle_ne.F_BuscarCargar(xdoc_origen._AutoDocumento, xitem)

                                    For Each xdetalle As FichaVentas.V_VentasDetalle.AgregarDetalleVenta In xventadetalle
                                        If xdetalle._FichaItem_DocOrigen IsNot Nothing Then
                                            If xitem = xdetalle._FichaItem_DocOrigen._AutoItem Then
                                                xvent = True
                                                xcant_vt = xdetalle.RegistroDato._CantidadDespachada
                                                xcant_vt_unid = xdetalle.RegistroDato._CantidadUnidadInventario
                                                Exit For
                                            End If
                                        End If
                                    Next

                                    'VERIFICO SI EL PRODUCTO FUE FACTURADO, Y QUE CANTIDAD FUE DESPACHADA
                                    If xvent = True Then
                                        'VERIFICO SI LA CANTIDAD DESPACHA EN VENTA ES LA MISMA A LA DE NOTA DE ENTREGA
                                        If xcant_ne = xcant_vt_unid Then
                                            ' SE REALIZA UN AJUSTE AUTORIZADO PARA DAR ENTRADA AL PRODUCTO PROCESADO POR LA NOTA DE ENTREGE PARA LUEGO HACER UNA SALIDA DEL MISMO POR VENTA

                                            Dim auto_concepto_ajuste As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
                                            auto_concepto_ajuste = xcmd.ExecuteScalar()
                                            If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
                                                Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_ajuste As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
                                            xconcepto_ajuste = xcmd.ExecuteScalar

                                            Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_ajuste
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
                                                .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN SU TOTALIDAD SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_ajuste
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "AJUSTE"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If

                                        Else
                                            'SE HACE UN AJUSTE AUTORIZADO SOLICITANDO LA ENTRADA DE LO FACTURADO 

                                            Dim auto_concepto_ajuste As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
                                            auto_concepto_ajuste = xcmd.ExecuteScalar()
                                            If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
                                                Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_ajuste As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
                                            xconcepto_ajuste = xcmd.ExecuteScalar

                                            Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_ajuste
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xcant_vt
                                                .c_CantidadUnidadesMover.c_Valor = xcant_vt_unid
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN PARTE SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_ajuste
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "AJUSTE"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If


                                            ' DEBO HACER UNA DEVOLUCION DEL SOBRANTE PARA KARDEX

                                            Dim auto_concepto_dev As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                            auto_concepto_dev = xcmd.ExecuteScalar()
                                            If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
                                                Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_dev As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
                                            xconcepto_dev = xcmd.ExecuteScalar

                                            xkardex = New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_dev
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada - xcant_vt
                                                .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario - xcant_vt_unid
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "SIN PROCESAR SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_dev
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If

                                        End If
                                    Else
                                        'SIGNIFICA QUE SE DEBE HACER UNA DEVOLUCION TOTAL DEL ITEM PARA EL KARDEX

                                        Dim auto_concepto_dev As Object = Nothing
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                        auto_concepto_dev = xcmd.ExecuteScalar()
                                        If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
                                            Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                        End If

                                        Dim xconcepto_dev As String = ""
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                        xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
                                        xconcepto_dev = xcmd.ExecuteScalar

                                        Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                        With xkardex
                                            .c_AutoConcepto.c_Texto = auto_concepto_dev
                                            .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                            .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                            .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                            .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
                                            .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
                                            .c_Documento.c_Texto = xdoc_origen._Documento
                                            .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                            .c_Estatus.c_Texto = "0"
                                            .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                            .c_NotasDetallesMovimiento.c_Texto = "NO SE PROCESO EN FACTURA #: " + xventa.RegistroDato._Documento
                                            .c_OrigenMovimiento.c_Texto = "0801"
                                            .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                            .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                            'Campos Nuevos
                                            .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                            .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                            .c_NombreConcepto.c_Texto = xconcepto_dev
                                            .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                            .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                            .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                            .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                            .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                            .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                        End With

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                        xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                        xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                        xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                        xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                        'Campos Nuevos
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                        If xcmd.ExecuteNonQuery() = 0 Then
                                            Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                        End If
                                    End If
                                Next


                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_DEPOSITO
                                    If xdetalle._DepositoBloqueado Then
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.PRODUCTOS_DEPOSITO_DESBLOQUEAR
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    If xcondiciones._Permitir_RupturaPorExistencia Then
                                        Dim xdisp As Decimal = 0
                                        Dim xreal As Decimal = 0

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xdisp = xcmd.ExecuteScalar()

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select real from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xreal = xcmd.ExecuteScalar()

                                        ''27/06/2018
                                        If xdoc_origen IsNot Nothing Then
                                            If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                                If xdoc_origen._BloquearExistencia Then
                                                    If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                                    Else
                                                        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                                    End If
                                                End If
                                            Else
                                                If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                                Else
                                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                                End If

                                                If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                                Else
                                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                                End If
                                            End If
                                        Else
                                            If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                            Else
                                                Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                            End If

                                            If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                            Else
                                                Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                            End If
                                        End If

                                        ' '' 12/06/2018
                                        'If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                        '    If xdoc_origen._BloquearExistencia Then
                                        '        If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        '        Else
                                        '            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                        '        End If
                                        '    End If
                                        'Else
                                        '    If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        '    Else
                                        '        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                        '    End If

                                        '    If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        '    Else
                                        '        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                        '    End If
                                        'End If

                                        'If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        'Else
                                        '    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                        'End If

                                        'If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        'Else
                                        '    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                        'End If
                                    End If

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
                                    xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_KARDEX
                                    Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                    With xkardex
                                        .c_AutoConcepto.c_Texto = auto_concepto
                                        .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
                                        .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                        .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
                                        .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_NotasDetallesMovimiento.c_Texto = ""
                                        .c_OrigenMovimiento.c_Texto = "0801"
                                        .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
                                        .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Salida
                                        'Campos Nuevos
                                        .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                        .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
                                        .c_NombreConcepto.c_Texto = xconcepto
                                        .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
                                        .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
                                        .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
                                        .c_CodigoProducto.c_Texto = xdetalle.RegistroDato._CodigoProducto
                                        .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato._CodigoDeposito
                                        .c_CodigoConcepto.c_Texto = "VENTAS"
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                    xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                    xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                    'Campos Nuevos
                                    xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                    xcmd.ExecuteNonQuery()

                                    'CARGAR REGISTRO DE PRODUCTO A IMPRRIMIR EN IMP FISCAL
                                    Dim dr As DataRow = xtablaprd.NewRow
                                    dr("cantidad") = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                    'dr("nombre") = "EMP:" + xdetalle.RegistroDato._NombreEmpaque.Trim + ", " + xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto.Trim
                                    dr("nombre") = xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto.Trim
                                    dr("codigo") = xdetalle.RegistroDato.c_CodigoProducto.c_Texto.Trim
                                    dr("descuento1p") = xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor
                                    dr("precio_neto") = xdetalle.RegistroDato.c_PrecioNeto.c_Valor
                                    dr("codigo_tasa") = xdetalle.RegistroDato._TipoTasaIva
                                    dr("detalle") = xdetalle.RegistroDato.c_DetalleNotas.c_Texto.Trim
                                    dr("SUBDETALLE") = ""

                                    Select Case ximpresora._SubDetalleFiscal_1.Trim.ToUpper
                                        Case "@CODIGO_PRODUCTO"
                                            dr("SUBDETALLE") += "COD:" + xdetalle.RegistroDato._CodigoProducto
                                        Case "@NOMBRE_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += "EMP:" + xdetalle.RegistroDato._NombreEmpaque
                                        Case "@CONTENIDO_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += "CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
                                        Case "@PRECIO_SUGERIDO_PRODUCTO"
                                            dr("SUBDETALLE") += "PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
                                        Case "@PRECIO_LIQUIDA_PRODUCTO"
                                            dr("SUBDETALLE") += "PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
                                    End Select

                                    Select Case ximpresora._SubDetalleFiscal_2.Trim.ToUpper
                                        Case "@CODIGO_PRODUCTO"
                                            dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
                                        Case "@NOMBRE_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
                                        Case "@CONTENIDO_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
                                        Case "@PRECIO_SUGERIDO_PRODUCTO"
                                            dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
                                        Case "@PRECIO_LIQUIDA_PRODUCTO"
                                            dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
                                    End Select

                                    Select Case ximpresora._SubDetalleFiscal_3.Trim.ToUpper
                                        Case "@CODIGO_PRODUCTO"
                                            dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
                                        Case "@NOMBRE_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
                                        Case "@CONTENIDO_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
                                        Case "@PRECIO_SUGERIDO_PRODUCTO"
                                            dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
                                        Case "@PRECIO_LIQUIDA_PRODUCTO"
                                            dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
                                    End Select

                                    Select Case ximpresora._SubDetalleFiscal_4.Trim.ToUpper
                                        Case "@CODIGO_PRODUCTO"
                                            dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
                                        Case "@NOMBRE_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
                                        Case "@CONTENIDO_EMPAQUE_PRODUCTO"
                                            dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
                                        Case "@PRECIO_SUGERIDO_PRODUCTO"
                                            dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
                                        Case "@PRECIO_LIQUIDA_PRODUCTO"
                                            dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
                                    End Select

                                    xtablaprd.Rows.Add(dr)

                                    'VERIFICO ESTATUS / EXISTENCIA DEL PRODUCTO 
                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If

                                    If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
                                        ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPARO CON PRECIO DE VENTA ACTUAL
                                        'Dim xres As Integer = 0
                                        'xcmd.Parameters.Clear()
                                        'xcmd.CommandType = CommandType.Text
                                        'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
                                        'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
                                        'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
                                        'xres = xcmd.ExecuteScalar()
                                        'If xres = 1 Then
                                        '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
                                        '    Throw New Exception(xmens)
                                        'End If
                                    End If
                                Next

                                'FACTURA CONTADO
                                Dim MontoNotaCredito As Decimal = 0
                                Dim CantNotaCredito As Decimal = 0
                                Dim MontoAnticipo As Decimal = 0
                                If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Contado Then
                                    For Each xpag In xpagos
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "NC00000001" Then
                                            MontoNotaCredito += xpag.RegsitroDato.c_MontoImporte.c_Valor
                                            CantNotaCredito += 1
                                        End If
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "AN00000001" Then
                                            MontoAnticipo += xpag.RegsitroDato.c_MontoImporte.c_Valor
                                        End If
                                    Next

                                    Dim autocxc_pago As String = ""
                                    Dim autocxc_recibopago As String = ""
                                    Dim autocxc_numerorecibopago As String = ""

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores SET a_cxc=a_cxc+1;select a_cxc from contadores"
                                    autocxc_pago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos=a_cxc_recibos+1;select a_cxc_recibos from contadores"
                                    autocxc_recibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1;select a_cxc_recibos_numero from contadores"
                                    autocxc_numerorecibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    'CXC, sea Contado / Credito
                                    Dim xcxc_doc_pago As New FichaCtasCobrar.c_CxC.c_Registro
                                    xcxc_doc_pago.LimpiarRegistro()
                                    With xcxc_doc_pago
                                        .c_AutoAgencia.c_Texto = ""
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCxC.c_Texto = autocxc_pago
                                        .c_AutoDocumento.c_Texto = ""
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_EstatusCancelado.c_Texto = ""
                                        .c_EstatusDocumentoCxC.c_Texto = "0"
                                        .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                        .c_MontoAcumulado.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_MontoImporte.c_Valor = (xventa.RegistroDato.c_TotalGeneral.c_Valor - MontoNotaCredito - MontoAnticipo)
                                        .c_MontoPorCobrar.c_Valor = 0
                                        .c_NombreAgencia.c_Texto = ""
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_Numero.c_Texto = ""
                                        .c_NumeroDocumento.c_Texto = autocxc_numerorecibopago
                                        .c_TipoDocumento.c_Texto = "PAG"
                                        .c_TipoMovimiento.c_Valor = -1
                                        .c_TipoOperacion.c_Texto = ""
                                        .c_AutoMovimientoEntrada.c_Texto = ""

                                        'Nuevo
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                    xcmd.Parameters.AddWithValue("@auto", xcxc_doc_pago.c_AutoCxC.c_Texto).Size = xcxc_doc_pago.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_pago.c_FechaProceso.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_pago.c_TipoDocumento.c_Texto).Size = xcxc_doc_pago.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xcxc_doc_pago.c_NumeroDocumento.c_Texto).Size = xcxc_doc_pago.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_pago.c_FechaVencimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_pago.c_NotasDetalles.c_Texto).Size = xcxc_doc_pago.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xcxc_doc_pago.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_pago.c_MontoAcumulado.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_pago.c_AutoCliente.c_Texto).Size = xcxc_doc_pago.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_pago.c_NombreCliente.c_Texto).Size = xcxc_doc_pago.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_pago.c_CiRifCliente.c_Texto).Size = xcxc_doc_pago.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_pago.c_CodigoCliente.c_Texto).Size = xcxc_doc_pago.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_pago.c_EstatusCancelado.c_Texto).Size = xcxc_doc_pago.c_EstatusCancelado.c_Largo
                                    xcmd.Parameters.AddWithValue("@resta", xcxc_doc_pago.c_MontoPorCobrar.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_pago.c_TipoOperacion.c_Texto).Size = xcxc_doc_pago.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_pago.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_pago.c_EstatusDocumentoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_pago.c_AutoDocumento.c_Texto).Size = xcxc_doc_pago.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xcxc_doc_pago.c_Numero.c_Texto).Size = xcxc_doc_pago.c_Numero.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_pago.c_AutoAgencia.c_Texto).Size = xcxc_doc_pago.c_AutoAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_pago.c_NombreAgencia.c_Texto).Size = xcxc_doc_pago.c_NombreAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xcxc_doc_pago.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_RECIBOS
                                    Dim xrecibo As New FichaCtasCobrar.c_Recibos.c_Registro
                                    With xrecibo
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCobrador.c_Texto = xventa._AutoCobrador
                                        .c_AutoRecibo.c_Texto = autocxc_recibopago
                                        .c_AutoUsuario.c_Texto = xventa.RegistroDato.c_AutoUsuario.c_Texto
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_DirFiscalCliente.c_Texto = xventa.RegistroDato.c_DirFiscalCliente.c_Texto
                                        .c_EstatusRecibo.c_Texto = "0"
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_MontoAnticipo.c_Valor = MontoAnticipo
                                        .c_MontoDescuento.c_Valor = 0
                                        .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_MontoImporteDocumento.c_Valor = 0
                                        .c_MontoTotalDocumento.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NombreCobrador.c_Texto = xventa._NombreCobrador
                                        .c_NombreUsuario.c_Texto = xventa.RegistroDato.c_Usuario.c_Texto
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_TelefonoCliente.c_Texto = xventa.RegistroDato.c_TelefonoCliente.c_Texto
                                        .c_CantidadDocumentosRelacionados.c_Valor = 1
                                        .c_CantNCPagadas.c_Valor = CantNotaCredito
                                        .c_MontoNCPagadas.c_Valor = MontoNotaCredito
                                        .c_AutoCxcPago.c_Texto = autocxc_pago
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
                                    xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xrecibo.c_NumeroRecibo.c_Texto).Size = xrecibo.c_NumeroRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xrecibo.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_usuario", xrecibo.c_AutoUsuario.c_Texto).Size = xrecibo.c_AutoUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xrecibo.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@usuario", xrecibo.c_NombreUsuario.c_Texto).Size = xrecibo.c_NombreUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe_documentos", xrecibo.c_MontoImporteDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuentos", xrecibo.c_MontoDescuento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_documentos", xrecibo.c_MontoTotalDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xrecibo.c_NotasDetalles.c_Texto).Size = xrecibo.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@cobrador", xrecibo.c_NombreCobrador.c_Texto).Size = xrecibo.c_NombreCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xrecibo.c_AutoCliente.c_Texto).Size = xrecibo.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre_cliente", xrecibo.c_NombreCliente.c_Texto).Size = xrecibo.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif_cliente", xrecibo.c_CiRifCliente.c_Texto).Size = xrecibo.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xrecibo.c_CodigoCliente.c_Texto).Size = xrecibo.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xrecibo.c_EstatusRecibo.c_Texto).Size = xrecibo.c_EstatusRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@direccion", xrecibo.c_DirFiscalCliente.c_Texto).Size = xrecibo.c_DirFiscalCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@telefono", xrecibo.c_TelefonoCliente.c_Texto).Size = xrecibo.c_TelefonoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cobrador", xrecibo.c_AutoCobrador.c_Texto).Size = xrecibo.c_AutoCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@anticipos", xrecibo.c_MontoAnticipo.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_doc_rel", xrecibo.c_CantidadDocumentosRelacionados.c_Valor)
                                    'campos nuevos
                                    xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xrecibo.c_MontoNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xrecibo.c_CantNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xrecibo.c_AutoCxcPago.c_Texto)
                                    xcmd.ExecuteNonQuery()

                                    'VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET " _
                                      + "recibo=@recibo, auto_recibo=@auto_recibo where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto)
                                    xcmd.Parameters.AddWithValue("@auto_recibo", autocxc_recibopago)
                                    xcmd.Parameters.AddWithValue("@recibo", autocxc_numerorecibopago)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_DOCUMENTOS
                                    Dim xdoc As New FichaCtasCobrar.c_Documentos.c_Registro
                                    With xdoc
                                        .c_AutoCxC.c_Texto = autocxc
                                        .c_AutoCxCPago.c_Texto = autocxc_pago
                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_Item.c_Valor = 1
                                        .c_Monto.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_OrigenDocumento.c_Texto = "FACTURA"
                                        .c_TipoDocumento.c_Texto = "PAG"
                                        .c_TipoOperacion.c_Texto = "Cancelación"
                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_SignoDocumento.c_Valor = 1
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                    'campos nuevo
                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    If MontoNotaCredito > 0 Then
                                        Dim dr As SqlDataReader
                                        Dim xtb_nc As New DataTable

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "SELECT * FROM cxc WHERE auto_cliente=@auto_cliente AND TIPO_DOCUMENTO='NCF' AND CANCELADO='0' AND ESTATUS='0' ORDER BY AUTO ASC"
                                        xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                        dr = xcmd.ExecuteReader()
                                        xtb_nc.Load(dr)

                                        Dim xitem As Integer = 1
                                        Dim xresul As Integer = 0
                                        Dim xmonto As Decimal = 0
                                        Dim xcxc_nc As New FichaCtasCobrar.c_CxC
                                        Dim xsaldopendiente_antes_del_pago As Decimal = 0

                                        For Each xr As DataRow In xtb_nc.Rows
                                            xitem += 1
                                            xcxc_nc.M_CargarRegistro(xr)
                                            xsaldopendiente_antes_del_pago = 0
                                            xsaldopendiente_antes_del_pago = xcxc_nc.RegistroDato._MontoPorCobrar

                                            If (MontoNotaCredito - xmonto) >= Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar) Then
                                                xmonto += Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)

                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = "update cxc set resta=0, acumulado=importe, cancelado='1' where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
                                                xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
                                                xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
                                                xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
                                                xresul = xcmd.ExecuteNonQuery()

                                                If xresul = 0 Then
                                                    Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
                                                        xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                    Throw New Exception(xmen)
                                                End If

                                                'CXC DOCUMENTOS DE NOTAS DE CREDITO
                                                With xdoc
                                                    .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
                                                    .c_AutoCxCPago.c_Texto = autocxc_pago
                                                    .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                                    .c_Item.c_Valor = xitem
                                                    .c_Monto.c_Valor = Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)
                                                    .c_NotasDetalles.c_Texto = ""
                                                    .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                    .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                                    .c_OrigenDocumento.c_Texto = "NOTA CRÉDITO"
                                                    .c_TipoDocumento.c_Texto = "PAG"
                                                    .c_TipoOperacion.c_Texto = "Cancelación"
                                                    .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
                                                    .c_SignoDocumento.c_Valor = -1
                                                End With

                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                                xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                                xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                                xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                                xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                                xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                                xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                                xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                                xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                                xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                                'campos nuevo
                                                xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                                xcmd.ExecuteNonQuery()
                                            Else
                                                If (MontoNotaCredito - xmonto) >= 0 Then
                                                    Dim xmont As Decimal = 0
                                                    xmont = -1 * (MontoNotaCredito - xmonto)
                                                    xmonto += (MontoNotaCredito - xmonto)

                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = "update cxc set resta=resta-@monto, acumulado=acumulado+@monto where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
                                                    xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
                                                    xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@monto", xmont)
                                                    xresul = xcmd.ExecuteNonQuery()

                                                    If xresul = 0 Then
                                                        Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
                                                            xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                        Throw New Exception(xmen)
                                                    End If

                                                    'CXC DOCUMENTOS DE NOTAS DE CREDITO
                                                    With xdoc
                                                        .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
                                                        .c_AutoCxCPago.c_Texto = autocxc_pago
                                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                                        .c_Item.c_Valor = xitem
                                                        .c_Monto.c_Valor = Math.Abs(xmont)
                                                        .c_NotasDetalles.c_Texto = ""
                                                        .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                                        .c_OrigenDocumento.c_Texto = "NOTA CRÉDITO"
                                                        .c_TipoDocumento.c_Texto = "PAG"
                                                        .c_TipoOperacion.c_Texto = "Cancelación"
                                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
                                                        .c_SignoDocumento.c_Valor = -1
                                                    End With

                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                                    'campos nuevo
                                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                                    xcmd.ExecuteNonQuery()
                                                End If
                                            End If

                                            If xmonto = MontoNotaCredito Then
                                                Exit For
                                            End If
                                        Next

                                        If (MontoNotaCredito - xmonto) <> 0 Then
                                            Throw New Exception("ERROR EN PROCESAR DOCUMENTOS DE NOTAS DE CREDITO... VERIFIQUE POR FAVOR" + vbCrLf + "SALDO NO CORRESPONDE AL MONTO TOTAL DE NOTAS DE CREDITO")
                                        End If

                                        'DOCUMENTO CXC RECIBO :> INCDICAR EL NUMERO DE DOCUMENTOS RELACIONADOS
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "update cxc_recibos set cant_doc_rel= @cant_doc_rel where auto = @auto"
                                        xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
                                        xcmd.Parameters.AddWithValue("@cant_doc_rel", xitem)
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    'CXC_MODO_PAGO
                                    For Each xpag In xpagos
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto <> "NC00000001" Then
                                            xpag.RegsitroDato.c_AutoRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                            xpag.RegsitroDato.c_EstatusMovimiento.c_Texto = "0"
                                            xpag.RegsitroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
                                            xcmd.Parameters.AddWithValue("@numero", xpag.RegsitroDato.c_Numero.c_Texto).Size = xpag.RegsitroDato.c_Numero.c_Largo
                                            xcmd.Parameters.AddWithValue("@agencia", xpag.RegsitroDato.c_NombreAgencia.c_Texto).Size = xpag.RegsitroDato.c_NombreAgencia.c_Largo
                                            xcmd.Parameters.AddWithValue("@importe", xpag.RegsitroDato.c_MontoImporte.c_Valor)
                                            xcmd.Parameters.AddWithValue("@codigo", xpag.RegsitroDato.c_CodigoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_CodigoTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_recibo", xpag.RegsitroDato.c_AutoRecibo.c_Texto).Size = xpag.RegsitroDato.c_AutoRecibo.c_Largo
                                            xcmd.Parameters.AddWithValue("@nombre", xpag.RegsitroDato.c_NombreTipoPago.c_Texto).Size = xpag.RegsitroDato.c_NombreTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_medios_pago", xpag.RegsitroDato.c_AutoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_AutoTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_agencia", xpag.RegsitroDato.c_AutoAgencia.c_Texto).Size = xpag.RegsitroDato.c_AutoAgencia.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xpag.RegsitroDato.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xpag.RegsitroDato.c_EstatusMovimiento.c_Texto).Size = xpag.RegsitroDato.c_EstatusMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@monto_recibido", xpag.RegsitroDato.c_MontoRecibido.c_Valor)
                                            xcmd.ExecuteNonQuery()
                                        End If
                                    Next

                                    'DOCUMENTO FACTURA EN CXC :> PAGADO COMPLETO
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update cxc set cancelado = '1', acumulado = importe, resta = 0 where auto = @auto"
                                    xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
                                    xcmd.ExecuteNonQuery()
                                End If

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos-@total_anticipos, " _
                                  + "fecha_ult_compra=@fecha_ult_compra where auto=@auto and estatus='Activo'"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@fecha_ult_compra", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@total_anticipos", MontoAnticipo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If

                                'TABLA TEMPORALVENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='1' and autousuario=@autousuario"
                                xcmd.Parameters.AddWithValue("@idunico", idunico)
                                xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
                                xcmd.ExecuteNonQuery()

                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                    Dim xres As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc and estatus='0'"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xres = xcmd.ExecuteNonQuery()
                                    If xres = 0 Then
                                        If xventa._f_FichaDocumentoOrigen._TipoDocumento = TipoDocumentoVentaRegistrado.Presupuesto Then
                                        Else
                                            Throw New Exception("DOCUMENTO ORIGEN HA SIDO IMPOSIBLE ACTUALIZAR SU ESTATUS A PROCESADO, VERIFIQUE POR FAVOR")
                                        End If
                                    End If

                                    Dim xreg As New FichaVentas.V_PresupuestoPedidoOtros
                                    With xreg.RegistroDato
                                        .c_AutoDocumentoOrigen._ContenidoCampo = xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega
                                        .c_AutoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._AutoDocumento
                                        .c_AutoEntidad._ContenidoCampo = xventa.RegistroDato._AutoCliente
                                        .c_CiRif._ContenidoCampo = xventa.RegistroDato._CiRifCliente
                                        .c_DiasValidesDocOrigen._ContenidoCampo = xdoc_origen._DiasValidezDocumento
                                        .c_FechaEmisionDocumentoOrigen._ContenidoCampo = xdoc_origen._FechaEmision
                                        .c_FechaProcesoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._FechaEmision
                                        .c_NombreEntidad._ContenidoCampo = xventa.RegistroDato._NombreCliente
                                        .c_NumeroDocumento_Origen._ContenidoCampo = xdoc_origen._Documento
                                        .c_NumeroDocumento_Venta._ContenidoCampo = xventa.RegistroDato._Documento
                                        .c_TipoDocumentoOrigen._ContenidoCampo = xdoc_origen.c_TipoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                    xcmd.Parameters.AddWithValue("@auto_doc_origen", xreg.RegistroDato._AutoDocumentoOrigen).Size = xreg.RegistroDato.c_AutoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@auto_doc_venta", xreg.RegistroDato._AutoDocumentoVenta).Size = xreg.RegistroDato.c_AutoDocumentoVenta._LargoCampo
                                    xcmd.Parameters.AddWithValue("@fechaemision_origen", xreg.RegistroDato._FechaEmisionDocumento_Origen)
                                    xcmd.Parameters.AddWithValue("@fechaproceso", xreg.RegistroDato._FechaProcesoDocumento_Venta)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xreg.RegistroDato._AutoEntidad).Size = xreg.RegistroDato.c_AutoEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@ci_rif_entidad", xreg.RegistroDato._CiRif_Entidad).Size = xreg.RegistroDato.c_CiRif._LargoCampo
                                    xcmd.Parameters.AddWithValue("@nombre_entidad", xreg.RegistroDato._NombreEntidad).Size = xreg.RegistroDato.c_NombreEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", xreg.RegistroDato._DiasValidezDocumentoOrigen)
                                    xcmd.Parameters.AddWithValue("@tipodocumento_origen", IIf(xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo Is Nothing, _
                                            "", xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo)).Size = xreg.RegistroDato.c_TipoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_origen", xreg.RegistroDato._NumeroDocumentoOrigen).Size = xreg.RegistroDato.c_NumeroDocumento_Origen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_venta", xreg.RegistroDato._NumeroDocumentoVenta).Size = xreg.RegistroDato.c_NumeroDocumento_Venta._LargoCampo
                                    xcmd.ExecuteNonQuery()
                                End If

                                Dim TipoEfectivoTickets As Decimal = 0
                                Dim TipoCheque As Decimal = 0
                                Dim TipoDebito As Decimal = 0
                                Dim TipoCredito As Decimal = 0
                                Dim TipoOtros As Decimal = 0

                                Dim FormasPago As New List(Of FormaPago)
                                For Each xpag In xpagos
                                    Select Case xpag.RegsitroDato.c_AutoTipoPago.c_Texto
                                        Case "0000000001", "0000000005" 'efectivo, cesta ticket
                                            TipoEfectivoTickets += xpag.RegsitroDato.c_MontoRecibido.c_Valor
                                        Case "0000000002" 'cheque
                                            TipoCheque += xpag.RegsitroDato.c_MontoRecibido.c_Valor
                                        Case "0000000003" 'debito
                                            TipoDebito += xpag.RegsitroDato.c_MontoRecibido.c_Valor
                                        Case "0000000004" 'credito
                                            TipoCredito += xpag.RegsitroDato.c_MontoRecibido.c_Valor
                                        Case Else
                                            TipoOtros += xpag.RegsitroDato.c_MontoRecibido.c_Valor
                                    End Select
                                Next

                                If TipoEfectivoTickets > 0 Then
                                    Dim metodoPago As New FormaPago With {.Monto = TipoEfectivoTickets, .Tipo = FormaPago.TipoPago.EfectivoTickets}
                                    FormasPago.Add(metodoPago)
                                End If
                                If TipoCheque > 0 Then
                                    Dim metodoPago As New FormaPago With {.Monto = TipoCheque, .Tipo = FormaPago.TipoPago.Cheque}
                                    FormasPago.Add(metodoPago)
                                End If
                                If TipoDebito > 0 Then
                                    Dim metodoPago As New FormaPago With {.Monto = TipoDebito, .Tipo = FormaPago.TipoPago.TDebito}
                                    FormasPago.Add(metodoPago)
                                End If
                                If TipoCredito > 0 Then
                                    Dim metodoPago As New FormaPago With {.Monto = TipoCredito, .Tipo = FormaPago.TipoPago.TCredito}
                                    FormasPago.Add(metodoPago)
                                End If
                                If TipoOtros > 0 Then
                                    Dim metodoPago As New FormaPago With {.Monto = TipoOtros, .Tipo = FormaPago.TipoPago.Otros}
                                    FormasPago.Add(metodoPago)
                                End If

                                If ximpresora._ModoImpresion = TipoImpresora.Fiscal Then
                                    If ximpresora._Impresora.Ver_FechaImpresoraFiscal <> xventa.RegistroDato.c_FechaEmision.c_Valor Then
                                        Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, FECHA IMPRESORA NO ES IGUAL AL DEL SISTEMA")
                                    End If

                                    If ximpresora._Impresora.Ver_SerialImpresoraFiscal.Trim <> xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto.Trim Then
                                        Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, SERIAL FISCAL NO CORRESPONDE AL SERIAL ASIGANADO AL DOCUMENTO")
                                    End If

                                    Dim xcontrol As Integer = 0
                                    Dim xz As Integer = 0
                                    Integer.TryParse(ximpresora._Impresora.Ver_UltimaFacturaRegistrada, xcontrol)
                                    Integer.TryParse(ximpresora._Impresora.Ver_UltimoZFiscal, xz)
                                    xcontrol += 1
                                    xz += 1
                                    Dim xcont As String = xcontrol.ToString.Trim.PadLeft(10, "0")

                                    'VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update ventas set control = @control, relacion_z = @relacion_z where auto = @auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@control", xcont).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                    xcmd.Parameters.AddWithValue("@relacion_z", xz)
                                    xcmd.ExecuteNonQuery()

                                    With ximpresora._Impresora
                                        .FacturaInicializa(xventa.RegistroDato.c_Tasa1.c_Valor, _
                                                           xventa.RegistroDato.c_Tasa2.c_Valor, _
                                                           xventa.RegistroDato.c_Tasa3.c_Valor)

                                        .Cli_CondicionVenta = "CONTADO"
                                        If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Credito Then
                                            .Cli_CondicionVenta = "CREDITO " + xventa.RegistroDato._DiasCreditoOtorgado.ToString.Trim + " Dias"
                                        End If
                                        .Cli_CodCliente = xventa.RegistroDato._CodigoCliente
                                        .Cli_DirCliente = xventa.RegistroDato._DirFiscalCliente
                                        .Cli_EstacionVenta = xventa.RegistroDato._EstacionEquipoProceso
                                        .Cli_FacturaVenta = xventa.RegistroDato.c_Documento.c_Texto.Trim
                                        .Cli_NomCliente = xventa.RegistroDato._NombreCliente
                                        .Cli_RifCliente = xventa.RegistroDato._CiRifCliente
                                        .Cli_TelCliente = xventa.RegistroDato.c_TelefonoCliente.c_Texto.Trim
                                        .Cli_UsuarioOperador = xventa.RegistroDato._NombreUsuario
                                        .Cli_UsuarioVenta = xventa.RegistroDato._NombreVendedor
                                        .Cli_DocumentoVenta = xventa.RegistroDato._Documento + ", Vend: " + xventa.RegistroDato._NombreVendedor

                                        .CargoGlobal = xventa.RegistroDato.c_TasaCargos.c_Valor
                                        .DsctoGlobal = xventa.RegistroDato.c_TasaDescuento_1.c_Valor
                                        .AutoDocumento = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With
                                    Dim xmontorecibe As Decimal = 0
                                    If xventa.RegistroDato.c_CondicionPago.c_Texto.Trim.ToUpper = "CONTADO" Then
                                        xmontorecibe = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                    End If

                                    If xventa.RegistroDato.c_TotalGeneral.c_Valor > 0 Then
                                        Dim xtbr As New DataTable
                                        xtbr = xtablaprd
                                        If ximpresora._OrdenAlImprimir = FichaGlobal.c_ConfSistema.ConfModuloVentas.OrdenImprimirItems.PorNombre Then
                                            'Dim xtbr As New DataTable
                                            xtbr = xtablaprd.Select("cantidad>=0", "NOMBRE").CopyToDataTable()
                                            'ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                        ElseIf ximpresora._OrdenAlImprimir = FichaGlobal.c_ConfSistema.ConfModuloVentas.OrdenImprimirItems.PorCodigo Then
                                            'Dim xtbr As New DataTable
                                            xtbr = xtablaprd.Select("cantidad>=0", "codigo").CopyToDataTable
                                            'ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                        Else
                                            'ImprimeFactura(ximpresora._Impresora, xtablaprd, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                        End If
                                        ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor, FormasPago)
                                    Else
                                        Throw New Exception("NO SE PUEDE GENERAR UNA FACTURA FISCAL DE MONTO CERO (0.0)")
                                    End If

                                ElseIf ximpresora._ModoImpresion = TipoImpresora.Texto Then
                                ElseIf ximpresora._ModoImpresion = TipoImpresora.Grafico Then
                                Else
                                    Throw New Exception("NO SE HA DEFINIDO UN MODO DE IMPRESION DE FACTURA")
                                End If

                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("PROBLEMA AL REGISTRAR VENTA:" + vbCrLf + ex.Message)
                End Try
            End Function


            Class FormaPago
                Enum TipoPago As Integer
                    SinDefinir = 0
                    EfectivoTickets
                    Cheque
                    TDebito
                    TCredito
                    Otros
                    PorCobrar
                End Enum

                Private _monto As Decimal
                Private _tipo As TipoPago

                Property Monto() As Decimal
                    Get
                        Return _monto
                    End Get
                    Set(ByVal value As Decimal)
                        _monto = value
                    End Set
                End Property

                Property Tipo() As TipoPago
                    Get
                        Return _tipo
                    End Get
                    Set(ByVal value As TipoPago)
                        _tipo = value
                    End Set
                End Property

                Sub New()
                    With Me
                        .Monto = 0
                        .Tipo = TipoPago.SinDefinir
                    End With
                End Sub
            End Class

            Function ImprimeFactura(ByVal xfiscal As IFiscal, ByVal xtablaprd As DataTable, ByVal xmonto_recibe As Decimal, ByVal xtotalfactura As Decimal, ByVal formasPago As List(Of FormaPago)) As Boolean
                Try
                    xfiscal.FacturaEncabezado()

                    For Each dr As DataRow In xtablaprd.Rows
                        xfiscal.LimpiarItem()
                        xfiscal.Prd_CantidadPrd = dr("cantidad")
                        xfiscal.Prd_DetallePrd = dr("nombre")
                        xfiscal.Prd_DsctoPrd = dr("descuento1p")
                        xfiscal.Prd_PNetoPrd = dr("precio_neto")
                        xfiscal.Prd_TasaIvaPrd = dr("codigo_tasa")
                        xfiscal.Prd_Nota1Prd = dr("detalle")
                        xfiscal.Prd_Nota2Prd = dr("SUBDETALLE")
                        xfiscal.Prd_Codigo = dr("codigo")
                        xfiscal.FacturaDetalle()
                    Next

                    If xmonto_recibe >= xtotalfactura Then
                        For Each met As FormaPago In formasPago
                            Select Case met.Tipo
                                Case FormaPago.TipoPago.EfectivoTickets
                                    xfiscal.MedioPago_1 = met.Monto
                                Case FormaPago.TipoPago.Cheque
                                    xfiscal.MedioPago_2 = met.Monto
                                Case FormaPago.TipoPago.TDebito
                                    xfiscal.MedioPago_3 = met.Monto
                                Case FormaPago.TipoPago.TCredito
                                    xfiscal.MedioPago_4 = met.Monto
                                Case FormaPago.TipoPago.Otros
                                    xfiscal.MedioPago_5 = met.Monto
                            End Select
                        Next
                        'xfiscal.MedioPago_1 = xtotalfactura
                    Else
                        xfiscal.MedioPago_7 = xtotalfactura
                    End If

                    xfiscal.FacturaCerrar()
                    Return True
                Catch ex As Exception
                    Try
                        xfiscal.AbortarDF()
                    Catch ex2 As Exception
                    End Try
                    Throw New Exception("ERROR AL IMPRIMIR FACTURA FISCAL:" + vbCrLf + "MOTIVO:" + vbCrLf + ex.Message + vbCrLf)
                End Try
            End Function


            ''' <summary>
            ''' Permite Procesar Un Presupuesto
            ''' </summary>
            ''' <param name="idunico"></param>
            ''' IDENTIFICADOR UNICO
            ''' <param name="xventa"></param>
            ''' CLASE PARA EL ENCABEZADO DEL PRESUPUESTO
            ''' <param name="xventadetalle"></param>
            ''' CLASE PARA EL CUERPO DEL PRESUPUESTO
            ''' <param name="xcondiciones"></param>
            ''' CONDICIONES DADAS PARA PROCESAR EL PRESUPUESTO
            Function F_GrabarPresupuesto(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
                                   ByVal xcondiciones As CondicionesParaVenta)

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_2 As String = "update contadores set a_presupuesto=a_presupuesto+1; select a_presupuesto from contadores"
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                Dim xtr As SqlTransaction = Nothing
                Try
                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        .c_BloquearAlmacen.c_Texto = "0"
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
                    End With

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto

                            .RegistroDato.c_TipoMovimiento.c_Texto = ""
                            .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

                            Dim x0 As Decimal = 0
                            x0 = .RegistroDato.c_PrecioNeto.c_Valor

                            .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioItem.c_Valor = x0

                            Dim x1 As Decimal = 0
                            x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_TotalNeto.c_Valor = x1

                            Dim x2 As Decimal = 0
                            x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_MontoIva.c_Valor = x2
                            .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                            Dim x3 As Decimal = 0
                            x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                            Dim x4 As Decimal = x0
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioFinal.c_Valor = x4
                            .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                            Dim x5 As Decimal = 0
                            Dim x6 As Decimal = 0
                            x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                            x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                            .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                            If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                            Else
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                            End If

                            If xcondiciones._Permitir_PrecioCero = True Then
                            Else
                                If x4 = 0 Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
                                End If
                            End If

                            If xcondiciones._Permitir_PrecioMenorCosto = True Then
                            Else
                                If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
                                End If
                            End If
                        End With

                        xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                       ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                       ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                       ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
                    Next

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE DOCUMENTO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE PRESUPUESTO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                xventa.RegistroDato.c_Documento.c_Texto = "PRE" + xcmd.ExecuteScalar().ToString.Trim.PadLeft(7, "0")

                                'PRESUPUESTO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                For Each xdetalle In xventadetalle
                                    'VENTAS_DETALLE
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If

                                    If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
                                        ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPRAO CON PRECIO DE VENTA
                                        'Dim xres As Integer = 0
                                        'xcmd.Parameters.Clear()
                                        'xcmd.CommandType = CommandType.Text
                                        'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
                                        'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
                                        'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
                                        'xres = xcmd.ExecuteScalar()
                                        'If xres = 1 Then
                                        '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
                                        '    Throw New Exception(xmens)
                                        'End If
                                    End If
                                Next

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next

                                'TABLA TEMPORALVENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='3' and autousuario=@autousuario"
                                xcmd.Parameters.AddWithValue("@idunico", idunico)
                                xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
                                xcmd.ExecuteNonQuery()

                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("VENTAS" + vbCrLf + "ERROR AL GRABAR VENTA:" + vbCrLf + ex.Message)
                End Try
            End Function

            ''' <summary>
            ''' Permite Procesar Una NOTA DE ENTREGA
            ''' </summary>
            ''' <param name="idunico"></param>
            ''' IDENTIFICADOR UNICO
            ''' <param name="xventa"></param>
            ''' CLASE PARA EL ENCABEZADO DE LA NOTA DE ENTREGA
            ''' <param name="xventadetalle"></param>
            ''' CLASE PARA EL CUERPO DE LA NOTA DE ENTREGA
            ''' <param name="xcondiciones"></param>
            ''' CONDICIONES DADAS PARA PROCESAR LA NOTA DE ENTREGA
            Function F_GrabarNotaEntrega(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
                                               ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
                                               ByVal xcondiciones As CondicionesParaVenta)

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_3 As String = "update series_fiscales set correlativo=correlativo+1, estatus_fiscal='1' where nombre=@nombre;" _
                                      + "select correlativo from series_fiscales where nombre=@nombre"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                Dim xtr As SqlTransaction = Nothing
                Try
                    Dim xfiscal As New FichaGlobal.c_SeriesFiscales
                    Dim xtb As New DataTable
                    Using xadap As New SqlDataAdapter("select * from series_fiscales where nombre=@nombre", _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                        xadap.Fill(xtb)
                    End Using

                    If xtb.Rows.Count > 0 Then
                        xfiscal.M_CargarFicha(xtb(0))
                    Else
                        Throw New Exception("ERROR... SERIE NO REGISTRADA, VERIFIQUE")
                    End If

                    If xfiscal.RegistroDato.r_EstatusSerie = TipoEstatus.Activo Then
                        If xfiscal.RegistroDato.r_EstatusParaNE = TipoEstatus.Activo Then
                        Else
                            Throw New Exception("ERROR... SERIE NO ASIGNADA PARA EFECTUAR NOTAS DE ENTREGA, VERIFIQUE")
                        End If
                    Else
                        Throw New Exception("ERROR... SERIE ESTA EN ESTADO INACTVIO, VERIFIQUE")
                    End If

                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        .c_BloquearAlmacen.c_Texto = IIf(xcondiciones._Permitir_RupturaPorExistencia, "1", "0")
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
                    End With

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto

                            .RegistroDato.c_TipoMovimiento.c_Texto = "V"
                            .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

                            Dim x0 As Decimal = 0
                            x0 = .RegistroDato.c_PrecioNeto.c_Valor

                            .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioItem.c_Valor = x0

                            Dim x1 As Decimal = 0
                            x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_TotalNeto.c_Valor = x1

                            Dim x2 As Decimal = 0
                            x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_MontoIva.c_Valor = x2
                            .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                            Dim x3 As Decimal = 0
                            x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                            Dim x4 As Decimal = x0
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioFinal.c_Valor = x4
                            .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                            Dim x5 As Decimal = 0
                            Dim x6 As Decimal = 0
                            x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                            x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                            .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                            If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                            Else
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                            End If

                            If xcondiciones._Permitir_PrecioCero = True Then
                            Else
                                If x4 = 0 Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
                                End If
                            End If

                            If xcondiciones._Permitir_PrecioMenorCosto = True Then
                            Else
                                If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
                                End If
                            End If
                        End With

                        xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                       ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                       ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                       ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
                    Next

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE SERIES FISCALES PARA NOTAS DE ENTREGA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                                xventa.RegistroDato.c_Documento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")
                                'xventa.RegistroDato.c_Documento.c_Texto = xventa.RegistroDato._SerieFiscalAsignada + _
                                '                 xcmd.ExecuteScalar().ToString.Trim.PadLeft(10 - xventa.RegistroDato._SerieFiscalAsignada.Length, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
                                Dim auto_concepto As Object = Nothing
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto from productos_conceptos where codigo='SALIDAS'"
                                auto_concepto = xcmd.ExecuteScalar()
                                If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
                                    Throw New Exception("CONCEPTO 'SALIDAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                End If

                                Dim xconcepto As String = ""
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                xcmd.Parameters.AddWithValue("@auto", auto_concepto)
                                xconcepto = xcmd.ExecuteScalar



                                'ACTUALIZO DEPOSITO, SI EXISTE UN DOCUMENTO TIPO PEDIDO LA CUAL BLOQUEA LA EXISTENCIA
                                Dim xdoc_origen As FichaVentas.V_Ventas.c_Registro = Nothing
                                Dim xtablaNotaEnt As New DataTable
                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    Dim xdr As SqlDataReader
                                    Dim xtb1 As New DataTable
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select * from ventas where auto=@autodoc"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xdr = xcmd.ExecuteReader()
                                    xtb1.Load(xdr)
                                    xdr.Close()

                                    If xtb1.Rows.Count = 0 Then
                                        Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    End If

                                    xdoc_origen = New FichaVentas.V_Ventas.c_Registro
                                    xdoc_origen.CargarRegistro(xtb1.Rows(0))

                                    If xdoc_origen._EstatusDocumento = TipoEstatus.Inactivo Then
                                        Throw New Exception("DOCUMENTO ORIGEN HA SIDO ANULADO POR OTRO USUARIO / NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    Else
                                        'GENERO UNA TABLA LA CUAL GUARDA LA CANTIDAD TOTAL EN INVENTARIO USADA POR CADA PRODUCTO
                                        Dim xtabla_inv As New DataTable
                                        Dim xrd_inv As SqlDataReader
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select auto_productos, SUM(cantidad_inventario) as xcantidad ,auto_deposito " & _
                                                            "from ventas_detalle where auto_documento=@auto_doc_origen group by auto_productos,auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_doc_origen", xdoc_origen._AutoDocumento)
                                        xrd_inv = xcmd.ExecuteReader()
                                        xtabla_inv.Load(xrd_inv)

                                        If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                            If xdoc_origen._BloquearExistencia = True Then
                                                ' ACTUALIZO EL DEPOSITO 
                                                For Each DR_INV As DataRow In xtabla_inv.Rows
                                                    Dim xres_1 As Integer = 0
                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = "update productos_deposito set reservada=reservada-@CANTIDAD, " & _
                                                       "disponible=disponible+@CANTIDAD from productos_deposito " & _
                                                       "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
                                                    xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
                                                    xres_1 = xcmd.ExecuteNonQuery()
                                                    If xres_1 = 0 Then
                                                        Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA  RESERVADA POR PEDIDO")
                                                    End If
                                                Next
                                            End If
                                        End If
                                    End If
                                End If



                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_DEPOSITO
                                    If xdetalle._DepositoBloqueado Then
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.PRODUCTOS_DEPOSITO_DESBLOQUEAR
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    If xcondiciones._Permitir_RupturaPorExistencia Then
                                        Dim xdisp As Decimal = 0
                                        Dim xreal As Decimal = 0

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xdisp = xcmd.ExecuteScalar()

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select real from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xreal = xcmd.ExecuteScalar()

                                        If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        Else
                                            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                        End If

                                        If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        Else
                                            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                        End If
                                    End If

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
                                    xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_KARDEX
                                    Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                    With xkardex
                                        .c_AutoConcepto.c_Texto = auto_concepto
                                        .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
                                        .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                        .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
                                        .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_NotasDetallesMovimiento.c_Texto = ""
                                        .c_OrigenMovimiento.c_Texto = "0804"
                                        .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
                                        .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Salida
                                        'Campos Nuevos
                                        .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                        .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
                                        .c_NombreConcepto.c_Texto = xconcepto
                                        .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
                                        .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
                                        .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
                                        .c_CodigoProducto.c_Texto = xdetalle.RegistroDato._CodigoProducto
                                        .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato._CodigoDeposito
                                        .c_CodigoConcepto.c_Texto = "SALIDAS"
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                    xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                    xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                    'Campos Nuevos
                                    xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                    xcmd.ExecuteNonQuery()

                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If

                                    If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
                                        ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPRAO CON PRECIO DE VENTA
                                        'Dim xres As Integer = 0
                                        'xcmd.Parameters.Clear()
                                        'xcmd.CommandType = CommandType.Text
                                        'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
                                        'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
                                        'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
                                        'xres = xcmd.ExecuteScalar()
                                        'If xres = 1 Then
                                        '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
                                        '    Throw New Exception(xmens)
                                        'End If
                                    End If
                                Next

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, " _
                                  + "fecha_ult_compra=@fecha_ult_compra where auto=@auto and estatus='Activo'"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@fecha_ult_compra", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If

                                'TABLA TEMPORALVENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='2' and autousuario=@autousuario"
                                xcmd.Parameters.AddWithValue("@idunico", idunico)
                                xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
                                xcmd.ExecuteNonQuery()



                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                    Dim xres As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc and estatus='0'"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xres = xcmd.ExecuteNonQuery()
                                    If xres = 0 Then
                                        If xventa._f_FichaDocumentoOrigen._TipoDocumento = TipoDocumentoVentaRegistrado.Presupuesto Then
                                        Else
                                            Throw New Exception("DOCUMENTO ORIGEN HA SIDO IMPOSIBLE ACTUALIZAR SU ESTATUS A PROCESADO, VERIFIQUE POR FAVOR")
                                        End If
                                    End If

                                    Dim xreg As New FichaVentas.V_PresupuestoPedidoOtros
                                    With xreg.RegistroDato
                                        .c_AutoDocumentoOrigen._ContenidoCampo = xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega
                                        .c_AutoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._AutoDocumento
                                        .c_AutoEntidad._ContenidoCampo = xventa.RegistroDato._AutoCliente
                                        .c_CiRif._ContenidoCampo = xventa.RegistroDato._CiRifCliente
                                        .c_DiasValidesDocOrigen._ContenidoCampo = xdoc_origen._DiasValidezDocumento
                                        .c_FechaEmisionDocumentoOrigen._ContenidoCampo = xdoc_origen._FechaEmision
                                        .c_FechaProcesoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._FechaEmision
                                        .c_NombreEntidad._ContenidoCampo = xventa.RegistroDato._NombreCliente
                                        .c_NumeroDocumento_Origen._ContenidoCampo = xdoc_origen._Documento
                                        .c_NumeroDocumento_Venta._ContenidoCampo = xventa.RegistroDato._Documento
                                        .c_TipoDocumentoOrigen._ContenidoCampo = xdoc_origen.c_TipoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                    xcmd.Parameters.AddWithValue("@auto_doc_origen", xreg.RegistroDato._AutoDocumentoOrigen).Size = xreg.RegistroDato.c_AutoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@auto_doc_venta", xreg.RegistroDato._AutoDocumentoVenta).Size = xreg.RegistroDato.c_AutoDocumentoVenta._LargoCampo
                                    xcmd.Parameters.AddWithValue("@fechaemision_origen", xreg.RegistroDato._FechaEmisionDocumento_Origen)
                                    xcmd.Parameters.AddWithValue("@fechaproceso", xreg.RegistroDato._FechaProcesoDocumento_Venta)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xreg.RegistroDato._AutoEntidad).Size = xreg.RegistroDato.c_AutoEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@ci_rif_entidad", xreg.RegistroDato._CiRif_Entidad).Size = xreg.RegistroDato.c_CiRif._LargoCampo
                                    xcmd.Parameters.AddWithValue("@nombre_entidad", xreg.RegistroDato._NombreEntidad).Size = xreg.RegistroDato.c_NombreEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", xreg.RegistroDato._DiasValidezDocumentoOrigen)
                                    xcmd.Parameters.AddWithValue("@tipodocumento_origen", IIf(xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo Is Nothing, _
                                            "", xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo)).Size = xreg.RegistroDato.c_TipoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_origen", xreg.RegistroDato._NumeroDocumentoOrigen).Size = xreg.RegistroDato.c_NumeroDocumento_Origen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_venta", xreg.RegistroDato._NumeroDocumentoVenta).Size = xreg.RegistroDato.c_NumeroDocumento_Venta._LargoCampo
                                    xcmd.ExecuteNonQuery()
                                End If


                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("VENTAS" + vbCrLf + "ERROR AL GRABAR VENTA:" + vbCrLf + ex.Message)
                End Try
            End Function

            ''' <summary>
            ''' Permite Procesar Una Venta Chimba
            ''' </summary>
            ''' <param name="idunico"></param>
            ''' IDENTIFICADOR UNICO
            ''' <param name="xventa"></param>
            ''' CLASE PARA EL ENCABEZADO DE LA VENTA
            ''' <param name="xventadetalle"></param>
            ''' CLASE PARA EL CUERPO DE LA VENTA
            ''' <param name="xcondiciones"></param>
            ''' CONDICIONES DADAS PARA PROCESAR LA VENTA
            Function F_GrabarVentaChimba(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
                                   ByVal xpagos As List(Of FichaCtasCobrar.c_ModosPago.AgregarModoPago), _
                                   ByVal xcondiciones As CondicionesParaVenta)

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_2 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
                Dim xsql_3 As String = "update contadores set a_chimbo=a_chimbo+1; select a_chimbo from contadores"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                Dim xtr As SqlTransaction = Nothing
                Try

                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        If ._CondicionPago = TipoCondcionPago.Contado Then
                            .c_MontoSaldoPendiente.c_Valor = 0
                        Else
                            .c_MontoSaldoPendiente.c_Valor = .c_TotalGeneral.c_Valor
                        End If
                        .c_BloquearAlmacen.c_Texto = IIf(xcondiciones._Permitir_RupturaPorExistencia, "1", "0")
                        .c_TipoDocumento.c_Texto = "XX"
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
                    End With

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto

                            .RegistroDato.c_TipoMovimiento.c_Texto = "V"
                            .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

                            Dim x0 As Decimal = 0
                            x0 = .RegistroDato.c_PrecioNeto.c_Valor

                            .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioItem.c_Valor = x0

                            Dim x1 As Decimal = 0
                            x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_TotalNeto.c_Valor = x1

                            Dim x2 As Decimal = 0
                            x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_MontoIva.c_Valor = x2
                            .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                            Dim x3 As Decimal = 0
                            x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                            Dim x4 As Decimal = x0
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioFinal.c_Valor = x4
                            .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                            Dim x5 As Decimal = 0
                            Dim x6 As Decimal = 0
                            x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                            x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                            .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                            If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                            Else
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                            End If

                            If xcondiciones._Permitir_PrecioCero = True Then
                            Else
                                If x4 = 0 Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
                                End If
                            End If

                            If xcondiciones._Permitir_PrecioMenorCosto = True Then
                            Else
                                If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
                                End If
                            End If
                        End With

                        xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                       ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                       ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                       ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
                    Next

                    'VERIFICO LIMITE DE DOCUMENTOS DEL CLIENTE / LIMITE DE CREDITO
                    If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Credito Then
                        Dim xcliente As New FichaClientes
                        xcliente.F_BuscarCliente(xventa.RegistroDato._AutoCliente)
                        If (xcliente.f_Clientes.RegistroDato.r_LimiteCreditoPermitido = 0) Or (xcliente.f_Clientes.RegistroDato.r_CreditoDisponible >= xventa.RegistroDato.c_TotalGeneral.c_Valor) Then
                            If xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos > 0 Then
                                If (xcliente.f_Clientes.RegistroDato.r_CantidadDocPendientes + 1) > xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos Then
                                    Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE DOCUMENTOS PENDIENTES DE CREDITO, VERIFIQUE")
                                End If
                            End If
                        Else
                            Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE CREDITO, VERIFIQUE")
                        End If
                    End If

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO VENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CONTADOR AUTOMATICO CXC
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                autocxc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE CHIMBO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select a_chimbo from contadores"
                                If IsDBNull(xcmd.ExecuteScalar()) Then
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_chimbo=0"
                                    xcmd.ExecuteNonQuery()
                                End If

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xventa.RegistroDato.c_Documento.c_Texto = "XXX" + xcmd.ExecuteScalar().ToString.Trim.PadLeft(7, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'CXC, sea Contado / Credito
                                Dim xcxc_doc_factura As New FichaCtasCobrar.c_CxC.c_Registro
                                With xcxc_doc_factura
                                    .c_AutoAgencia.c_Texto = ""
                                    .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                    .c_AutoCxC.c_Texto = autocxc
                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                    .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                    .c_EstatusCancelado.c_Texto = "0"
                                    .c_EstatusDocumentoCxC.c_Texto = "0"
                                    .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                    .c_MontoAcumulado.c_Valor = 0
                                    .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                    .c_MontoPorCobrar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                    .c_NombreAgencia.c_Texto = ""
                                    .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                    .c_NotasDetalles.c_Texto = "DOCUMENTO DE VENTA"
                                    .c_Numero.c_Texto = ""
                                    .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                    .c_TipoDocumento.c_Texto = "FAC"
                                    .c_TipoMovimiento.c_Valor = 1
                                    .c_TipoOperacion.c_Texto = ""
                                    .c_AutoMovimientoEntrada.c_Texto = ""

                                    'Nuevo
                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                End With

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_factura.c_FechaProceso.c_Valor)
                                xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_factura.c_TipoDocumento.c_Texto).Size = xcxc_doc_factura.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xcxc_doc_factura.c_NumeroDocumento.c_Texto).Size = xcxc_doc_factura.c_NumeroDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_factura.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_factura.c_NotasDetalles.c_Texto).Size = xcxc_doc_factura.c_NotasDetalles.c_Largo
                                xcmd.Parameters.AddWithValue("@importe", xcxc_doc_factura.c_MontoImporte.c_Valor)
                                xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_factura.c_MontoAcumulado.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_factura.c_AutoCliente.c_Texto).Size = xcxc_doc_factura.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_factura.c_NombreCliente.c_Texto).Size = xcxc_doc_factura.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_factura.c_CiRifCliente.c_Texto).Size = xcxc_doc_factura.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_factura.c_CodigoCliente.c_Texto).Size = xcxc_doc_factura.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_factura.c_EstatusCancelado.c_Texto).Size = xcxc_doc_factura.c_EstatusCancelado.c_Largo
                                xcmd.Parameters.AddWithValue("@resta", xcxc_doc_factura.c_MontoPorCobrar.c_Valor)
                                xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_factura.c_TipoOperacion.c_Texto).Size = xcxc_doc_factura.c_TipoOperacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_factura.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_factura.c_EstatusDocumentoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_factura.c_AutoDocumento.c_Texto).Size = xcxc_doc_factura.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@numero", xcxc_doc_factura.c_Numero.c_Texto).Size = xcxc_doc_factura.c_Numero.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_factura.c_AutoAgencia.c_Texto).Size = xcxc_doc_factura.c_AutoAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_factura.c_NombreAgencia.c_Texto).Size = xcxc_doc_factura.c_NombreAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@signo", xcxc_doc_factura.c_TipoMovimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
                                Dim auto_concepto As Object = Nothing
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto from productos_conceptos where codigo='VENTAS'"
                                auto_concepto = xcmd.ExecuteScalar()
                                If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
                                    Throw New Exception("CONCEPTO 'VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                End If

                                Dim xconcepto As String = ""
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                xcmd.Parameters.AddWithValue("@auto", auto_concepto)
                                xconcepto = xcmd.ExecuteScalar

                                'ACTUALIZO DEPOSITO, SI EXISTE UN DOCUMENTO TIPO PEDIDO LA CUAL BLOQUEA LA EXISTENCIA
                                Dim xdoc_origen As FichaVentas.V_Ventas.c_Registro = Nothing
                                Dim xtablaNotaEnt As New DataTable
                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    Dim xdr As SqlDataReader
                                    Dim xtb1 As New DataTable
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select * from ventas where auto=@autodoc"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xdr = xcmd.ExecuteReader()
                                    xtb1.Load(xdr)
                                    xdr.Close()

                                    If xtb1.Rows.Count = 0 Then
                                        Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    End If

                                    xdoc_origen = New FichaVentas.V_Ventas.c_Registro
                                    xdoc_origen.CargarRegistro(xtb1.Rows(0))

                                    If xdoc_origen._EstatusDocumento = TipoEstatus.Inactivo Then
                                        Throw New Exception("DOCUMENTO ORIGEN HA SIDO ANULADO POR OTRO USUARIO / NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    Else
                                        'GENERO UNA TABLA LA CUAL GUARDA LA CANTIDAD TOTAL EN INVENTARIO USADA POR CADA PRODUCTO
                                        Dim xtabla_inv As New DataTable
                                        Dim xrd_inv As SqlDataReader
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select auto_productos, SUM(cantidad_inventario) as xcantidad ,auto_deposito " & _
                                                            "from ventas_detalle where auto_documento=@auto_doc_origen group by auto_productos,auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_doc_origen", xdoc_origen._AutoDocumento)
                                        xrd_inv = xcmd.ExecuteReader()
                                        xtabla_inv.Load(xrd_inv)

                                        If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                            If xdoc_origen._BloquearExistencia = True Then
                                                ' ACTUALIZO EL DEPOSITO 
                                                For Each DR_INV As DataRow In xtabla_inv.Rows
                                                    Dim xres_1 As Integer = 0
                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = "update productos_deposito set reservada=reservada-@CANTIDAD, " & _
                                                       "disponible=disponible+@CANTIDAD from productos_deposito " & _
                                                       "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
                                                    xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
                                                    xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
                                                    xres_1 = xcmd.ExecuteNonQuery()
                                                    If xres_1 = 0 Then
                                                        Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA  RESERVADA POR PEDIDO")
                                                    End If
                                                Next
                                            End If
                                        End If
                                        If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.NotaEntrega Then
                                            ' ACTUALIZO EL DEPOSITO 
                                            For Each DR_INV As DataRow In xtabla_inv.Rows
                                                Dim xres_1 As Integer = 0
                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = "update productos_deposito set real=real+@CANTIDAD, " & _
                                                   "disponible=disponible+@CANTIDAD from productos_deposito " & _
                                                   "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
                                                xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
                                                xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
                                                xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
                                                xres_1 = xcmd.ExecuteNonQuery()
                                                If xres_1 = 0 Then
                                                    Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA DESPACHADA POR N/ENTREGA")
                                                End If
                                            Next

                                            Dim xrd_notaent As SqlDataReader
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select * from ventas_detalle where auto_documento=@auto_doc"
                                            xcmd.Parameters.AddWithValue("@auto_doc", xdoc_origen._AutoDocumento)
                                            xrd_notaent = xcmd.ExecuteReader()
                                            xtablaNotaEnt.Load(xrd_notaent)
                                        End If
                                    End If
                                End If


                                For Each xrd_ne As DataRow In xtablaNotaEnt.Rows
                                    Dim xitem As String = xrd_ne("auto").ToString.Trim
                                    Dim xcant_ne As Decimal = xrd_ne("cantidad_inventario")
                                    Dim xvent As Boolean = False
                                    Dim xcant_vt As Decimal = 0
                                    Dim xcant_vt_unid As Decimal = 0

                                    Dim xdetalle_ne As New FichaVentas.V_VentasDetalle
                                    xdetalle_ne.F_BuscarCargar(xdoc_origen._AutoDocumento, xitem)

                                    For Each xdetalle As FichaVentas.V_VentasDetalle.AgregarDetalleVenta In xventadetalle
                                        If xdetalle._FichaItem_DocOrigen IsNot Nothing Then
                                            If xitem = xdetalle._FichaItem_DocOrigen._AutoItem Then
                                                xvent = True
                                                xcant_vt = xdetalle.RegistroDato._CantidadDespachada
                                                xcant_vt_unid = xdetalle.RegistroDato._CantidadUnidadInventario
                                                Exit For
                                            End If
                                        End If
                                    Next

                                    'VERIFICO SI EL PRODUCTO FUE FACTURADO, Y QUE CANTIDAD FUE DESPACHADA
                                    If xvent = True Then
                                        'VERIFICO SI LA CANTIDAD DESPACHA EN VENTA ES LA MISMA A LA DE NOTA DE ENTREGA
                                        If xcant_ne = xcant_vt_unid Then
                                            ' SE REALIZA UN AJUSTE AUTORIZADO PARA DAR ENTRADA AL PRODUCTO PROCESADO POR LA NOTA DE ENTREGE PARA LUEGO HACER UNA SALIDA DEL MISMO POR VENTA

                                            Dim auto_concepto_ajuste As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
                                            auto_concepto_ajuste = xcmd.ExecuteScalar()
                                            If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
                                                Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_ajuste As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
                                            xconcepto_ajuste = xcmd.ExecuteScalar

                                            Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_ajuste
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
                                                .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN SU TOTALIDAD SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_ajuste
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "AJUSTE"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If

                                        Else
                                            'SE HACE UN AJUSTE AUTORIZADO SOLICITANDO LA ENTRADA DE LO FACTURADO 

                                            Dim auto_concepto_ajuste As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
                                            auto_concepto_ajuste = xcmd.ExecuteScalar()
                                            If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
                                                Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_ajuste As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
                                            xconcepto_ajuste = xcmd.ExecuteScalar

                                            Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_ajuste
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xcant_vt
                                                .c_CantidadUnidadesMover.c_Valor = xcant_vt_unid
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN PARTE SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_ajuste
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "AJUSTE"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If


                                            ' DEBO HACER UNA DEVOLUCION DEL SOBRANTE PARA KARDEX

                                            Dim auto_concepto_dev As Object = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                            auto_concepto_dev = xcmd.ExecuteScalar()
                                            If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
                                                Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                            End If

                                            Dim xconcepto_dev As String = ""
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
                                            xconcepto_dev = xcmd.ExecuteScalar

                                            xkardex = New FichaProducto.Prd_Kardex.c_Registro
                                            With xkardex
                                                .c_AutoConcepto.c_Texto = auto_concepto_dev
                                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                                .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada - xcant_vt
                                                .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario - xcant_vt_unid
                                                .c_Documento.c_Texto = xdoc_origen._Documento
                                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                                .c_Estatus.c_Texto = "0"
                                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                                .c_NotasDetallesMovimiento.c_Texto = "SIN PROCESAR SEGUN FACTURA #: " + xventa.RegistroDato._Documento
                                                .c_OrigenMovimiento.c_Texto = "0801"
                                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                                'Campos Nuevos
                                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                                .c_NombreConcepto.c_Texto = xconcepto_dev
                                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                                .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                            'Campos Nuevos
                                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                            If xcmd.ExecuteNonQuery() = 0 Then
                                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                            End If

                                        End If
                                    Else
                                        'SIGNIFICA QUE SE DEBE HACER UNA DEVOLUCION TOTAL DEL ITEM PARA EL KARDEX

                                        Dim auto_concepto_dev As Object = Nothing
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                        auto_concepto_dev = xcmd.ExecuteScalar()
                                        If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
                                            Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                        End If

                                        Dim xconcepto_dev As String = ""
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                        xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
                                        xconcepto_dev = xcmd.ExecuteScalar

                                        Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                        With xkardex
                                            .c_AutoConcepto.c_Texto = auto_concepto_dev
                                            .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
                                            .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
                                            .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
                                            .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
                                            .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
                                            .c_Documento.c_Texto = xdoc_origen._Documento
                                            .c_Entidad.c_Texto = xdoc_origen._NombreCliente
                                            .c_Estatus.c_Texto = "0"
                                            .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
                                            .c_NotasDetallesMovimiento.c_Texto = "NO SE PROCESO EN FACTURA #: " + xventa.RegistroDato._Documento
                                            .c_OrigenMovimiento.c_Texto = "0801"
                                            .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
                                            .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                            'Campos Nuevos
                                            .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
                                            .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
                                            .c_NombreConcepto.c_Texto = xconcepto_dev
                                            .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
                                            .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
                                            .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
                                            .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
                                            .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
                                            .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                        End With

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                        xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                        xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                        xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                        xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                        'Campos Nuevos
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                        If xcmd.ExecuteNonQuery() = 0 Then
                                            Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
                                        End If
                                    End If
                                Next

                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_DEPOSITO
                                    If xdetalle._DepositoBloqueado Then
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.PRODUCTOS_DEPOSITO_DESBLOQUEAR
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    If xcondiciones._Permitir_RupturaPorExistencia Then
                                        Dim xdisp As Decimal = 0
                                        Dim xreal As Decimal = 0

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xdisp = xcmd.ExecuteScalar()

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select real from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xreal = xcmd.ExecuteScalar()

                                        If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        Else
                                            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                        End If

                                        If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                        Else
                                            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                        End If
                                    End If

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
                                    xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'PRODUCTOS_KARDEX
                                    Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                    With xkardex
                                        .c_AutoConcepto.c_Texto = auto_concepto
                                        .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
                                        .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                        .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
                                        .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_NotasDetallesMovimiento.c_Texto = ""
                                        .c_OrigenMovimiento.c_Texto = "0801"
                                        .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
                                        .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Salida
                                        'Campos Nuevos
                                        .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                        .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
                                        .c_NombreConcepto.c_Texto = xconcepto
                                        .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
                                        .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
                                        .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
                                        .c_CodigoProducto.c_Texto = xdetalle.RegistroDato._CodigoProducto
                                        .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato._CodigoDeposito
                                        .c_CodigoConcepto.c_Texto = "VENTAS"
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                    xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                    xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                    'Campos Nuevos
                                    xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                    xcmd.ExecuteNonQuery()

                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If

                                    If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
                                        ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPRAO CON PRECIO DE VENTA
                                        'Dim xres As Integer = 0
                                        'xcmd.Parameters.Clear()
                                        'xcmd.CommandType = CommandType.Text
                                        'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
                                        'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
                                        'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
                                        'xres = xcmd.ExecuteScalar()
                                        'If xres = 1 Then
                                        '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
                                        '    Throw New Exception(xmens)
                                        'End If
                                    End If
                                Next

                                'FACTURA CONTADO
                                Dim MontoNotaCredito As Decimal = 0
                                Dim CantNotaCredito As Integer = 0
                                Dim MontoAnticipo As Decimal = 0
                                If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Contado Then
                                    For Each xpag In xpagos
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "NC00000001" Then
                                            MontoNotaCredito += xpag.RegsitroDato.c_MontoImporte.c_Valor
                                            CantNotaCredito += 1
                                        End If
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "AN00000001" Then
                                            MontoAnticipo += xpag.RegsitroDato.c_MontoImporte.c_Valor
                                        End If
                                    Next

                                    Dim autocxc_pago As String = ""
                                    Dim autocxc_recibopago As String = ""
                                    Dim autocxc_numerorecibopago As String = ""

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores SET a_cxc=a_cxc+1;select a_cxc from contadores"
                                    autocxc_pago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos=a_cxc_recibos+1;select a_cxc_recibos from contadores"
                                    autocxc_recibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1;select a_cxc_recibos_numero from contadores"
                                    autocxc_numerorecibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    'CXC, sea Contado / Credito
                                    Dim xcxc_doc_pago As New FichaCtasCobrar.c_CxC.c_Registro
                                    xcxc_doc_pago.LimpiarRegistro()
                                    With xcxc_doc_pago
                                        .c_AutoAgencia.c_Texto = ""
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCxC.c_Texto = autocxc_pago
                                        .c_AutoDocumento.c_Texto = ""
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_EstatusCancelado.c_Texto = ""
                                        .c_EstatusDocumentoCxC.c_Texto = "0"
                                        .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                        .c_MontoAcumulado.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_MontoImporte.c_Valor = (xventa.RegistroDato.c_TotalGeneral.c_Valor - MontoNotaCredito - MontoAnticipo)
                                        .c_MontoPorCobrar.c_Valor = 0
                                        .c_NombreAgencia.c_Texto = ""
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_Numero.c_Texto = ""
                                        .c_NumeroDocumento.c_Texto = autocxc_numerorecibopago
                                        .c_TipoDocumento.c_Texto = "PAG"
                                        .c_TipoMovimiento.c_Valor = -1
                                        .c_TipoOperacion.c_Texto = ""
                                        .c_AutoMovimientoEntrada.c_Texto = ""

                                        'Nuevo
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                    xcmd.Parameters.AddWithValue("@auto", xcxc_doc_pago.c_AutoCxC.c_Texto).Size = xcxc_doc_pago.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_pago.c_FechaProceso.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_pago.c_TipoDocumento.c_Texto).Size = xcxc_doc_pago.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xcxc_doc_pago.c_NumeroDocumento.c_Texto).Size = xcxc_doc_pago.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_pago.c_FechaVencimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_pago.c_NotasDetalles.c_Texto).Size = xcxc_doc_pago.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xcxc_doc_pago.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_pago.c_MontoAcumulado.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_pago.c_AutoCliente.c_Texto).Size = xcxc_doc_pago.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_pago.c_NombreCliente.c_Texto).Size = xcxc_doc_pago.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_pago.c_CiRifCliente.c_Texto).Size = xcxc_doc_pago.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_pago.c_CodigoCliente.c_Texto).Size = xcxc_doc_pago.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_pago.c_EstatusCancelado.c_Texto).Size = xcxc_doc_pago.c_EstatusCancelado.c_Largo
                                    xcmd.Parameters.AddWithValue("@resta", xcxc_doc_pago.c_MontoPorCobrar.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_pago.c_TipoOperacion.c_Texto).Size = xcxc_doc_pago.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_pago.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_pago.c_EstatusDocumentoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_pago.c_AutoDocumento.c_Texto).Size = xcxc_doc_pago.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xcxc_doc_pago.c_Numero.c_Texto).Size = xcxc_doc_pago.c_Numero.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_pago.c_AutoAgencia.c_Texto).Size = xcxc_doc_pago.c_AutoAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_pago.c_NombreAgencia.c_Texto).Size = xcxc_doc_pago.c_NombreAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xcxc_doc_pago.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_RECIBOS
                                    Dim xrecibo As New FichaCtasCobrar.c_Recibos.c_Registro
                                    With xrecibo
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCobrador.c_Texto = xventa._AutoCobrador
                                        .c_AutoRecibo.c_Texto = autocxc_recibopago
                                        .c_AutoUsuario.c_Texto = xventa.RegistroDato.c_AutoUsuario.c_Texto
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_DirFiscalCliente.c_Texto = xventa.RegistroDato.c_DirFiscalCliente.c_Texto
                                        .c_EstatusRecibo.c_Texto = "0"
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_MontoAnticipo.c_Valor = MontoAnticipo
                                        .c_MontoDescuento.c_Valor = 0
                                        .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_MontoImporteDocumento.c_Valor = 0
                                        .c_MontoTotalDocumento.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NombreCobrador.c_Texto = xventa._NombreCobrador
                                        .c_NombreUsuario.c_Texto = xventa.RegistroDato.c_Usuario.c_Texto
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_TelefonoCliente.c_Texto = xventa.RegistroDato.c_TelefonoCliente.c_Texto
                                        .c_CantidadDocumentosRelacionados.c_Valor = 1
                                        .c_CantNCPagadas.c_Valor = CantNotaCredito
                                        .c_MontoNCPagadas.c_Valor = MontoNotaCredito
                                        .c_AutoCxcPago.c_Texto = autocxc_pago
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
                                    xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xrecibo.c_NumeroRecibo.c_Texto).Size = xrecibo.c_NumeroRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xrecibo.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_usuario", xrecibo.c_AutoUsuario.c_Texto).Size = xrecibo.c_AutoUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xrecibo.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@usuario", xrecibo.c_NombreUsuario.c_Texto).Size = xrecibo.c_NombreUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe_documentos", xrecibo.c_MontoImporteDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuentos", xrecibo.c_MontoDescuento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_documentos", xrecibo.c_MontoTotalDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xrecibo.c_NotasDetalles.c_Texto).Size = xrecibo.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@cobrador", xrecibo.c_NombreCobrador.c_Texto).Size = xrecibo.c_NombreCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xrecibo.c_AutoCliente.c_Texto).Size = xrecibo.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre_cliente", xrecibo.c_NombreCliente.c_Texto).Size = xrecibo.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif_cliente", xrecibo.c_CiRifCliente.c_Texto).Size = xrecibo.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xrecibo.c_CodigoCliente.c_Texto).Size = xrecibo.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xrecibo.c_EstatusRecibo.c_Texto).Size = xrecibo.c_EstatusRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@direccion", xrecibo.c_DirFiscalCliente.c_Texto).Size = xrecibo.c_DirFiscalCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@telefono", xrecibo.c_TelefonoCliente.c_Texto).Size = xrecibo.c_TelefonoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cobrador", xrecibo.c_AutoCobrador.c_Texto).Size = xrecibo.c_AutoCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@anticipos", xrecibo.c_MontoAnticipo.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_doc_rel", xrecibo.c_CantidadDocumentosRelacionados.c_Valor)
                                    'campos nuevos
                                    xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xrecibo.c_MontoNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xrecibo.c_CantNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xrecibo.c_AutoCxcPago.c_Texto)
                                    xcmd.ExecuteNonQuery()

                                    'VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET " _
                                      + "recibo=@recibo, auto_recibo=@auto_recibo where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto)
                                    xcmd.Parameters.AddWithValue("@auto_recibo", autocxc_recibopago)
                                    xcmd.Parameters.AddWithValue("@recibo", autocxc_numerorecibopago)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_DOCUMENTOS
                                    Dim xdoc As New FichaCtasCobrar.c_Documentos.c_Registro
                                    With xdoc
                                        .c_AutoCxC.c_Texto = autocxc
                                        .c_AutoCxCPago.c_Texto = autocxc_pago
                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_Item.c_Valor = 1
                                        .c_Monto.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_NotasDetalles.c_Texto = ""
                                        .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_OrigenDocumento.c_Texto = "FACTURA"
                                        .c_TipoDocumento.c_Texto = "PAG"
                                        .c_TipoOperacion.c_Texto = "Cancelación"
                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xventa.RegistroDato._TotalGenereal
                                        .c_SignoDocumento.c_Valor = 1
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                    'campos nuevo
                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    If MontoNotaCredito > 0 Then
                                        Dim dr As SqlDataReader
                                        Dim xtb_nc As New DataTable

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "SELECT * FROM cxc WHERE auto_cliente=@auto_cliente AND TIPO_DOCUMENTO='NCF' AND CANCELADO='0' AND ESTATUS='0' ORDER BY AUTO ASC"
                                        xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                        dr = xcmd.ExecuteReader()
                                        xtb_nc.Load(dr)

                                        Dim xitem As Integer = 1
                                        Dim xresul As Integer = 0
                                        Dim xmonto As Decimal = 0
                                        Dim xcxc_nc As New FichaCtasCobrar.c_CxC
                                        Dim xsaldopendiente_antes_del_pago As Decimal = 0

                                        For Each xr As DataRow In xtb_nc.Rows
                                            xitem += 1
                                            xcxc_nc.M_CargarRegistro(xr)
                                            xsaldopendiente_antes_del_pago = 0
                                            xsaldopendiente_antes_del_pago = xcxc_nc.RegistroDato._MontoPorCobrar

                                            If (MontoNotaCredito - xmonto) >= Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar) Then
                                                xmonto += Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)

                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = "update cxc set resta=0, acumulado=importe, cancelado='1' where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
                                                xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
                                                xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
                                                xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
                                                xresul = xcmd.ExecuteNonQuery()

                                                If xresul = 0 Then
                                                    Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
                                                        xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                    Throw New Exception(xmen)
                                                End If

                                                'CXC DOCUMENTOS DE NOTAS DE CREDITO
                                                With xdoc
                                                    .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
                                                    .c_AutoCxCPago.c_Texto = autocxc_pago
                                                    .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                                    .c_Item.c_Valor = xitem
                                                    .c_Monto.c_Valor = Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)
                                                    .c_NotasDetalles.c_Texto = ""
                                                    .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                    .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                                    .c_OrigenDocumento.c_Texto = "NOTA CREDITO"
                                                    .c_TipoDocumento.c_Texto = "PAG"
                                                    .c_TipoOperacion.c_Texto = "Cancelación"
                                                    .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
                                                    .c_SignoDocumento.c_Valor = -1
                                                End With

                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                                xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                                xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                                xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                                xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                                xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                                xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                                xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                                xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                                xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                                xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                                'campos nuevo
                                                xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                                xcmd.ExecuteNonQuery()
                                            Else
                                                If (MontoNotaCredito - xmonto) >= 0 Then
                                                    Dim xmont As Decimal = 0
                                                    xmont = -1 * (MontoNotaCredito - xmonto)
                                                    xmonto += (MontoNotaCredito - xmonto)

                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = "update cxc set resta=resta-@monto, acumulado=acumulado+@monto where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
                                                    xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
                                                    xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@monto", xmont)
                                                    xresul = xcmd.ExecuteNonQuery()

                                                    If xresul = 0 Then
                                                        Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
                                                            xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                        Throw New Exception(xmen)
                                                    End If

                                                    'CXC DOCUMENTOS DE NOTAS DE CREDITO
                                                    With xdoc
                                                        .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
                                                        .c_AutoCxCPago.c_Texto = autocxc_pago
                                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                                        .c_Item.c_Valor = xitem
                                                        .c_Monto.c_Valor = Math.Abs(xmont)
                                                        .c_NotasDetalles.c_Texto = ""
                                                        .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
                                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                                        .c_OrigenDocumento.c_Texto = "NOTA CREDITO"
                                                        .c_TipoDocumento.c_Texto = "PAG"
                                                        .c_TipoOperacion.c_Texto = "Cancelación"
                                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
                                                        .c_SignoDocumento.c_Valor = -1
                                                    End With

                                                    xcmd.Parameters.Clear()
                                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                                    xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                                    'campos nuevo
                                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                                    xcmd.ExecuteNonQuery()
                                                End If
                                            End If

                                            If xmonto = MontoNotaCredito Then
                                                Exit For
                                            End If
                                        Next

                                        If (MontoNotaCredito - xmonto) <> 0 Then
                                            Throw New Exception("ERROR EN PROCESAR DOCUMENTOS DE NOTAS DE CREDITO... VERIFIQUE POR FAVOR" + vbCrLf + "SALDO NO CORRESPONDE AL MONTO TOTAL DE NOTAS DE CREDITO")
                                        End If

                                        'DOCUMENTO CXC RECIBO :> INCDICAR EL NUMERO DE DOCUMENTOS RELACIONADOS
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "update cxc_recibos set cant_doc_rel= @cant_doc_rel where auto = @auto"
                                        xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
                                        xcmd.Parameters.AddWithValue("@cant_doc_rel", xitem)
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    'CXC_MODO_PAGO
                                    For Each xpag In xpagos
                                        If xpag.RegsitroDato.c_AutoTipoPago.c_Texto <> "NC00000001" Then
                                            xpag.RegsitroDato.c_AutoRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                            xpag.RegsitroDato.c_EstatusMovimiento.c_Texto = "0"
                                            xpag.RegsitroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
                                            xcmd.Parameters.AddWithValue("@numero", xpag.RegsitroDato.c_Numero.c_Texto).Size = xpag.RegsitroDato.c_Numero.c_Largo
                                            xcmd.Parameters.AddWithValue("@agencia", xpag.RegsitroDato.c_NombreAgencia.c_Texto).Size = xpag.RegsitroDato.c_NombreAgencia.c_Largo
                                            xcmd.Parameters.AddWithValue("@importe", xpag.RegsitroDato.c_MontoImporte.c_Valor)
                                            xcmd.Parameters.AddWithValue("@codigo", xpag.RegsitroDato.c_CodigoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_CodigoTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_recibo", xpag.RegsitroDato.c_AutoRecibo.c_Texto).Size = xpag.RegsitroDato.c_AutoRecibo.c_Largo
                                            xcmd.Parameters.AddWithValue("@nombre", xpag.RegsitroDato.c_NombreTipoPago.c_Texto).Size = xpag.RegsitroDato.c_NombreTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_medios_pago", xpag.RegsitroDato.c_AutoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_AutoTipoPago.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_agencia", xpag.RegsitroDato.c_AutoAgencia.c_Texto).Size = xpag.RegsitroDato.c_AutoAgencia.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xpag.RegsitroDato.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@estatus", xpag.RegsitroDato.c_EstatusMovimiento.c_Texto).Size = xpag.RegsitroDato.c_EstatusMovimiento.c_Largo
                                            xcmd.Parameters.AddWithValue("@monto_recibido", xpag.RegsitroDato.c_MontoRecibido.c_Valor)
                                            xcmd.ExecuteNonQuery()
                                        End If
                                    Next

                                    'DOCUMENTO FACTURA EN CXC :> PAGADO COMPLETO
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update cxc set cancelado = '1', acumulado = importe, resta = 0 where auto = @auto"
                                    xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
                                    xcmd.ExecuteNonQuery()
                                End If

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos-@total_anticipos, " _
                                  + "fecha_ult_compra=@fecha_ult_compra where auto=@auto and estatus='Activo'"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@fecha_ult_compra", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@total_anticipos", MontoAnticipo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If

                                'TABLA TEMPORALVENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='1' and autousuario=@autousuario"
                                xcmd.Parameters.AddWithValue("@idunico", idunico)
                                xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
                                xcmd.ExecuteNonQuery()

                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                    Dim xres As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc and estatus='0'"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xres = xcmd.ExecuteNonQuery()
                                    If xres = 0 Then
                                        If xventa._f_FichaDocumentoOrigen._TipoDocumento = TipoDocumentoVentaRegistrado.Presupuesto Then
                                        Else
                                            Throw New Exception("DOCUMENTO ORIGEN HA SIDO IMPOSIBLE ACTUALIZAR SU ESTATUS A PROCESADO, VERIFIQUE POR FAVOR")
                                        End If
                                    End If

                                    Dim xreg As New FichaVentas.V_PresupuestoPedidoOtros
                                    With xreg.RegistroDato
                                        .c_AutoDocumentoOrigen._ContenidoCampo = xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega
                                        .c_AutoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._AutoDocumento
                                        .c_AutoEntidad._ContenidoCampo = xventa.RegistroDato._AutoCliente
                                        .c_CiRif._ContenidoCampo = xventa.RegistroDato._CiRifCliente
                                        .c_DiasValidesDocOrigen._ContenidoCampo = xdoc_origen._DiasValidezDocumento
                                        .c_FechaEmisionDocumentoOrigen._ContenidoCampo = xdoc_origen._FechaEmision
                                        .c_FechaProcesoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._FechaEmision
                                        .c_NombreEntidad._ContenidoCampo = xventa.RegistroDato._NombreCliente
                                        .c_NumeroDocumento_Origen._ContenidoCampo = xdoc_origen._Documento
                                        .c_NumeroDocumento_Venta._ContenidoCampo = xventa.RegistroDato._Documento
                                        .c_TipoDocumentoOrigen._ContenidoCampo = xdoc_origen.c_TipoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                    xcmd.Parameters.AddWithValue("@auto_doc_origen", xreg.RegistroDato._AutoDocumentoOrigen).Size = xreg.RegistroDato.c_AutoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@auto_doc_venta", xreg.RegistroDato._AutoDocumentoVenta).Size = xreg.RegistroDato.c_AutoDocumentoVenta._LargoCampo
                                    xcmd.Parameters.AddWithValue("@fechaemision_origen", xreg.RegistroDato._FechaEmisionDocumento_Origen)
                                    xcmd.Parameters.AddWithValue("@fechaproceso", xreg.RegistroDato._FechaProcesoDocumento_Venta)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xreg.RegistroDato._AutoEntidad).Size = xreg.RegistroDato.c_AutoEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@ci_rif_entidad", xreg.RegistroDato._CiRif_Entidad).Size = xreg.RegistroDato.c_CiRif._LargoCampo
                                    xcmd.Parameters.AddWithValue("@nombre_entidad", xreg.RegistroDato._NombreEntidad).Size = xreg.RegistroDato.c_NombreEntidad._LargoCampo
                                    xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", xreg.RegistroDato._DiasValidezDocumentoOrigen)
                                    xcmd.Parameters.AddWithValue("@tipodocumento_origen", IIf(xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo Is Nothing, _
                                                "", xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo)).Size = xreg.RegistroDato.c_TipoDocumentoOrigen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_origen", xreg.RegistroDato._NumeroDocumentoOrigen).Size = xreg.RegistroDato.c_NumeroDocumento_Origen._LargoCampo
                                    xcmd.Parameters.AddWithValue("@numdocumento_venta", xreg.RegistroDato._NumeroDocumentoVenta).Size = xreg.RegistroDato.c_NumeroDocumento_Venta._LargoCampo
                                    xcmd.ExecuteNonQuery()
                                End If

                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("PROBLEMA AL REGISTRAR VENTA:" + vbCrLf + ex.Message)
                End Try
            End Function

            ''' <summary>
            ''' Permite Procesar Un Pedido
            ''' </summary>
            ''' <param name="idunico"></param>
            ''' IDENTIFICADOR UNICO
            ''' <param name="xventa"></param>
            ''' CLASE PARA EL ENCABEZADO DEL PEDIDO
            ''' <param name="xventadetalle"></param>
            ''' CLASE PARA EL CUERPO DEL PEDIDO
            ''' <param name="xcondiciones"></param>
            ''' CONDICIONES DADAS PARA PROCESAR EL PEDIDO
            Function F_GrabarPedido(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
                                   ByVal xpagos As List(Of FichaCtasCobrar.c_ModosPago.AgregarModoPago), _
                                   ByVal xcondiciones As CondicionesParaVenta)

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_3 As String = "update contadores set a_pedido=a_pedido+1; select a_pedido from contadores"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                Dim xtr As SqlTransaction = Nothing
                Try
                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        .c_BloquearAlmacen.c_Texto = IIf(xcondiciones._Permitir_RupturaPorExistencia, "1", "0")
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
                    End With

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto

                            .RegistroDato.c_TipoMovimiento.c_Texto = ""
                            .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

                            Dim x0 As Decimal = 0
                            x0 = .RegistroDato.c_PrecioNeto.c_Valor

                            .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                            .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                     x0 / 100, 2, MidpointRounding.AwayFromZero)
                            x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioItem.c_Valor = x0

                            Dim x1 As Decimal = 0
                            x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_TotalNeto.c_Valor = x1

                            Dim x2 As Decimal = 0
                            x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_MontoIva.c_Valor = x2
                            .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                            Dim x3 As Decimal = 0
                            x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                            Dim x4 As Decimal = x0
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                            .RegistroDato.c_PrecioFinal.c_Valor = x4
                            .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                            Dim x5 As Decimal = 0
                            Dim x6 As Decimal = 0
                            x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                            x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                            .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                            If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                            Else
                                .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                            End If

                            If xcondiciones._Permitir_PrecioCero = True Then
                            Else
                                If x4 = 0 Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
                                End If
                            End If

                            If xcondiciones._Permitir_PrecioMenorCosto = True Then
                            Else
                                If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
                                End If
                            End If
                        End With

                        xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                       ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                       ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                       ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
                    Next

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE PEDIDOS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xventa.RegistroDato.c_Documento.c_Texto = "PED" + xcmd.ExecuteScalar().ToString.Trim.PadLeft(7, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS_PEDIDO
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                ''
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.montoDivisa)
                                xcmd.Parameters.AddWithValue("@estatusDivisa", xventa.esDivisa)
                                xcmd.ExecuteNonQuery()

                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If

                                    If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
                                        ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPARO CON PRECIO DE VENTA
                                        'Dim xres As Integer = 0
                                        'xcmd.Parameters.Clear()
                                        'xcmd.CommandType = CommandType.Text
                                        'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
                                        'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
                                        'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
                                        'xres = xcmd.ExecuteScalar()
                                        'If xres = 1 Then
                                        '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
                                        '    Throw New Exception(xmens)
                                        'End If
                                    End If

                                    If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" AndAlso xcondiciones._Permitir_RupturaPorExistencia Then
                                        If xdetalle._DepositoBloqueado = False Then
                                            Dim xdisp As Decimal = 0
                                            Dim xreal As Decimal = 0
                                            Dim xres As Integer = 0

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                            xdisp = xcmd.ExecuteScalar()

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select real from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                            xreal = xcmd.ExecuteScalar()

                                            If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                            Else
                                                Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
                                            End If

                                            If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
                                            Else
                                                Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
                                            End If

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "update productos_deposito set disponible=disponible-@inv, reservada=reservada+@inv where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                            xcmd.Parameters.AddWithValue("@inv", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                            xres = xcmd.ExecuteNonQuery()

                                            If xres = 0 Then
                                                Throw New Exception("ERROR AL ACTUALIZAR EXISTENCIA" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf)
                                            End If
                                        End If
                                    End If

                                Next

                                Dim ximporte As Decimal = 0
                                For Each xpag In xpagos
                                    ximporte += xpag.RegsitroDato.c_MontoImporte.c_Valor
                                Next

                                If ximporte > 0 Then
                                    Dim autocxc_pago As String = ""
                                    Dim autocxc_recibopago As String = ""
                                    Dim autocxc_numerorecibopago As String = ""

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores SET a_cxc=a_cxc+1;select a_cxc from contadores"
                                    autocxc_pago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos=a_cxc_recibos+1;select a_cxc_recibos from contadores"
                                    autocxc_recibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1;select a_cxc_recibos_numero from contadores"
                                    autocxc_numerorecibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    'CXC, sea Contado / Credito
                                    Dim xcxc As New FichaCtasCobrar.c_CxC.c_Registro
                                    xcxc.LimpiarRegistro()
                                    With xcxc
                                        .c_AutoAgencia.c_Texto = ""
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCxC.c_Texto = autocxc_pago
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_EstatusCancelado.c_Texto = "1"
                                        .c_EstatusDocumentoCxC.c_Texto = "0"
                                        .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                        .c_MontoAcumulado.c_Valor = ximporte
                                        .c_MontoImporte.c_Valor = ximporte
                                        .c_MontoPorCobrar.c_Valor = 0
                                        .c_NombreAgencia.c_Texto = ""
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NotasDetalles.c_Texto = "ANTICIPO POR PEDIDO #" + xventa.RegistroDato.c_Documento.c_Texto
                                        .c_Numero.c_Texto = ""
                                        .c_NumeroDocumento.c_Texto = autocxc_numerorecibopago
                                        .c_TipoDocumento.c_Texto = "ANT"
                                        .c_TipoMovimiento.c_Valor = -1
                                        .c_TipoOperacion.c_Texto = ""
                                        .c_AutoMovimientoEntrada.c_Texto = ""
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                    xcmd.Parameters.AddWithValue("@auto", xcxc.c_AutoCxC.c_Texto).Size = xcxc.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xcxc.c_FechaProceso.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo_documento", xcxc.c_TipoDocumento.c_Texto).Size = xcxc.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xcxc.c_NumeroDocumento.c_Texto).Size = xcxc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc.c_FechaVencimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xcxc.c_NotasDetalles.c_Texto).Size = xcxc.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xcxc.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc.c_MontoAcumulado.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xcxc.c_AutoCliente.c_Texto).Size = xcxc.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cliente", xcxc.c_NombreCliente.c_Texto).Size = xcxc.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif", xcxc.c_CiRifCliente.c_Texto).Size = xcxc.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc.c_CodigoCliente.c_Texto).Size = xcxc.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@cancelado", xcxc.c_EstatusCancelado.c_Texto).Size = xcxc.c_EstatusCancelado.c_Largo
                                    xcmd.Parameters.AddWithValue("@resta", xcxc.c_MontoPorCobrar.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xcxc.c_TipoOperacion.c_Texto).Size = xcxc.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xcxc.c_EstatusDocumentoCxC.c_Texto).Size = xcxc.c_EstatusDocumentoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_documento", xcxc.c_AutoDocumento.c_Texto).Size = xcxc.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xcxc.c_Numero.c_Texto).Size = xcxc.c_Numero.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_agencia", xcxc.c_AutoAgencia.c_Texto).Size = xcxc.c_AutoAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@agencia", xcxc.c_NombreAgencia.c_Texto).Size = xcxc.c_NombreAgencia.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xcxc.c_TipoMovimiento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc.c_AutoMovimientoEntrada.c_Texto).Size = xcxc.c_AutoMovimientoEntrada.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_emision", xcxc.c_FechaEmision.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_RECIBOS
                                    Dim xrecibo As New FichaCtasCobrar.c_Recibos.c_Registro
                                    With xrecibo
                                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                        .c_AutoCobrador.c_Texto = xventa._AutoCobrador
                                        .c_AutoRecibo.c_Texto = autocxc_recibopago
                                        .c_AutoUsuario.c_Texto = xventa.RegistroDato.c_AutoUsuario.c_Texto
                                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                        .c_DirFiscalCliente.c_Texto = xventa.RegistroDato.c_DirFiscalCliente.c_Texto
                                        .c_EstatusRecibo.c_Texto = "0"
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_MontoAnticipo.c_Valor = ximporte
                                        .c_MontoDescuento.c_Valor = 0
                                        .c_MontoImporte.c_Valor = ximporte
                                        .c_MontoImporteDocumento.c_Valor = 0
                                        .c_MontoTotalDocumento.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
                                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                        .c_NombreCobrador.c_Texto = xventa._NombreCobrador
                                        .c_NombreUsuario.c_Texto = xventa.RegistroDato.c_Usuario.c_Texto
                                        .c_NotasDetalles.c_Texto = "ANTICIPO POR PEDIDO #" + xventa.RegistroDato.c_Documento.c_Texto
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_TelefonoCliente.c_Texto = xventa.RegistroDato.c_TelefonoCliente.c_Texto
                                        .c_CantidadDocumentosRelacionados.c_Valor = 1
                                        .c_CantNCPagadas.c_Valor = 0
                                        .c_MontoNCPagadas.c_Valor = 0
                                        .c_AutoCxcPago.c_Texto = autocxc_pago
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
                                    xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero", xrecibo.c_NumeroRecibo.c_Texto).Size = xrecibo.c_NumeroRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xrecibo.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_usuario", xrecibo.c_AutoUsuario.c_Texto).Size = xrecibo.c_AutoUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe", xrecibo.c_MontoImporte.c_Valor)
                                    xcmd.Parameters.AddWithValue("@usuario", xrecibo.c_NombreUsuario.c_Texto).Size = xrecibo.c_NombreUsuario.c_Largo
                                    xcmd.Parameters.AddWithValue("@importe_documentos", xrecibo.c_MontoImporteDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuentos", xrecibo.c_MontoDescuento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_documentos", xrecibo.c_MontoTotalDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xrecibo.c_NotasDetalles.c_Texto).Size = xrecibo.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@cobrador", xrecibo.c_NombreCobrador.c_Texto).Size = xrecibo.c_NombreCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cliente", xrecibo.c_AutoCliente.c_Texto).Size = xrecibo.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre_cliente", xrecibo.c_NombreCliente.c_Texto).Size = xrecibo.c_NombreCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif_cliente", xrecibo.c_CiRifCliente.c_Texto).Size = xrecibo.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_cliente", xrecibo.c_CodigoCliente.c_Texto).Size = xrecibo.c_CodigoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xrecibo.c_EstatusRecibo.c_Texto).Size = xrecibo.c_EstatusRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@direccion", xrecibo.c_DirFiscalCliente.c_Texto).Size = xrecibo.c_DirFiscalCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@telefono", xrecibo.c_TelefonoCliente.c_Texto).Size = xrecibo.c_TelefonoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cobrador", xrecibo.c_AutoCobrador.c_Texto).Size = xrecibo.c_AutoCobrador.c_Largo
                                    xcmd.Parameters.AddWithValue("@anticipos", xrecibo.c_MontoAnticipo.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_doc_rel", xrecibo.c_CantidadDocumentosRelacionados.c_Valor)
                                    'campos nuevos
                                    xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xrecibo.c_MontoNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xrecibo.c_CantNCPagadas.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xrecibo.c_AutoCxcPago.c_Texto)
                                    xcmd.ExecuteNonQuery()

                                    'VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE VENTAS SET " _
                                      + "recibo=@recibo, auto_recibo=@auto_recibo where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto)
                                    xcmd.Parameters.AddWithValue("@auto_recibo", autocxc_recibopago)
                                    xcmd.Parameters.AddWithValue("@recibo", autocxc_numerorecibopago)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_DOCUMENTOS
                                    Dim xdoc As New FichaCtasCobrar.c_Documentos.c_Registro
                                    With xdoc
                                        .c_AutoCxC.c_Texto = xcxc.c_AutoCxC.c_Texto
                                        .c_AutoCxCPago.c_Texto = autocxc_pago
                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                        .c_Item.c_Valor = 1
                                        .c_Monto.c_Valor = ximporte
                                        .c_NotasDetalles.c_Texto = "ANTICIPO POR PEDIDO #" + xventa.RegistroDato.c_Documento.c_Texto
                                        .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
                                        .c_OrigenDocumento.c_Texto = "PEDIDO"
                                        .c_TipoDocumento.c_Texto = "PAG"
                                        .c_TipoOperacion.c_Texto = "ANTICIPO"
                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = 0
                                        .c_SignoDocumento.c_Valor = -1
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                    'campos nuevo
                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
                                    xcmd.ExecuteNonQuery()

                                    'CXC_MODO_PAGO
                                    For Each xpag In xpagos
                                        xpag.RegsitroDato.c_AutoRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
                                        xpag.RegsitroDato.c_EstatusMovimiento.c_Texto = "0"
                                        xpag.RegsitroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
                                        xcmd.Parameters.AddWithValue("@numero", xpag.RegsitroDato.c_Numero.c_Texto).Size = xpag.RegsitroDato.c_Numero.c_Largo
                                        xcmd.Parameters.AddWithValue("@agencia", xpag.RegsitroDato.c_NombreAgencia.c_Texto).Size = xpag.RegsitroDato.c_NombreAgencia.c_Largo
                                        xcmd.Parameters.AddWithValue("@importe", xpag.RegsitroDato.c_MontoImporte.c_Valor)
                                        xcmd.Parameters.AddWithValue("@codigo", xpag.RegsitroDato.c_CodigoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_CodigoTipoPago.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_recibo", xpag.RegsitroDato.c_AutoRecibo.c_Texto).Size = xpag.RegsitroDato.c_AutoRecibo.c_Largo
                                        xcmd.Parameters.AddWithValue("@nombre", xpag.RegsitroDato.c_NombreTipoPago.c_Texto).Size = xpag.RegsitroDato.c_NombreTipoPago.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_medios_pago", xpag.RegsitroDato.c_AutoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_AutoTipoPago.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_agencia", xpag.RegsitroDato.c_AutoAgencia.c_Texto).Size = xpag.RegsitroDato.c_AutoAgencia.c_Largo
                                        xcmd.Parameters.AddWithValue("@fecha", xpag.RegsitroDato.c_FechaEmision.c_Valor)
                                        xcmd.Parameters.AddWithValue("@estatus", xpag.RegsitroDato.c_EstatusMovimiento.c_Texto).Size = xpag.RegsitroDato.c_EstatusMovimiento.c_Largo
                                        xcmd.Parameters.AddWithValue("@monto_recibido", xpag.RegsitroDato.c_MontoRecibido.c_Valor)
                                        xcmd.ExecuteNonQuery()
                                    Next
                                End If

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos+@total_anticipos, " _
                                  + "fecha_ult_compra=@fecha_ult_compra where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@fecha_ult_compra", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.Parameters.AddWithValue("@total_anticipos", ximporte)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If

                                'TABLA TEMPORALVENTA
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='4' and autousuario=@autousuario"
                                xcmd.Parameters.AddWithValue("@idunico", idunico)
                                xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
                                xcmd.ExecuteNonQuery()

                                If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
                                    Dim xdr As SqlDataReader
                                    Dim xtb1 As New DataTable
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select * from ventas where auto=@autodoc"
                                    xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                    xdr = xcmd.ExecuteReader()
                                    xtb1.Load(xdr)
                                    xdr.Close()

                                    If xtb1.Rows.Count = 0 Then
                                        Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    End If

                                    Dim xdoc_origen As New FichaVentas.V_Ventas.c_Registro
                                    xdoc_origen.CargarRegistro(xtb1.Rows(0))

                                    If xdoc_origen._EstatusDocumento = TipoEstatus.Inactivo Then
                                        Throw New Exception("DOCUMENTO ORIGEN HA SIDO ANULADO POR OTRO USUARIO / NO ENCONTRADO , VERIFIQUE POR FAVOR")
                                    Else

                                        ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
                                        Dim xres As Integer = 0
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc"
                                        xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
                                        xres = xcmd.ExecuteNonQuery()
                                        If xres = 0 Then
                                            Throw New Exception("DOCUMENTO ORIGEN HA SIDO IMPOSIBLE ACTUALIZAR SU ESTATUS A PROCESADO, VERIFIQUE POR FAVOR")
                                        Else

                                            Dim xreg As New FichaVentas.V_PresupuestoPedidoOtros
                                            With xreg.RegistroDato
                                                .c_AutoDocumentoOrigen._ContenidoCampo = xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega
                                                .c_AutoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._AutoDocumento
                                                .c_AutoEntidad._ContenidoCampo = xventa.RegistroDato._AutoCliente
                                                .c_CiRif._ContenidoCampo = xventa.RegistroDato._CiRifCliente
                                                .c_DiasValidesDocOrigen._ContenidoCampo = xdoc_origen._DiasValidezDocumento
                                                .c_FechaEmisionDocumentoOrigen._ContenidoCampo = xdoc_origen._FechaEmision
                                                .c_FechaProcesoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._FechaEmision
                                                .c_NombreEntidad._ContenidoCampo = xventa.RegistroDato._NombreCliente
                                                .c_NumeroDocumento_Origen._ContenidoCampo = xdoc_origen._Documento
                                                .c_NumeroDocumento_Venta._ContenidoCampo = xventa.RegistroDato._Documento
                                                .c_TipoDocumentoOrigen._ContenidoCampo = xdoc_origen.c_TipoDocumento.c_Texto
                                            End With

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
                                            xcmd.Parameters.AddWithValue("@auto_doc_origen", xreg.RegistroDato._AutoDocumentoOrigen).Size = xreg.RegistroDato.c_AutoDocumentoOrigen._LargoCampo
                                            xcmd.Parameters.AddWithValue("@auto_doc_venta", xreg.RegistroDato._AutoDocumentoVenta).Size = xreg.RegistroDato.c_AutoDocumentoVenta._LargoCampo
                                            xcmd.Parameters.AddWithValue("@fechaemision_origen", xreg.RegistroDato._FechaEmisionDocumento_Origen)
                                            xcmd.Parameters.AddWithValue("@fechaproceso", xreg.RegistroDato._FechaProcesoDocumento_Venta)
                                            xcmd.Parameters.AddWithValue("@auto_entidad", xreg.RegistroDato._AutoEntidad).Size = xreg.RegistroDato.c_AutoEntidad._LargoCampo
                                            xcmd.Parameters.AddWithValue("@ci_rif_entidad", xreg.RegistroDato._CiRif_Entidad).Size = xreg.RegistroDato.c_CiRif._LargoCampo
                                            xcmd.Parameters.AddWithValue("@nombre_entidad", xreg.RegistroDato._NombreEntidad).Size = xreg.RegistroDato.c_NombreEntidad._LargoCampo
                                            xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", xreg.RegistroDato._DiasValidezDocumentoOrigen)
                                            xcmd.Parameters.AddWithValue("@tipodocumento_origen", IIf(xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo Is Nothing, _
                                                    "", xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo)).Size = xreg.RegistroDato.c_TipoDocumentoOrigen._LargoCampo
                                            xcmd.Parameters.AddWithValue("@numdocumento_origen", xreg.RegistroDato._NumeroDocumentoOrigen).Size = xreg.RegistroDato.c_NumeroDocumento_Origen._LargoCampo
                                            xcmd.Parameters.AddWithValue("@numdocumento_venta", xreg.RegistroDato._NumeroDocumentoVenta).Size = xreg.RegistroDato.c_NumeroDocumento_Venta._LargoCampo
                                            xcmd.ExecuteNonQuery()
                                        End If
                                    End If
                                End If

                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("VENTAS" + vbCrLf + "ERROR AL GRABAR VENTA:" + vbCrLf + ex.Message)
                End Try
            End Function
#End Region


            Function F_RecuperarDocumento(ByVal xrecuperar As RecuperarDoc)
                Dim xtr As SqlTransaction
                Try
                    Dim x As Integer = [Enum].Parse(GetType(TipoDocumentoVenta), xrecuperar._TipoDocumento)
                    Dim xtb As New DataTable
                    Using xadap As New SqlDataAdapter("", _MiCadenaConexion)
                        xadap.SelectCommand.CommandText = "select * from temporalventa where " _
                         + " fecha=@fecha and idunico=@idunico and autousuario=@autousuario and tipodocumento=@tipodocumento"
                        xadap.SelectCommand.Parameters.AddWithValue("@autousuario", xrecuperar._AutoUsuario_Recuperar)
                        xadap.SelectCommand.Parameters.AddWithValue("@idunico", xrecuperar._IdUnico_Recuperar)
                        xadap.SelectCommand.Parameters.AddWithValue("@fecha", xrecuperar._FechaMovimiento_Recuperar)
                        xadap.SelectCommand.Parameters.AddWithValue("@tipodocumento", x.ToString)
                        xadap.Fill(xtb)
                    End Using

                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                For Each xrow As DataRow In xtb.Rows
                                    Dim xr As New FichaVentas.V_TemporalVenta.c_Registro
                                    Dim xreg As New FichaVentas.V_TemporalVenta.c_Registro

                                    xr.CargarRegistro(xrow)

                                    xcmd.CommandText = "select a_temporalventa from contadores"
                                    If IsDBNull(xcmd.ExecuteScalar()) Then
                                        xcmd.CommandText = "update contadores set a_temporalventa=0"
                                        xcmd.ExecuteScalar()
                                    End If

                                    xcmd.CommandText = "update contadores set a_temporalventa=a_temporalventa+1; " _
                                        + "select a_temporalventa from contadores"
                                    xreg.c_AutoItem.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                    With xreg
                                        .c_AutoDeposito.c_Texto = xr.c_AutoDeposito.c_Texto
                                        .c_AutoMedida.c_Texto = xr.c_AutoMedida.c_Texto
                                        .c_AutoProducto.c_Texto = xr.c_AutoProducto.c_Texto
                                        .c_AutoUsuario.c_Texto = xrecuperar._AutoUsuario
                                        .c_CantidadDespachar.c_Valor = xr.c_CantidadDespachar.c_Valor
                                        .c_CodigoProducto.c_Texto = xr.c_CodigoProducto.c_Texto
                                        .c_ContenidoEmpaque.c_Valor = xr.c_ContenidoEmpaque.c_Valor
                                        .c_CostoInventario.c_Valor = xr.c_CostoInventario.c_Valor
                                        .c_CostoVenta.c_Valor = xr.c_CostoVenta.c_Valor
                                        .c_Descuento.c_Valor = xr.c_Descuento.c_Valor
                                        .c_EsPesado.c_Texto = xr.c_EsPesado.c_Texto
                                        .c_EstacionEquipo.c_Texto = xrecuperar._EquipoEstacion
                                        .c_FechaProceso.c_Valor = xrecuperar._FechaMovimiento
                                        .c_ForzarDecimalesMedida.c_Texto = xr.c_ForzarDecimalesMedida.c_Texto
                                        .c_IdUnico.c_Texto = xrecuperar._IDUnico
                                        .c_ItemNotas.c_Texto = xr.c_ItemNotas.c_Texto
                                        .c_NombreEmpaque.c_Texto = xr.c_NombreEmpaque.c_Texto
                                        .c_NombreProducto.c_Texto = xr.c_NombreProducto.c_Texto
                                        .c_NombreUsuario.c_Texto = xrecuperar._NombreUsuario
                                        .c_NumeroDecimalesMedida.c_Texto = xr.c_NumeroDecimalesMedida.c_Texto
                                        .c_PrecioNeto.c_Valor = xr.c_PrecioNeto.c_Valor
                                        .c_PSugerido.c_Valor = xr.c_PSugerido.c_Valor
                                        .c_ReferenciaEmpaque.c_Texto = xr.c_ReferenciaEmpaque.c_Texto
                                        .c_TasaIva.c_Valor = xr.c_TasaIva.c_Valor
                                        .c_TipoDocumento.c_Texto = x.ToString
                                        .c_TipoTasa.c_Texto = xr.c_TipoTasa.c_Texto
                                        .c_BloquearExistencia.c_Texto = xr.c_BloquearExistencia.c_Texto
                                        .c_PLiquida.c_Valor = xr.c_PLiquida.c_Valor
                                        .c_Importe.c_Valor = xr.c_Importe.c_Valor
                                        .c_AutoDocumento_Origen.c_Texto = xr.c_AutoDocumento_Origen.c_Texto
                                        .c_ProblemaDocumento_Origen.c_Texto = xr.c_ProblemaDocumento_Origen.c_Texto
                                        .c_TipoDocumento_Origen.c_Texto = xr.c_TipoDocumento_Origen.c_Texto
                                        .c_AutoItem_Documento_Origen.c_Texto = xr.c_AutoItem_Documento_Origen.c_Texto
                                    End With

                                    xcmd.CommandText = FichaVentas.V_TemporalVenta.InsertRegistroTemporalVenta
                                    xcmd.Parameters.Clear()
                                    With xcmd.Parameters
                                        .AddWithValue("@codigo", xreg.c_CodigoProducto.c_Texto).Size = xreg.c_CodigoProducto.c_Largo
                                        .AddWithValue("@producto", xreg.c_NombreProducto.c_Texto).Size = xreg.c_NombreProducto.c_Largo
                                        .AddWithValue("@cantidad", xreg.c_CantidadDespachar.c_Valor)
                                        .AddWithValue("@precioneto", xreg.c_PrecioNeto.c_Valor)
                                        .AddWithValue("@descuento", xreg.c_Descuento.c_Valor)
                                        .AddWithValue("@tasaiva", xreg.c_TasaIva.c_Valor)
                                        .AddWithValue("@importe", xreg._Importe)
                                        .AddWithValue("@espesado", xreg.c_EsPesado.c_Texto).Size = xreg.c_EsPesado.c_Largo
                                        .AddWithValue("@autoitem", xreg.c_AutoItem.c_Texto).Size = xreg.c_AutoItem.c_Largo
                                        .AddWithValue("@autoproducto", xreg._AutoProducto).Size = xreg.c_CodigoProducto.c_Largo
                                        .AddWithValue("@bloquearexistencia", xreg.c_BloquearExistencia.c_Texto).Size = xreg.c_NombreProducto.c_Largo
                                        .AddWithValue("@nombreempaque", xreg.c_NombreEmpaque.c_Texto).Size = xreg.c_NombreEmpaque.c_Largo
                                        .AddWithValue("@contenidoempaque", xreg.c_ContenidoEmpaque.c_Valor)
                                        .AddWithValue("@referenciaempaque", xreg.c_ReferenciaEmpaque.c_Texto).Size = xreg.c_ReferenciaEmpaque.c_Largo
                                        .AddWithValue("@automedida", xreg.c_AutoMedida.c_Texto).Size = xreg.c_AutoMedida.c_Largo
                                        .AddWithValue("@decimalesmedida", xreg.c_NumeroDecimalesMedida.c_Texto).Size = xreg.c_NumeroDecimalesMedida.c_Largo
                                        .AddWithValue("@forzarmedida", xreg.c_ForzarDecimalesMedida.c_Texto).Size = xreg.c_ForzarDecimalesMedida.c_Largo
                                        .AddWithValue("@tipotasa", xreg.c_TipoTasa.c_Texto).Size = xreg.c_TipoTasa.c_Largo
                                        .AddWithValue("@autodeposito", xreg.c_AutoDeposito.c_Texto).Size = xreg.c_AutoDeposito.c_Largo
                                        .AddWithValue("@autousuario", xreg.c_AutoUsuario.c_Texto).Size = xreg.c_AutoUsuario.c_Largo
                                        .AddWithValue("@nombreusuario", xreg.c_NombreUsuario.c_Texto).Size = xreg.c_NombreUsuario.c_Largo
                                        .AddWithValue("@fecha", xreg.c_FechaProceso.c_Valor)
                                        .AddWithValue("@estacion", xreg.c_EstacionEquipo.c_Texto).Size = xreg.c_EstacionEquipo.c_Largo
                                        .AddWithValue("@tipodocumento", xreg.c_TipoDocumento.c_Texto).Size = xreg.c_TipoDocumento.c_Largo
                                        .AddWithValue("@psugerido", xreg.c_PSugerido.c_Valor)
                                        .AddWithValue("@pliquida", xreg._PLiquida)
                                        .AddWithValue("@costoinventario", xreg.c_CostoInventario.c_Valor)
                                        .AddWithValue("@costoventa", xreg.c_CostoVenta.c_Valor)
                                        .AddWithValue("@notasitem", xreg.c_ItemNotas.c_Texto).Size = xreg.c_ItemNotas.c_Largo
                                        .AddWithValue("@idunico", xreg.c_IdUnico.c_Texto).Size = xreg.c_IdUnico.c_Largo
                                        ' Campos Nuevos
                                        .AddWithValue("@n_autodoc_origen", xreg.c_AutoDocumento_Origen.c_Texto).Size = xreg.c_AutoDocumento_Origen.c_Largo
                                        .AddWithValue("@n_tipodoc_origen", xreg.c_TipoDocumento_Origen.c_Texto).Size = xreg.c_TipoDocumento_Origen.c_Largo
                                        .AddWithValue("@n_problema_origen", xreg.c_ProblemaDocumento_Origen.c_Texto).Size = xreg.c_ProblemaDocumento_Origen.c_Largo
                                        .AddWithValue("@n_autoitem_doc_origen", xreg.c_AutoItem_Documento_Origen.c_Texto).Size = xreg.c_AutoItem_Documento_Origen.c_Largo
                                        .AddWithValue("@n_RestringidoVenta", xreg.c_RestringidoVenta.c_Texto).Size = xreg.c_RestringidoVenta.c_Largo
                                    End With
                                    xcmd.ExecuteNonQuery()

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "delete from temporalventa where autoitem=@autoitem"
                                    xcmd.Parameters.AddWithValue("@autoitem", xr.c_AutoItem.c_Texto)
                                    xcmd.ExecuteNonQuery()
                                Next
                            End Using
                            xtr.Commit()
                            RaiseEvent ActualizarTabla()
                            Return True
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("VENTAS" + vbCrLf + "TEMPORAL VENTA PENDIENTE" + vbCrLf + "ABRIR CUENTA PENDIENTE" + vbCrLf + ex.Message)
                End Try
            End Function

            ''' <summary>
            ''' Permite Anular Documento De Venta: Ya Sea Venta/Presupuesto/Nota Entrega/Pedido etc.
            ''' </summary>
            ''' <param name="xdoc"></param>
            ''' <returns></returns>
            ''' <remarks></remarks>
            Function F_AnularDocumento(ByVal xdoc As FichaGlobal.c_DocumentosAnulados.c_AgregarRegistro, _
                                       Optional ByVal xrevertir As RevertirDocumento = Nothing) As Boolean
                Try
                    Dim xtb_revertir As New DataTable
                    Dim xventa As New FichaVentas.V_Ventas
                    xventa.F_BuscarDocumento(xdoc.RegistroDato.c_AutoDocumento.c_Texto)

                    If xventa.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.Chimbo Then
                    Else
                        Select Case xventa.RegistroDato._TipoDocumento
                            Case TipoDocumentoVentaRegistrado.Factura, TipoDocumentoVentaRegistrado.NotaCredito, TipoDocumentoVentaRegistrado.NotaDebito
                                If Month(xventa.RegistroDato._FechaEmision) = Month(xdoc.RegistroDato.c_FechaEmision.c_Valor) _
                                  And Year(xventa.RegistroDato._FechaEmision) = Year(xdoc.RegistroDato.c_FechaEmision.c_Valor) Then
                                Else
                                    Throw New Exception("Error Al Anular Documento... Fecha No Corresponde Al Perido Actual !!!")
                                End If
                        End Select
                    End If

                    If xventa.RegistroDato._EstatusDocumento = TipoEstatus.Inactivo Then
                        Throw New Exception("Error Al Anular Documento... Dicho Documento Ya Se Encuentra Anulado !!!")
                    End If

                    If xventa.RegistroDato._EstatusDocumento = TipoEstatus.Procesado Then
                        Throw New Exception("Error Al Anular Documento... Documento Fue Procesado Por Una Factura / Pedido")
                    End If

                    Dim xp1 As New SqlParameter("@aplica", xventa.RegistroDato._Documento)
                    If F_GetInteger("SELECT COUNT(*) FROM VENTAS WHERE APLICA=@aplica AND estatus='0'", xp1) > 0 Then
                        Throw New Exception("Error Al Anular Documento... Dicho Documento Tiene Documentos Relacionados Que Deben Ser Eliminados Primero !!!")
                    End If

                    Dim xdetalle As New DataTable
                    Dim sql_1 As String = "select auto_productos,auto_deposito,sum(cantidad_inventario*signo) cantidad " _
                        + "from ventas_detalle where auto_documento=@auto_documento group by auto_productos,auto_deposito"
                    Using xadap As New SqlDataAdapter(sql_1, _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@auto_documento", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                        xadap.Fill(xdetalle)
                    End Using

                    With xdoc
                        .RegistroDato.c_CodigoAnulacion.c_Texto = "08" + xventa.RegistroDato.c_TipoDocumento.c_Texto
                    End With

                    Dim xsql_1 As String = "update contadores set a_documentos_anulados=a_documentos_anulados+1;" _
                      + "select a_documentos_anulados from contadores"
                    Dim xsql_2 As String = "update ventas set estatus='1' where auto=@auto"
                    Dim xsql_3 As String = "update ventas_detalle set estatus='1' where auto_documento=@auto"
                    Dim xsql_4 As String = "update productos_kardex set estatus='1' where auto_documento=@auto and origen=@origen"
                    Dim xsql_5 As String = "update productos_deposito set real = real + @cantidad1, disponible = disponible + @cantidad2, " _
                       + " reservada=reservada-@cantidad3 from productos_deposito pd where pd.auto_producto=@auto_producto and pd.auto_deposito=@auto_deposito"
                    Dim xsql_6 As String = "select codigo,nombre as producto,cantidad,precio_neto precioneto,descuento1p descuento,tasa tasaiva,total_neto " & _
                                  "importe, N_espesado espesado,auto_productos autoproducto,empaque nombreempaque, contenido_empaque contenidoempaque, " & _
                                  "empaque_tipo referenciaempaque, N_automedida automedida,decimales decimalesmedida,N_forzarmedida forzarmedida, " & _
                                  "codigo_tasa tipotasa,tipo tipodocumento, psv psugerido, costo_inventario costoinventario, costo_venta costoventa, " & _
                                  "detalle notasitem from ventas_detalle where auto_documento=@auto"

                    Dim xtr As SqlTransaction
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try

                            Using xcmd As New SqlCommand("", xcon, xtr)

                                'EN CASO DE REVERTIR DOCUMENTO
                                If xrevertir IsNot Nothing Then

                                    Dim xautoobj As Object = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select auto_doc_origen from ventas_presupuestopedidootros where auto_doc_venta=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato._AutoDocumento)
                                    xautoobj = xcmd.ExecuteScalar
                                    If xautoobj IsNot Nothing Then
                                        If xautoobj.ToString.Trim <> "" Then
                                            Throw New Exception("NO SE PERMITE REVERTIR DOCUMENTO TENIENDO COMO ORIGEN OTRO TIPO DE DOCUMENTO, VERIFIQUE POR FAVOR...")
                                        End If
                                    End If

                                    Dim xrd As SqlDataReader = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql_6
                                    xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                    xrd = xcmd.ExecuteReader()
                                    xtb_revertir.Load(xrd)

                                    Dim xitem As New FichaVentas.V_TemporalVenta.c_Registro
                                    For Each dr As DataRow In xtb_revertir.Rows
                                        xitem.M_LimpiarRegistro()

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select a_temporalventa from contadores"
                                        If IsDBNull(xcmd.ExecuteScalar()) Then
                                            xcmd.CommandText = "update contadores set a_temporalventa=0"
                                            xcmd.ExecuteScalar()
                                        End If
                                        xcmd.CommandText = "update contadores set a_temporalventa=a_temporalventa+1;select a_temporalventa from contadores"
                                        xitem.c_AutoItem.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                        'CARGAR DATA AL REGISTRO
                                        xitem.c_AutoDeposito.c_Texto = xrevertir._AutoDeposito
                                        xitem.c_AutoMedida.c_Texto = dr(xitem.c_AutoMedida.c_NombreInterno)
                                        xitem.c_AutoProducto.c_Texto = dr(xitem.c_AutoProducto.c_NombreInterno)
                                        xitem.c_AutoUsuario.c_Texto = xrevertir._FichaUsuario._AutoUsuario
                                        If xrevertir._BloquearExistencia Then
                                            xitem.c_BloquearExistencia.c_Texto = "1"
                                        Else
                                            xitem.c_BloquearExistencia.c_Texto = "0"
                                        End If
                                        xitem.c_CantidadDespachar.c_Valor = dr(xitem.c_CantidadDespachar.c_NombreInterno)
                                        xitem.c_CodigoProducto.c_Texto = dr(xitem.c_CodigoProducto.c_NombreInterno)
                                        xitem.c_ContenidoEmpaque.c_Valor = dr(xitem.c_ContenidoEmpaque.c_NombreInterno)
                                        xitem.c_CostoInventario.c_Valor = dr(xitem.c_CostoInventario.c_NombreInterno)
                                        xitem.c_CostoVenta.c_Valor = dr(xitem.c_CostoVenta.c_NombreInterno)
                                        xitem.c_Descuento.c_Valor = dr(xitem.c_Descuento.c_NombreInterno)
                                        xitem.c_EsPesado.c_Texto = dr(xitem.c_EsPesado.c_NombreInterno)
                                        xitem.c_EstacionEquipo.c_Texto = xrevertir._Estacion
                                        xitem.c_FechaProceso.c_Valor = xrevertir._Fecha
                                        xitem.c_ForzarDecimalesMedida.c_Texto = dr(xitem.c_ForzarDecimalesMedida.c_NombreInterno)
                                        xitem.c_IdUnico.c_Texto = xrevertir._IdUnico
                                        xitem.c_Importe.c_Valor = dr(xitem.c_Importe.c_NombreInterno)
                                        xitem.c_ItemNotas.c_Texto = dr(xitem.c_ItemNotas.c_NombreInterno)
                                        xitem.c_NombreEmpaque.c_Texto = dr(xitem.c_NombreEmpaque.c_NombreInterno)
                                        xitem.c_NombreProducto.c_Texto = dr(xitem.c_NombreProducto.c_NombreInterno)
                                        xitem.c_NombreUsuario.c_Texto = xrevertir._FichaUsuario._NombreUsuario
                                        xitem.c_NumeroDecimalesMedida.c_Texto = dr(xitem.c_NumeroDecimalesMedida.c_NombreInterno)
                                        xitem.c_PLiquida.c_Valor = Decimal.Round(dr(xitem.c_Importe.c_NombreInterno) / dr(xitem.c_ContenidoEmpaque.c_NombreInterno), 2, MidpointRounding.AwayFromZero)
                                        xitem.c_PrecioNeto.c_Valor = dr(xitem.c_PrecioNeto.c_NombreInterno)
                                        xitem.c_PSugerido.c_Valor = dr(xitem.c_PSugerido.c_NombreInterno)
                                        xitem.c_ReferenciaEmpaque.c_Texto = dr(xitem.c_ReferenciaEmpaque.c_NombreInterno)
                                        xitem.c_TasaIva.c_Valor = dr(xitem.c_TasaIva.c_NombreInterno)
                                        Select Case dr(xitem.c_TipoDocumento.c_NombreInterno).ToString.Trim.ToUpper
                                            Case "01" : xitem.c_TipoDocumento.c_Texto = "1" 'factura
                                            Case "04" : xitem.c_TipoDocumento.c_Texto = "2" 'nota entrega
                                            Case "05" : xitem.c_TipoDocumento.c_Texto = "3" 'presupuesto
                                            Case "06" : xitem.c_TipoDocumento.c_Texto = "4" 'pedido
                                            Case "XX" : xitem.c_TipoDocumento.c_Texto = "1" 'factura chimba
                                        End Select
                                        xitem.c_TipoTasa.c_Texto = dr(xitem.c_TipoTasa.c_NombreInterno)

                                        'GUARDAR TEMPORAL VENTA
                                        xcmd.CommandText = FichaVentas.V_TemporalVenta.InsertRegistroTemporalVenta
                                        xcmd.Parameters.Clear()
                                        With xcmd.Parameters
                                            .AddWithValue("@codigo", xitem.c_CodigoProducto.c_Texto).Size = xitem.c_CodigoProducto.c_Largo
                                            .AddWithValue("@producto", xitem.c_NombreProducto.c_Texto).Size = xitem.c_NombreProducto.c_Largo
                                            .AddWithValue("@cantidad", xitem.c_CantidadDespachar.c_Valor)
                                            .AddWithValue("@precioneto", xitem.c_PrecioNeto.c_Valor)
                                            .AddWithValue("@descuento", xitem.c_Descuento.c_Valor)
                                            .AddWithValue("@tasaiva", xitem.c_TasaIva.c_Valor)
                                            .AddWithValue("@importe", xitem._Importe)
                                            .AddWithValue("@espesado", xitem.c_EsPesado.c_Texto).Size = xitem.c_EsPesado.c_Largo
                                            .AddWithValue("@autoitem", xitem.c_AutoItem.c_Texto).Size = xitem.c_AutoItem.c_Largo
                                            .AddWithValue("@autoproducto", xitem._AutoProducto).Size = xitem.c_CodigoProducto.c_Largo
                                            .AddWithValue("@bloquearexistencia", xitem.c_BloquearExistencia.c_Texto).Size = xitem.c_NombreProducto.c_Largo
                                            .AddWithValue("@nombreempaque", xitem.c_NombreEmpaque.c_Texto).Size = xitem.c_NombreEmpaque.c_Largo
                                            .AddWithValue("@contenidoempaque", xitem.c_ContenidoEmpaque.c_Valor)
                                            .AddWithValue("@referenciaempaque", xitem.c_ReferenciaEmpaque.c_Texto).Size = xitem.c_ReferenciaEmpaque.c_Largo
                                            .AddWithValue("@automedida", xitem.c_AutoMedida.c_Texto).Size = xitem.c_AutoMedida.c_Largo
                                            .AddWithValue("@decimalesmedida", xitem.c_NumeroDecimalesMedida.c_Texto).Size = xitem.c_NumeroDecimalesMedida.c_Largo
                                            .AddWithValue("@forzarmedida", xitem.c_ForzarDecimalesMedida.c_Texto).Size = xitem.c_ForzarDecimalesMedida.c_Largo
                                            .AddWithValue("@tipotasa", xitem.c_TipoTasa.c_Texto).Size = xitem.c_TipoTasa.c_Largo
                                            .AddWithValue("@autodeposito", xitem.c_AutoDeposito.c_Texto).Size = xitem.c_AutoDeposito.c_Largo
                                            .AddWithValue("@autousuario", xitem.c_AutoUsuario.c_Texto).Size = xitem.c_AutoUsuario.c_Largo
                                            .AddWithValue("@nombreusuario", xitem.c_NombreUsuario.c_Texto).Size = xitem.c_NombreUsuario.c_Largo
                                            .AddWithValue("@fecha", xitem.c_FechaProceso.c_Valor)
                                            .AddWithValue("@estacion", xitem.c_EstacionEquipo.c_Texto).Size = xitem.c_EstacionEquipo.c_Largo
                                            .AddWithValue("@tipodocumento", xitem.c_TipoDocumento.c_Texto).Size = xitem.c_TipoDocumento.c_Largo
                                            .AddWithValue("@psugerido", xitem.c_PSugerido.c_Valor)
                                            .AddWithValue("@pliquida", xitem._PLiquida)
                                            .AddWithValue("@costoinventario", xitem.c_CostoInventario.c_Valor)
                                            .AddWithValue("@costoventa", xitem.c_CostoVenta.c_Valor)
                                            .AddWithValue("@notasitem", xitem.c_ItemNotas.c_Texto).Size = xitem.c_ItemNotas.c_Largo
                                            .AddWithValue("@idunico", xitem.c_IdUnico.c_Texto).Size = xitem.c_IdUnico.c_Largo
                                            ' Campos Nuevos
                                            .AddWithValue("@n_autodoc_origen", xitem.c_AutoDocumento_Origen.c_Texto).Size = xitem.c_AutoDocumento_Origen.c_Largo
                                            .AddWithValue("@n_tipodoc_origen", xitem.c_TipoDocumento_Origen.c_Texto).Size = xitem.c_TipoDocumento_Origen.c_Largo
                                            .AddWithValue("@n_problema_origen", xitem.c_ProblemaDocumento_Origen.c_Texto).Size = xitem.c_ProblemaDocumento_Origen.c_Largo
                                            .AddWithValue("@n_autoitem_doc_origen", xitem.c_AutoItem_Documento_Origen.c_Texto).Size = xitem.c_AutoItem_Documento_Origen.c_Largo
                                            .AddWithValue("@n_RestringidoVenta", xitem.c_RestringidoVenta.c_Texto).Size = xitem.c_RestringidoVenta.c_Largo
                                        End With
                                        xcmd.ExecuteNonQuery()
                                    Next
                                End If

                                'CONTADORES
                                xcmd.CommandText = xsql_1
                                xdoc.RegistroDato.c_AutoAnulacion.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'DOCUMENTOS_ANULADOS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                xcmd.Parameters.AddWithValue("@codigo", xdoc.RegistroDato.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xdoc.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@hora", xdoc.RegistroDato.c_HoraAnulacion.c_Texto).Size = xdoc.RegistroDato.c_HoraAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@detalle", xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Texto).Size = xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xdoc.RegistroDato.c_NombreEstacion.c_Texto).Size = xdoc.RegistroDato.c_NombreEstacion.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xdoc.RegistroDato.c_NombreUsuario.c_Texto).Size = xdoc.RegistroDato.c_NombreUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xdoc.RegistroDato.c_CodigoUsuario.c_Texto).Size = xdoc.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_AutoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xdoc.RegistroDato.c_AutoDocumento.c_Texto).Size = xdoc.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.ExecuteNonQuery()

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                xcmd.ExecuteNonQuery()

                                'VENTAS_DETALLE
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                xcmd.ExecuteNonQuery()

                                'PRODUCTOS_KARDEX
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_4
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                If xventa.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.Chimbo Then
                                    xcmd.Parameters.AddWithValue("@origen", "0801")
                                Else
                                    xcmd.Parameters.AddWithValue("@origen", xdoc.RegistroDato.c_CodigoAnulacion.c_Texto)
                                End If
                                xcmd.ExecuteNonQuery()

                                Dim xrd_kardex As SqlDataReader
                                Dim xtb_kardex As New DataTable
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select * from productos_kardex where auto_documento=@auto and origen=@origen"
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato._AutoDocumento)
                                If xventa.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.Chimbo Then
                                    xcmd.Parameters.AddWithValue("@origen", "0801")
                                Else
                                    xcmd.Parameters.AddWithValue("@origen", xdoc.RegistroDato.c_CodigoAnulacion.c_Texto)
                                End If
                                xrd_kardex = xcmd.ExecuteReader()
                                xtb_kardex.Load(xrd_kardex)

                                'PRODUCTOS_DEPOSITO
                                Select Case xventa.RegistroDato.c_TipoDocumento.c_Texto
                                    Case "01", "02", "03", "04", "XX"
                                        For Each dr As DataRow In xtb_kardex.Rows
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql_5
                                            xcmd.Parameters.AddWithValue("@cantidad1", (dr("cantidad_inventario") * -1 * dr("SIGNO")))
                                            xcmd.Parameters.AddWithValue("@cantidad2", (dr("cantidad_inventario") * -1 * dr("SIGNO")))
                                            xcmd.Parameters.AddWithValue("@cantidad3", 0)
                                            xcmd.Parameters.AddWithValue("@auto_producto", dr("auto_producto").ToString.Trim)
                                            xcmd.Parameters.AddWithValue("@auto_deposito", dr("auto_deposito").ToString.Trim)
                                            If xcmd.ExecuteNonQuery = 0 Then
                                                Throw New Exception("PROBLEMA AL ACTUALIZAR DEPOSITO DEL PRODUCTO")
                                            End If
                                        Next
                                    Case "06" ' ES UN PEDIDO
                                        For Each dr As DataRow In xdetalle.Rows
                                            If xventa.RegistroDato._BloquearExistencia Then
                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = xsql_5
                                                xcmd.Parameters.AddWithValue("@cantidad1", 0)
                                                xcmd.Parameters.AddWithValue("@cantidad2", dr("cantidad"))
                                                xcmd.Parameters.AddWithValue("@cantidad3", dr("cantidad"))
                                                xcmd.Parameters.AddWithValue("@auto_producto", dr("auto_productos").ToString)
                                                xcmd.Parameters.AddWithValue("@auto_deposito", dr("auto_deposito").ToString)
                                                xcmd.ExecuteNonQuery()
                                            End If
                                        Next
                                End Select

                                'EN CASO DE REVERTIR DOCUMENTO
                                If xrevertir IsNot Nothing Then
                                    'SI LA OPCION DE RUPTURA POR EXISTENCIA ESTA ACTIVA, BLOQUEAR LA EXISTENCIA 
                                    If xrevertir._BloquearExistencia Then
                                        For Each dr As DataRow In xtb_revertir.Rows
                                            Dim xdisponible As Decimal = 0
                                            Dim xcantidad As Decimal = dr("cantidad") * dr("contenidoempaque")

                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                            xcmd.Parameters.AddWithValue("@auto_producto", dr("autoProducto"))
                                            xcmd.Parameters.AddWithValue("@auto_deposito", xrevertir._AutoDeposito)
                                            xdisponible = xcmd.ExecuteScalar()

                                            If xdisponible >= xcantidad Then
                                                xcmd.Parameters.Clear()
                                                xcmd.CommandText = "update productos_deposito set reservada=reservada+@cantidad, disponible=disponible-@cantidad " _
                                                                         + "where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
                                                xcmd.Parameters.AddWithValue("@cantidad", xcantidad)
                                                xcmd.Parameters.AddWithValue("@auto_producto", dr("autoProducto"))
                                                xcmd.Parameters.AddWithValue("@auto_deposito", xrevertir._AutoDeposito)
                                                xcmd.ExecuteNonQuery()
                                            Else
                                                Throw New Exception("Existencia No Disponible Para Facturar... Verifique Por Favor")
                                            End If
                                        Next
                                    End If
                                End If

                                Dim xanticipos As Decimal = 0
                                If xventa.RegistroDato.c_TipoDocumento.c_Texto <> "06" Then
                                    'CXC
                                    Dim xauto_cxc As String = ""
                                    Dim xobj As Object = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select auto from cxc where auto_documento=@auto_documento"
                                    xcmd.Parameters.AddWithValue("@auto_documento", xventa.RegistroDato.c_AutoDocumento.c_Texto)
                                    xobj = xcmd.ExecuteScalar()

                                    If IsDBNull(xobj) Or (xobj Is Nothing) Then
                                    Else
                                        xauto_cxc = xobj.ToString.Trim
                                        Dim xdocumentos As Long = 0

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select acumulado from cxc where auto=@auto"
                                        xcmd.Parameters.AddWithValue("@auto", xauto_cxc)
                                        xdocumentos = xcmd.ExecuteScalar()

                                        If xdocumentos > 0 Then
                                            Throw New Exception("ERROR AL ANULAR DOCUMENTO, HAY MOVIMIENTOS DE PAGOS EN CXC, VERIFIQUE POR FAVOR")
                                        Else
                                            'CXC, ELIMINO EL MOVIMIENTO PRINCIPAL
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "UPDATE CXC set estatus='1' where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", xauto_cxc)
                                            xcmd.ExecuteNonQuery()

                                            'CONTADORES DOCUMENTOS ANULADOS, SE INCREMENTA EL AUTOMATICO
                                            Dim xcxc_anulado As New FichaGlobal.c_DocumentosAnulados.c_Registro
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql_1
                                            xcxc_anulado.c_AutoAnulacion.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                            With xcxc_anulado
                                                .c_AutoDocumento.c_Texto = xauto_cxc
                                                .c_CodigoAnulacion.c_Texto = "0401"
                                                .c_CodigoUsuario.c_Texto = xdoc.RegistroDato.c_CodigoUsuario.c_Texto
                                                .c_FechaEmision.c_Valor = xdoc.RegistroDato.c_FechaEmision.c_Valor
                                                .c_HoraAnulacion.c_Texto = xdoc.RegistroDato.c_HoraAnulacion.c_Texto
                                                .c_NombreEstacion.c_Texto = xdoc.RegistroDato.c_NombreEstacion.c_Texto
                                                .c_NombreUsuario.c_Texto = xdoc.RegistroDato.c_NombreUsuario.c_Texto
                                                .c_NotaDetalleAnulacion.c_Texto = "ANULACION DE " + xventa.RegistroDato._TipoDocumento.ToString
                                            End With

                                            'DOCUMENTOS_ANULADOS, SE GRABA EL DOCUMENTO ANULADO
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                            xcmd.Parameters.AddWithValue("@codigo", xcxc_anulado.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xcxc_anulado.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@hora", xcxc_anulado.c_HoraAnulacion.c_Texto).Size = xcxc_anulado.c_HoraAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@detalle", xcxc_anulado.c_NotaDetalleAnulacion.c_Texto).Size = xcxc_anulado.c_NotaDetalleAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@estacion", xcxc_anulado.c_NombreEstacion.c_Texto).Size = xcxc_anulado.c_NombreEstacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@usuario", xcxc_anulado.c_NombreUsuario.c_Texto).Size = xcxc_anulado.c_NombreUsuario.c_Largo
                                            xcmd.Parameters.AddWithValue("@codigo_usuario", xcxc_anulado.c_CodigoUsuario.c_Texto).Size = xcxc_anulado.c_CodigoUsuario.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto", xcxc_anulado.c_AutoAnulacion.c_Texto).Size = xcxc_anulado.c_AutoAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xcxc_anulado.c_AutoDocumento.c_Texto).Size = xcxc_anulado.c_AutoDocumento.c_Largo
                                            xcmd.ExecuteNonQuery()

                                            'CXC_DOCUMENTOS, TOMO TODOS LOS DOCUMENTOS DE PAGOS RELACIONADOS CON ESTA CXC
                                            Dim xreader As SqlDataReader = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "SELECT AUTO_CXC_PAGO,AUTO_CXC_RECIBO from cxc_documentos where auto_cxc=@auto_cxc"
                                            xcmd.Parameters.AddWithValue("@auto_cxc", xauto_cxc)
                                            xreader = xcmd.ExecuteReader()
                                            Dim xtb As New DataTable
                                            xtb.Load(xreader)
                                            xreader.Close()

                                            For Each xrow As DataRow In xtb.Rows
                                                Dim xauto_recibo As String = ""
                                                Dim xauto_cxc_pago As String = ""

                                                xauto_recibo = xrow(1).ToString
                                                xauto_cxc_pago = xrow(0).ToString

                                                Using xcmd2 As New SqlCommand("", xcon, xtr)
                                                    'CXC_RECIBOS, ELIMINO TODOS LOS RECIBOS RELACIONADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC_RECIBOS set estatus='1' where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xcmd2.ExecuteNonQuery()

                                                    'CXC_RECIBOS, VERIFICO SI HAY UN ANTICIPO Y LO ACUMULO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "select anticipos from CXC_RECIBOS where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xanticipos += xcmd2.ExecuteScalar

                                                    'CXC_MODO_PAGO, ELIMINO TODOS LOS PAGOS RELACIONADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC_MODO_PAGO set estatus='1' where auto_recibo=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xcmd2.ExecuteNonQuery()

                                                    'CXC, ELIMINO TODOS LOS MOVIMIENTOS DE CXC RELACIONADOS A LOS PAGOS EFECTUADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC set estatus='1' where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_cxc_pago)
                                                    xcmd2.ExecuteNonQuery()

                                                    Dim xcxc_pago As New FichaGlobal.c_DocumentosAnulados.c_Registro
                                                    'CONTADORES DOCUMENTOS ANULADOS, SE INCREMENTA EL AUTOMATICO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = xsql_1
                                                    xcxc_pago.c_AutoAnulacion.c_Texto = xcmd2.ExecuteScalar().ToString.Trim.PadLeft(10, "0")
                                                    With xcxc_pago
                                                        .c_AutoDocumento.c_Texto = xauto_recibo
                                                        .c_CodigoAnulacion.c_Texto = "0401"
                                                        .c_CodigoUsuario.c_Texto = xdoc.RegistroDato.c_CodigoUsuario.c_Texto
                                                        .c_FechaEmision.c_Valor = xdoc.RegistroDato.c_FechaEmision.c_Valor
                                                        .c_HoraAnulacion.c_Texto = xdoc.RegistroDato.c_HoraAnulacion.c_Texto
                                                        .c_NombreEstacion.c_Texto = xdoc.RegistroDato.c_NombreEstacion.c_Texto
                                                        .c_NombreUsuario.c_Texto = xdoc.RegistroDato.c_NombreUsuario.c_Texto
                                                        .c_NotaDetalleAnulacion.c_Texto = "ANULACION PAGO DE " + xventa.RegistroDato._TipoDocumento.ToString + ", " + xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Texto
                                                    End With

                                                    'DOCUMENTOS_ANULADOS, SE GRABA EL DOCUMENTO ANULADO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                                    xcmd2.Parameters.AddWithValue("@codigo", xcxc_pago.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@fecha", xcxc_pago.c_FechaEmision.c_Valor)
                                                    xcmd2.Parameters.AddWithValue("@hora", xcxc_pago.c_HoraAnulacion.c_Texto).Size = xcxc_pago.c_HoraAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@detalle", xcxc_pago.c_NotaDetalleAnulacion.c_Texto).Size = xcxc_pago.c_NotaDetalleAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@estacion", xcxc_pago.c_NombreEstacion.c_Texto).Size = xcxc_pago.c_NombreEstacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@usuario", xcxc_pago.c_NombreUsuario.c_Texto).Size = xcxc_pago.c_NombreUsuario.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@codigo_usuario", xcxc_pago.c_CodigoUsuario.c_Texto).Size = xcxc_pago.c_CodigoUsuario.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@auto", xcxc_pago.c_AutoAnulacion.c_Texto).Size = xcxc_pago.c_AutoAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@auto_documento", xcxc_pago.c_AutoDocumento.c_Texto).Size = xcxc_pago.c_AutoDocumento.c_Largo
                                                    xcmd2.ExecuteNonQuery()
                                                End Using
                                            Next
                                        End If
                                    End If
                                End If

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.ExecuteNonQuery()

                                ' ''VERIFICO SI EL DOCUMENTO DE VENTA A SER ANULADO TIENE UN DOCUMENTO VINCULADO CON ESTATUS PROCESADO, PARA CAMBIAR DICHO ESTATUS A ACTIVO
                                ''Dim doc_origen As Object = Nothing
                                ''xcmd.Parameters.Clear()
                                ''xcmd.CommandText = "select auto_doc_origen from ventas_presupuestopedidootros where auto_doc_venta=@auto_doc_venta"
                                ''xcmd.Parameters.AddWithValue("@auto_doc_venta", xventa.RegistroDato._AutoDocumento)
                                ''doc_origen = xcmd.ExecuteScalar()
                                ''If (doc_origen IsNot Nothing) Then
                                ''    If doc_origen.ToString.Trim <> "" Then
                                ''        Dim xvalor As Integer = 0
                                ''        xcmd.Parameters.Clear()
                                ''        xcmd.CommandText = "select count(v.estatus) from ventas_presupuestopedidootros vp join ventas v " & _
                                ''        "on vp.auto_doc_venta=v.auto where vp.auto_doc_origen=@auto_doc_origen and v.estatus='0'"
                                ''        xcmd.Parameters.AddWithValue("@auto_doc_origen", doc_origen)
                                ''        xvalor = xcmd.ExecuteScalar

                                ''        If xvalor = 0 Then
                                ''            xcmd.Parameters.Clear()
                                ''            xcmd.CommandText = "update ventas set estatus='0' where auto=@auto_doc and estatus='2'"
                                ''            xcmd.Parameters.AddWithValue("@auto_doc", doc_origen)
                                ''            If xcmd.ExecuteNonQuery() = 0 Then
                                ''                Throw New Exception("PROBLEMA AL ACTUALIZAR ESTATUS DEL DOCUMENTO ORIGEN A ACTIVO")
                                ''            End If
                                ''        End If

                                ''        Dim xrd_origen As SqlDataReader
                                ''        Dim xdoc_origen As New FichaVentas.V_Ventas
                                ''        Dim xtb_origen As New DataTable
                                ''        xcmd.Parameters.Clear()
                                ''        xcmd.CommandText = "select * from ventas where auto=@auto"
                                ''        xcmd.Parameters.AddWithValue("@auto", doc_origen)
                                ''        xrd_origen = xcmd.ExecuteReader()
                                ''        xtb_origen.Load(xrd_origen)
                                ''        xrd_origen.Close()
                                ''        If xtb_origen.Rows.Count = 0 Then
                                ''            Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO")
                                ''        End If
                                ''        xdoc_origen.M_CargarRegistro(xtb_origen(0))

                                ''        If xdoc_origen.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
                                ''            If xdoc_origen.RegistroDato._BloquearExistencia Then

                                ''                Dim xtb_origen_detalle As New DataTable
                                ''                Dim xrd_origen_detalle As SqlDataReader
                                ''                xcmd.Parameters.Clear()
                                ''                xcmd.CommandText = "select auto_productos,auto_deposito,sum(cantidad_inventario*signo) cantidad " _
                                ''                    + "from ventas_detalle where auto_documento=@auto_documento group by auto_productos,auto_deposito"
                                ''                xcmd.Parameters.AddWithValue("@auto_documento", xdoc_origen.RegistroDato._AutoDocumento)
                                ''                xrd_origen_detalle = xcmd.ExecuteReader
                                ''                xtb_origen_detalle.Load(xrd_origen_detalle)
                                ''                xrd_origen_detalle.Close()

                                ''                For Each dr As DataRow In xtb_origen_detalle.Rows
                                ''                    xcmd.Parameters.Clear()
                                ''                    xcmd.CommandText = "update productos_deposito set real = real + @cantidad1, disponible = disponible - @cantidad2, " & _
                                ''                    "reservada=reservada+@cantidad2 from productos_deposito pd where pd.auto_producto=@auto_producto and pd.auto_deposito=@auto_deposito"
                                ''                    xcmd.Parameters.AddWithValue("@cantidad1", 0)
                                ''                    xcmd.Parameters.AddWithValue("@cantidad2", dr("cantidad"))
                                ''                    xcmd.Parameters.AddWithValue("@auto_producto", dr("auto_productos").ToString)
                                ''                    xcmd.Parameters.AddWithValue("@auto_deposito", dr("auto_deposito").ToString)
                                ''                    If xcmd.ExecuteNonQuery() = 0 Then
                                ''                        Throw New Exception("PROBLEMA AL TRATAR DE COLOCAR LA MERCANCIA EN RESERVADA")
                                ''                    End If
                                ''                Next
                                ''            End If
                                ''        End If
                                ''    End If
                                ''End If
                            End Using
                            xtr.Commit()

                            RaiseEvent ActualizarTabla()
                            If xrevertir IsNot Nothing Then
                                RaiseEvent _ActualizarFichaCliente(xventa.RegistroDato._AutoCliente)
                            End If
                            Return True
                        Catch ex2 As SqlException
                            xtr.Rollback()
                            Throw New Exception(ex2.Message)
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("PROBLEMA AL ANULAR DOCUMENTO:" + vbCrLf + ex.Message)
                End Try
            End Function


            ''' <summary>
            ''' Funcion: Permite Grabar Nota de Credito
            ''' </summary>
            ''' <param name="xventa"></param>
            ''' Clase Usada Para Almacenar El Encabezado De La Nota De Credito
            ''' <param name="xventadetalle"></param>
            ''' Clase Usada Para Almacenar Los Detalles/Items De La Nota De Credito
            ''' <returns></returns>
            Function F_GrabarNotaCredito(ByVal xventa As V_Ventas.AgregarNotaCredito, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleNotaCredito), _
                                    ByVal ximpresora As ModoImprimirFactura) As Boolean

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_2 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
                Dim xsql_3 As String = "update series_fiscales set correlativo=correlativo+1, estatus_fiscal='1' where nombre=@nombre;" _
                                      + "select correlativo from series_fiscales where nombre=@nombre"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                'Tabla Usada Para Lista De Productos Para La Impresora Fiscal
                Dim xtablaprd As New DataTable
                With xtablaprd
                    .Columns.Add("cantidad", GetType(System.Decimal))
                    .Columns.Add("nombre", GetType(System.String))
                    .Columns.Add("descuento1p", GetType(System.Decimal))
                    .Columns.Add("precio_neto", GetType(System.Decimal))
                    .Columns.Add("codigo_tasa", GetType(System.String))
                    .Columns.Add("detalle", GetType(System.String))
                    .Columns.Add("codigo", GetType(System.String))
                    .Columns.Add("SUBDETALLE", GetType(System.String))
                End With

                Dim xtr As SqlTransaction = Nothing
                Try
                    Dim xfiscal As New FichaGlobal.c_SeriesFiscales
                    Dim xtb As New DataTable
                    Using xadap As New SqlDataAdapter("select * from series_fiscales where nombre=@nombre", _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                        xadap.Fill(xtb)
                    End Using

                    If xtb.Rows.Count > 0 Then
                        xfiscal.M_CargarFicha(xtb(0))
                    Else
                        Throw New Exception("SERIE NO REGISTRADA, VERIFIQUE...")
                    End If

                    If xfiscal.RegistroDato.r_EstatusSerie = TipoEstatus.Activo Then
                        If xfiscal.RegistroDato.r_EstatusParaNC = TipoEstatus.Activo Then
                        Else
                            Throw New Exception("SERIE NO ASIGNADA PARA EFECTUAR NOTAS DE CREDITO, VERIFIQUE...")
                        End If
                    Else
                        Throw New Exception("SERIE ESTA EN ESTADO INACTVIO, VERIFIQUE...")
                    End If

                    xventa.AsignarData()
                    With xventa.RegistroDato
                        .c_AutoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_AutoCliente.c_Texto
                        .c_AutoVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_AutoVendedor.c_Texto
                        .c_CiRifCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_CiRifCliente.c_Texto
                        .c_CodigoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_CodigoCliente.c_Texto
                        .c_CodigoVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_CodigoVendedor.c_Texto
                        .c_DirDespacho.c_Texto = xventa._FichaRegistroVentaOrigen.c_DirDespacho.c_Texto
                        .c_DirFiscalCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_DirFiscalCliente.c_Texto
                        .c_FactorCambio.c_Valor = xventa._FichaRegistroVentaOrigen.c_FactorCambio.c_Valor
                        .c_NombreCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_NombreCliente.c_Texto
                        .c_NombreVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_NombreVendedor.c_Texto
                        .c_Tasa1.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa1.c_Valor
                        .c_Tasa2.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa2.c_Valor
                        .c_Tasa3.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa3.c_Valor
                        .c_TelefonoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_TelefonoCliente.c_Texto
                        .c_BloquearAlmacen.c_Texto = xventa._FichaRegistroVentaOrigen.c_BloquearAlmacen.c_Texto
                        .c_DocumentoAplica.c_Texto = xventa._FichaRegistroVentaOrigen.c_Documento.c_Texto
                        .c_FechaPedido.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                        .c_TasaCargos.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaCargos.c_Valor
                        .c_TasaDescuento_1.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaDescuento_1.c_Valor
                        .c_TasaDescuento_2.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaDescuento_2.c_Valor

                        Dim xcontrol As Integer = 0
                        If ximpresora._ModoImpresion = TipoImpresora.Fiscal Then
                            Integer.TryParse(ximpresora._Impresora.Ver_UltNotaCredito, xcontrol)
                            xcontrol += 1
                        End If
                        .c_ControlFiscal.c_Texto = xcontrol.ToString.Trim.PadLeft(10, "0")
                    End With

                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    With xventa.RegistroDato
                        .c_SerialImpresoraFiscal.c_Texto = xfiscal.RegistroDato.r_SerialFiscal
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = 0
                    End With

                    Dim xtipoNotaCredito_por_devolucion As Boolean = False
                    If xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa._FichaRegistroVentaOrigen.c_TotalGeneral.c_Valor Then
                        xtipoNotaCredito_por_devolucion = True
                    End If

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_AutoCliente.c_Texto = ._ItemDetalleOrigen.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoDepartamento.c_Texto = ._ItemDetalleOrigen.c_AutoDepartamento.c_Texto
                            .RegistroDato.c_AutoDeposito.c_Texto = ._ItemDetalleOrigen.c_AutoDeposito.c_Texto
                            .RegistroDato.c_AutoGrupo.c_Texto = ._ItemDetalleOrigen.c_AutoGrupo.c_Texto
                            .RegistroDato.c_AutoMedida.c_Texto = ._ItemDetalleOrigen.c_AutoMedida.c_Texto
                            .RegistroDato.c_AutoProducto.c_Texto = ._ItemDetalleOrigen.c_AutoProducto.c_Texto
                            .RegistroDato.c_AutoSubGrupo.c_Texto = ._ItemDetalleOrigen.c_AutoSubGrupo.c_Texto
                            .RegistroDato.c_CantidadDespachada.c_Valor = xdetalle._Cantidad
                            .RegistroDato.c_CategoriaProducto.c_Texto = ._ItemDetalleOrigen.c_CategoriaProducto.c_Texto
                            .RegistroDato.c_CodigoDeposito.c_Texto = ._ItemDetalleOrigen.c_CodigoDeposito.c_Texto
                            .RegistroDato.c_CodigoProducto.c_Texto = ._ItemDetalleOrigen.c_CodigoProducto.c_Texto
                            .RegistroDato.c_ContenidoEmpaque.c_Valor = ._ItemDetalleOrigen.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_Corte.c_Texto = ._ItemDetalleOrigen.c_Corte.c_Texto
                            .RegistroDato.c_Corte_X.c_Valor = ._ItemDetalleOrigen.c_Corte_X.c_Valor
                            .RegistroDato.c_Corte_Y.c_Valor = ._ItemDetalleOrigen.c_Corte_Y.c_Valor
                            .RegistroDato.c_Corte_Z.c_Valor = ._ItemDetalleOrigen.c_Corte_Z.c_Valor
                            .RegistroDato.c_DescuentoTasa_1.c_Valor = xdetalle._Descto
                            .RegistroDato.c_DescuentoTasa_2.c_Valor = ._ItemDetalleOrigen.c_DescuentoTasa_2.c_Valor
                            .RegistroDato.c_DescuentoTasa_3.c_Valor = ._ItemDetalleOrigen.c_DescuentoTasa_3.c_Valor
                            .RegistroDato.c_DetalleNotas.c_Texto = xdetalle._NotasDetalle
                            .RegistroDato.c_DiasGarantia.c_Valor = ._ItemDetalleOrigen.c_DiasGarantia.c_Valor
                            .RegistroDato.c_Estatus.c_Texto = ._ItemDetalleOrigen.c_Estatus.c_Texto
                            .RegistroDato.c_EstatusCorte.c_Texto = ._ItemDetalleOrigen.c_EstatusCorte.c_Texto
                            .RegistroDato.c_EstatusGarantia.c_Texto = ._ItemDetalleOrigen.c_EstatusGarantia.c_Texto
                            .RegistroDato.c_EstatusSerial.c_Texto = ._ItemDetalleOrigen.c_EstatusSerial.c_Texto
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_ForzarMedida.c_Texto = ._ItemDetalleOrigen.c_ForzarMedida.c_Texto
                            .RegistroDato.c_NombreDeposito.c_Texto = ._ItemDetalleOrigen.c_NombreDeposito.c_Texto
                            .RegistroDato.c_NombreEmpaque.c_Texto = ._ItemDetalleOrigen.c_NombreEmpaque.c_Texto
                            .RegistroDato.c_NombreProducto.c_Texto = ._ItemDetalleOrigen.c_NombreProducto.c_Texto
                            .RegistroDato.c_NombreCortoProducto.c_Texto = IIf(._ItemDetalleOrigen._NombreCortoProducto = "", ._ItemDetalleOrigen._NombreProducto, ._ItemDetalleOrigen._NombreCortoProducto)
                            .RegistroDato.c_NumeroDecimales.c_Valor = ._ItemDetalleOrigen.c_NumeroDecimales.c_Valor
                            .RegistroDato.c_PrecioSugerido.c_Valor = ._ItemDetalleOrigen.c_PrecioSugerido.c_Valor
                            .RegistroDato.c_PTO_AutoJornada.c_Texto = ._ItemDetalleOrigen.c_PTO_AutoJornada.c_Texto
                            .RegistroDato.c_PTO_AutoOperador.c_Texto = ._ItemDetalleOrigen.c_PTO_AutoOperador.c_Texto
                            .RegistroDato.c_PTO_CodigoBarra.c_Texto = ._ItemDetalleOrigen.c_PTO_CodigoBarra.c_Texto
                            .RegistroDato.c_PTO_DigitosEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_DigitosEtiqueta.c_Texto
                            .RegistroDato.c_PTO_EsPesado.c_Texto = ._ItemDetalleOrigen.c_PTO_EsPesado.c_Texto
                            .RegistroDato.c_PTO_EstaEnOferta.c_Texto = ._ItemDetalleOrigen.c_PTO_EstaEnOferta.c_Texto
                            .RegistroDato.c_PTO_FormatoEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_FormatoEtiqueta.c_Texto
                            .RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_MontoTotalEtiqueta.c_Valor
                            .RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroBalanzaEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroControlEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroDepartEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_NumeroItemEtiqueta.c_Valor
                            .RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroTicketEtiqueta.c_Texto
                            .RegistroDato.c_PTO_PesoEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_PesoEtiqueta.c_Valor
                            .RegistroDato.c_PTO_Plu.c_Texto = ._ItemDetalleOrigen.c_PTO_Plu.c_Texto
                            .RegistroDato.c_PTO_PluEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_PluEtiqueta.c_Texto
                            .RegistroDato.c_PTO_PrecioEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_PrecioEtiqueta.c_Valor
                            .RegistroDato.c_PTO_SeccionEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_SeccionEtiqueta.c_Texto
                            .RegistroDato.c_PTO_VendedorEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_VendedorEtiqueta.c_Texto
                            .RegistroDato.c_ReferenciaEmpaque.c_Texto = ._ItemDetalleOrigen.c_ReferenciaEmpaque.c_Texto
                            .RegistroDato.c_SignoDocumento.c_Valor = -1
                            .RegistroDato.c_TasaIva.c_Valor = ._ItemDetalleOrigen.c_TasaIva.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = "03"
                            .RegistroDato.c_TipoTasaIva.c_Texto = ._ItemDetalleOrigen.c_TipoTasaIva.c_Texto
                            .RegistroDato.c_AutoItemOrigen.c_Texto = ._ItemDetalleOrigen._AutoItem

                            If xdetalle._TipoMovimiento = TipoMovimientoNC.DEVOLUCION Then
                                .RegistroDato.c_TipoCalculoUtilidad.c_Texto = ._ItemDetalleOrigen.c_TipoCalculoUtilidad.c_Texto
                                .RegistroDato.c_TipoMovimiento.c_Texto = "D"
                                .RegistroDato.c_PrecioNeto.c_Valor = ._PrecioNeto
                                .RegistroDato.c_CostoVenta.c_Valor = ._ItemDetalleOrigen.c_CostoVenta.c_Valor
                                .RegistroDato.c_CostoInventario.c_Valor = ._ItemDetalleOrigen.c_CostoInventario.c_Valor

                                Dim x0 As Decimal = 0
                                x0 = ._PrecioNeto

                                .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioItem.c_Valor = x0

                                Dim x1 As Decimal = 0
                                x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_TotalNeto.c_Valor = x1

                                Dim x2 As Decimal = 0
                                x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_MontoIva.c_Valor = x2
                                .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                                Dim x3 As Decimal = 0
                                x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                                .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                                Dim x4 As Decimal = x0
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioFinal.c_Valor = x4
                                .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                                Dim x5 As Decimal = 0
                                Dim x6 As Decimal = 0
                                x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                                x6 = xdetalle._ItemDetalleOrigen._CostoVentaEmpaque * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_CostoVenta.c_Valor = x6
                                'x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                                If ._ItemDetalleOrigen._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                                Else
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                                End If

                                xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                               ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                               ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                               ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})

                            Else 'AJUSTE
                                .RegistroDato.c_TipoCalculoUtilidad.c_Texto = ._ItemDetalleOrigen.c_TipoCalculoUtilidad.c_Texto
                                .RegistroDato.c_TipoMovimiento.c_Texto = "A"
                                Dim t1 As Decimal = Decimal.Round(xdetalle._ItemDetalleOrigen.c_TotalNeto.c_Valor / _
                                                                     xdetalle._ItemDetalleOrigen.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                Dim t2 As Decimal = Decimal.Round(t1 * (xdetalle._ItemDetalleOrigen.c_CantidadDespachada.c_Valor - xdetalle._Cantidad), 2, MidpointRounding.AwayFromZero)
                                Dim t3 As Decimal = Decimal.Round(xdetalle._Importe + t2, 2, MidpointRounding.AwayFromZero)
                                Dim x0 As Decimal = Decimal.Round((xdetalle._ItemDetalleOrigen.c_TotalNeto.c_Valor - t3) / xdetalle._Cantidad, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_PrecioNeto.c_Valor = x0
                                .RegistroDato.c_DescuentoMonto_1.c_Valor = 0
                                .RegistroDato.c_DescuentoMonto_2.c_Valor = 0
                                .RegistroDato.c_DescuentoMonto_3.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_1.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_2.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_3.c_Valor = 0
                                .RegistroDato.c_PrecioItem.c_Valor = x0

                                Dim x1 As Decimal = 0
                                x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_TotalNeto.c_Valor = x1

                                Dim x2 As Decimal = 0
                                x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_MontoIva.c_Valor = x2
                                .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                                Dim x3 As Decimal = 0
                                x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                                .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                                Dim x4 As Decimal = x0
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioFinal.c_Valor = x4
                                .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                                '.RegistroDato.c_CantidadUnidadInventario.c_Valor = 0
                                '.RegistroDato.c_CostoInventario.c_Valor = 0
                                '.RegistroDato.c_PrecioInventario.c_Valor = 0

                                If ._ItemDetalleOrigen.c_PrecioNeto.c_Valor > 0 Then
                                    .RegistroDato.c_CostoVenta.c_Valor = Decimal.Round((x0 * ._ItemDetalleOrigen._CostoVentaEmpaque) / ._ItemDetalleOrigen.c_PrecioItem.c_Valor, 2, MidpointRounding.AwayFromZero)
                                Else
                                    .RegistroDato.c_CostoVenta.c_Valor = ._ItemDetalleOrigen._CostoVentaEmpaque
                                End If
                                .RegistroDato.c_CostoInventario.c_Valor = Decimal.Round(.RegistroDato.c_CostoVenta.c_Valor / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioSugerido.c_Valor = 0

                                Dim x5 As Decimal = 0
                                Dim x6 As Decimal = 0
                                x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                                x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                                If ._ItemDetalleOrigen._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                                Else
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                                End If
                            End If

                        End With
                    Next

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CONTADOR AUTOMATICO CXC
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                autocxc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE SERIES FISCALES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
                                xventa.RegistroDato.c_Documento.c_Texto = xventa.RegistroDato._SerieFiscalAsignada + _
                                                xcmd.ExecuteScalar().ToString.Trim.PadLeft(10 - xventa.RegistroDato._SerieFiscalAsignada.Length, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'CXC, sea Contado / Credito
                                Dim xcxc As New FichaCtasCobrar.c_CxC.c_Registro
                                With xcxc
                                    .c_AutoAgencia.c_Texto = ""
                                    .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                    .c_AutoCxC.c_Texto = autocxc
                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                    .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                    .c_EstatusCancelado.c_Texto = "0"
                                    .c_EstatusDocumentoCxC.c_Texto = "0"
                                    .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                    .c_MontoAcumulado.c_Valor = 0
                                    .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor * -1
                                    .c_MontoPorCobrar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor * -1
                                    .c_NombreAgencia.c_Texto = ""
                                    .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                    .c_NotasDetalles.c_Texto = xventa.RegistroDato.c_NotasDocumento.c_Texto
                                    .c_Numero.c_Texto = ""
                                    .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                    .c_TipoDocumento.c_Texto = "NCF"
                                    .c_TipoMovimiento.c_Valor = -1
                                    .c_TipoOperacion.c_Texto = ""
                                    .c_AutoMovimientoEntrada.c_Texto = ""
                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                End With

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                xcmd.Parameters.AddWithValue("@auto", xcxc.c_AutoCxC.c_Texto).Size = xcxc.c_AutoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xcxc.c_FechaProceso.c_Valor)
                                xcmd.Parameters.AddWithValue("@tipo_documento", xcxc.c_TipoDocumento.c_Texto).Size = xcxc.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xcxc.c_NumeroDocumento.c_Texto).Size = xcxc.c_NumeroDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@detalle", xcxc.c_NotasDetalles.c_Texto).Size = xcxc.c_NotasDetalles.c_Largo
                                xcmd.Parameters.AddWithValue("@importe", xcxc.c_MontoImporte.c_Valor)
                                xcmd.Parameters.AddWithValue("@acumulado", xcxc.c_MontoAcumulado.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_cliente", xcxc.c_AutoCliente.c_Texto).Size = xcxc.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cliente", xcxc.c_NombreCliente.c_Texto).Size = xcxc.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xcxc.c_CiRifCliente.c_Texto).Size = xcxc.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc.c_CodigoCliente.c_Texto).Size = xcxc.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cancelado", xcxc.c_EstatusCancelado.c_Texto).Size = xcxc.c_EstatusCancelado.c_Largo
                                xcmd.Parameters.AddWithValue("@resta", xcxc.c_MontoPorCobrar.c_Valor)
                                xcmd.Parameters.AddWithValue("@operacion", xcxc.c_TipoOperacion.c_Texto).Size = xcxc.c_TipoOperacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xcxc.c_EstatusDocumentoCxC.c_Texto).Size = xcxc.c_EstatusDocumentoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xcxc.c_AutoDocumento.c_Texto).Size = xcxc.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@numero", xcxc.c_Numero.c_Texto).Size = xcxc.c_Numero.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_agencia", xcxc.c_AutoAgencia.c_Texto).Size = xcxc.c_AutoAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@agencia", xcxc.c_NombreAgencia.c_Texto).Size = xcxc.c_NombreAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@signo", xcxc.c_TipoMovimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc.c_AutoMovimientoEntrada.c_Texto).Size = xcxc.c_AutoMovimientoEntrada.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_emision", xcxc.c_FechaEmision.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
                                Dim auto_concepto As Object = Nothing
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                auto_concepto = xcmd.ExecuteScalar()
                                If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
                                    Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                End If

                                Dim xconcepto As String = ""
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                xcmd.Parameters.AddWithValue("@auto", auto_concepto)
                                xconcepto = xcmd.ExecuteScalar

                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    If xdetalle.RegistroDato._TipoMovimientoEfectuado = TipoMovimientoDetalle.Devolucion Then
                                        Dim xvalor As Decimal = 0
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "SELECT SUM(CANTIDAD) FROM VENTAS_DETALLE WHERE auto_productos=@auto_producto " & _
                                          "and n_auto_item_origen=@n_auto_item_origen AND N_TipoMovimiento='D' " & _
                                          "AND AUTO_DOCUMENTO IN (select AUTO from ventas where aplica=@aplica AND estatus='0') "
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto)
                                        xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto)
                                        xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto)
                                        xvalor = xcmd.ExecuteScalar()
                                        If IsDBNull(xvalor) Then
                                        Else
                                            If (xvalor) > xdetalle._ItemDetalleOrigen._CantidadDespachada Then
                                                Throw New Exception("Producto:" & xdetalle.RegistroDato.c_NombreProducto.c_Texto & _
                                                                    vbCrLf & "LA CANTIDAD A DEVOLVER SUPERA LA CANTIDAD FACTURADA" & vbCrLf & _
                                                                    "VERIFICA SI HAY UNA NOTA DE CREDITO YA REALIZADA A ESTE PRODUCTO")
                                            End If
                                        End If

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor * xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                        xcmd.ExecuteNonQuery()

                                        'PRODUCTOS_KARDEX
                                        Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                        With xkardex
                                            .c_AutoConcepto.c_Texto = auto_concepto
                                            .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
                                            .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                            .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
                                            .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                            .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
                                            .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                            .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                            .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
                                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                            .c_NotasDetallesMovimiento.c_Texto = xdetalle._NotasDetalle
                                            .c_OrigenMovimiento.c_Texto = "0803"
                                            .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
                                            .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                            'Campos Nuevos
                                            .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                            .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
                                            .c_NombreConcepto.c_Texto = xconcepto
                                            .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
                                            .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
                                            .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
                                            .c_CodigoProducto.c_Texto = xdetalle.RegistroDato.c_CodigoProducto.c_Texto
                                            .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato.c_CodigoDeposito.c_Texto
                                            .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                        End With

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                        xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                        xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                        xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                        xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                        'Campos Nuevos
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    'VERIFICO SI EL MONTO DE LA NC ES SUPERIOR AL MONTO ORIGINAL DEL ITEM DE FACTURA
                                    Dim xmonto As Object = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT SUM(TOTAL) FROM ventas_detalle WHERE auto_productos=@auto_producto " & _
                                      "and n_auto_item_origen=@n_auto_item_origen " & _
                                      "AND AUTO_DOCUMENTO IN (select AUTO from ventas where aplica=@aplica AND estatus='0')"
                                    xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto)
                                    xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto)
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto)
                                    xmonto = xcmd.ExecuteScalar()
                                    If IsDBNull(xmonto) Or xmonto Is Nothing Then
                                    Else
                                        If (xmonto) > xdetalle._ItemDetalleOrigen._TotalGeneral Then
                                            Throw New Exception("Producto:" & vbCrLf & xdetalle.RegistroDato.c_NombreProducto.c_Texto & _
                                                                vbCrLf & "EL MONTO A DEVOLVER SUPERA EL IMPORTE TOTAL FACTURADO" & vbCrLf & _
                                                                "VERIFICA SI HAY UNA NOTA DE CREDITO YA REALIZADA A ESTE PRODUCTO")
                                        End If
                                    End If


                                    'CARGAR REGISTRO DE PRODUCTO A IMPRRIMIR EN IMP FISCAL
                                    Dim dr As DataRow = xtablaprd.NewRow
                                    dr("cantidad") = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                    dr("nombre") = IIf(xdetalle.RegistroDato._NombreCortoProducto = "", xdetalle.RegistroDato._NombreProducto, xdetalle.RegistroDato._NombreCortoProducto)
                                    dr("descuento1p") = xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor
                                    dr("precio_neto") = xdetalle.RegistroDato.c_PrecioNeto.c_Valor
                                    dr("codigo_tasa") = xdetalle.RegistroDato._TipoTasaIva
                                    dr("detalle") = xdetalle.RegistroDato.c_DetalleNotas.c_Texto.Trim
                                    dr("codigo") = xdetalle.RegistroDato.c_CodigoProducto.c_Texto.Trim
                                    xtablaprd.Rows.Add(dr)

                                    'VERIFICO ESTATUS DEL PRODUCTO
                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If
                                Next

                                'VERIFICO SI EL MONTO DE LA NC ES SUPERIOR AL MONTO ORIGINAL DEL DOCUMENTO DE FACTURA
                                Dim xval As Decimal = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "SELECT SUM(total) FROM VENTAS WHERE auto IN (select AUTO from ventas where aplica=@aplica AND estatus='0')"
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato._DocumentoAplica)
                                xval = xcmd.ExecuteScalar()
                                If IsDBNull(xval) Then
                                Else
                                    If xval > xventa._FichaRegistroVentaOrigen._TotalGenereal Then
                                        Throw New Exception("MONTO SUPERA EL TOTAL DEL DOCUMENTO ORIGEN AL QUE AFECTA")
                                    End If
                                End If

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next


                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If

                                If ximpresora._ModoImpresion = TipoImpresora.Fiscal Then
                                    If ximpresora._Impresora.Ver_FechaImpresoraFiscal <> xventa.RegistroDato.c_FechaEmision.c_Valor Then
                                        Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, FECHA IMPRESORA NO ES IGUAL AL DEL SISTEMA")
                                    End If

                                    If ximpresora._Impresora.Ver_SerialImpresoraFiscal.Trim <> xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto.Trim Then
                                        Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, SERIAL FISCAL NO CORRESPONDE AL SERIAL ASIGANADO AL DOCUMENTO")
                                    End If

                                    ' NO SE TIENE EL NUMERO DE CONTROL GENERADO POR LA IMP FISCAL PARA DOC TIPO NOTA DE CREDITO
                                    Dim xcontrol As Integer = 0
                                    Dim xz As Integer = 0
                                    Integer.TryParse(ximpresora._Impresora.Ver_UltNotaCredito, xcontrol)
                                    Integer.TryParse(ximpresora._Impresora.Ver_UltimoZFiscal, xz)
                                    xz += 1
                                    xcontrol += 1
                                    Dim xcont As String = xcontrol.ToString.Trim.PadLeft(10, "0")

                                    'NC
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update ventas set control = @control, relacion_z = @relacion_z where auto = @auto"
                                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@control", xcont).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                    xcmd.Parameters.AddWithValue("@relacion_z", xz)
                                    xcmd.ExecuteNonQuery()

                                    With ximpresora._Impresora
                                        .NC_Inicializa(xventa.RegistroDato.c_Tasa1.c_Valor, _
                                                           xventa.RegistroDato.c_Tasa2.c_Valor, _
                                                           xventa.RegistroDato.c_Tasa3.c_Valor)

                                        .Cli_CondicionVenta = xventa.RegistroDato.c_CondicionPago.c_Texto.Trim
                                        .Cli_DirCliente = xventa.RegistroDato.c_DirFiscalCliente.c_Texto.Trim
                                        .Cli_EstacionVenta = xventa.RegistroDato.c_EstacionEquipo.c_Texto.Trim
                                        .Cli_FacturaVenta = xventa.RegistroDato.c_DocumentoAplica.c_Texto.Trim
                                        .Cli_NomCliente = xventa.RegistroDato.c_NombreCliente.c_Texto.Trim
                                        .Cli_RifCliente = xventa.RegistroDato.c_CiRifCliente.c_Texto.Trim
                                        .Cli_TelCliente = xventa.RegistroDato.c_TelefonoCliente.c_Texto.Trim
                                        .Cli_UsuarioVenta = xventa.RegistroDato.c_Usuario.c_Texto.Trim
                                        .Cli_FechaFacturaDev = xventa._FichaRegistroVentaOrigen.c_FechaEmision.c_Valor
                                        .Cli_HoraFacturaDev = xventa._FichaRegistroVentaOrigen.c_Hora.c_Texto
                                        .Cli_SerialImp = xventa._FichaRegistroVentaOrigen.c_SerialImpresoraFiscal.c_Texto

                                        .CargoGlobal = xventa.RegistroDato.c_TasaCargos.c_Valor
                                        .DsctoGlobal = xventa.RegistroDato.c_TasaDescuento_1.c_Valor
                                        .AutoDocumento = xventa.RegistroDato._AutoDocumento
                                    End With
                                    If xventa.RegistroDato.c_TotalGeneral.c_Valor > 0 Then
                                        ImprimeNotaCredito(ximpresora._Impresora, xtablaprd, xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                    Else
                                        Throw New Exception("NO SE PUEDE GENERAR UNA NOTA DE CREDITO FISCAL DE MONTO CERO (0.0)")
                                    End If
                                ElseIf ximpresora._ModoImpresion = TipoImpresora.Texto Then
                                ElseIf ximpresora._ModoImpresion = TipoImpresora.Grafico Then
                                Else
                                    Throw New Exception("NO SE HA DEFINIDO UN MODO DE IMPRESION DE NOTA DE CREDITO")
                                End If

                                xtr.Commit()
                            End Using

                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("PROBLEMA AL GRABAR NOTA DE CREDITO:" + vbCrLf + ex.Message)
                End Try
            End Function

            Function F_GrabarNotaCreditoChimba(ByVal xventa As V_Ventas.AgregarNotaCredito, _
                                   ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleNotaCredito)) As Boolean

                Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
                Dim xsql_2 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"

                Dim autocxc As String = ""
                Dim xlista_medidasventa As New List(Of MedidasVenta)

                'Tabla Usada Para Lista De Productos Para La Impresora Fiscal
                Dim xtablaprd As New DataTable
                With xtablaprd
                    .Columns.Add("cantidad", GetType(System.Decimal))
                    .Columns.Add("nombre", GetType(System.String))
                    .Columns.Add("descuento1p", GetType(System.Decimal))
                    .Columns.Add("precio_neto", GetType(System.Decimal))
                    .Columns.Add("codigo_tasa", GetType(System.String))
                    .Columns.Add("detalle", GetType(System.String))
                End With

                Dim xtr As SqlTransaction = Nothing
                Try
                    xventa.AsignarData()
                    With xventa.RegistroDato
                        .c_TipoDocumento.c_Texto = "XN"
                        .c_SerieAsignada.c_Texto = "XNC"
                        .c_AutoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_AutoCliente.c_Texto
                        .c_AutoVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_AutoVendedor.c_Texto
                        .c_CiRifCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_CiRifCliente.c_Texto
                        .c_CodigoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_CodigoCliente.c_Texto
                        .c_CodigoVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_CodigoVendedor.c_Texto
                        .c_DirDespacho.c_Texto = xventa._FichaRegistroVentaOrigen.c_DirDespacho.c_Texto
                        .c_DirFiscalCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_DirFiscalCliente.c_Texto
                        .c_FactorCambio.c_Valor = xventa._FichaRegistroVentaOrigen.c_FactorCambio.c_Valor
                        .c_NombreCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_NombreCliente.c_Texto
                        .c_NombreVendedor.c_Texto = xventa._FichaRegistroVentaOrigen.c_NombreVendedor.c_Texto
                        .c_Tasa1.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa1.c_Valor
                        .c_Tasa2.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa2.c_Valor
                        .c_Tasa3.c_Valor = xventa._FichaRegistroVentaOrigen.c_Tasa3.c_Valor
                        .c_TelefonoCliente.c_Texto = xventa._FichaRegistroVentaOrigen.c_TelefonoCliente.c_Texto
                        .c_BloquearAlmacen.c_Texto = xventa._FichaRegistroVentaOrigen.c_BloquearAlmacen.c_Texto
                        .c_DocumentoAplica.c_Texto = xventa._FichaRegistroVentaOrigen.c_Documento.c_Texto
                        .c_FechaPedido.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                        .c_TasaCargos.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaCargos.c_Valor
                        .c_TasaDescuento_1.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaDescuento_1.c_Valor
                        .c_TasaDescuento_2.c_Valor = xventa._FichaRegistroVentaOrigen.c_TasaDescuento_2.c_Valor

                        Dim xcontrol As Integer = 0
                        .c_ControlFiscal.c_Texto = xcontrol.ToString.Trim.PadLeft(10, "0")
                    End With

                    Dim xn As Decimal = 0
                    Dim xmd1 As Decimal = 0
                    Dim xmd2 As Decimal = 0
                    Dim xmt As Decimal = 0
                    Dim xb1 As Decimal = 0
                    Dim xb2 As Decimal = 0
                    Dim xb3 As Decimal = 0
                    Dim xexento As Decimal = 0

                    xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
                    xb1 = xventa.RegistroDato.c_Base1.c_Valor
                    xb2 = xventa.RegistroDato.c_Base2.c_Valor
                    xb3 = xventa.RegistroDato.c_Base3.c_Valor
                    xexento = xventa.RegistroDato.c_Exento.c_Valor

                    If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
                        Dim xd1 As Decimal = 0
                        Dim xd2 As Decimal = 0
                        Dim xd3 As Decimal = 0
                        Dim xd4 As Decimal = 0
                        xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
                        Dim xc1 As Decimal = 0
                        Dim xc2 As Decimal = 0
                        Dim xc3 As Decimal = 0
                        Dim xc4 As Decimal = 0
                        xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

                        xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                        xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                    End If

                    Dim ximp1 As Decimal = 0
                    Dim ximp2 As Decimal = 0
                    Dim ximp3 As Decimal = 0

                    ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                    ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

                    xventa.RegistroDato.c_Base1.c_Valor = xb1
                    xventa.RegistroDato.c_Base2.c_Valor = xb2
                    xventa.RegistroDato.c_Base3.c_Valor = xb3
                    xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_Exento.c_Valor = xexento
                    xventa.RegistroDato.c_Impuesto1.c_Valor = ximp1
                    xventa.RegistroDato.c_Impuesto2.c_Valor = ximp2
                    xventa.RegistroDato.c_Impuesto3.c_Valor = ximp3
                    xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
                    xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
                                                               xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor

                    With xventa.RegistroDato
                        .c_SerialImpresoraFiscal.c_Texto = ""
                        .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
                        .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
                        .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
                        .c_TipoColumna.c_Texto = "1"
                        .c_EstatusDocumento.c_Texto = "0"
                        .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
                        If .c_FactorCambio.c_Valor > 0 Then
                            .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
                        Else
                            .c_MontoDivisa.c_Valor = 0
                        End If
                        .c_DescuentoPorProntoPago.c_Valor = 0
                    End With

                    Dim xtipoNotaCredito_por_devolucion As Boolean = False
                    If xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa._FichaRegistroVentaOrigen.c_TotalGeneral.c_Valor Then
                        xtipoNotaCredito_por_devolucion = True
                    End If

                    Dim xauto As Integer = 0
                    For Each xdetalle In xventadetalle
                        xauto += 1

                        With xdetalle
                            .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
                            .RegistroDato.c_AutoCliente.c_Texto = ._ItemDetalleOrigen.c_AutoCliente.c_Texto
                            .RegistroDato.c_AutoDepartamento.c_Texto = ._ItemDetalleOrigen.c_AutoDepartamento.c_Texto
                            .RegistroDato.c_AutoDeposito.c_Texto = ._ItemDetalleOrigen.c_AutoDeposito.c_Texto
                            .RegistroDato.c_AutoGrupo.c_Texto = ._ItemDetalleOrigen.c_AutoGrupo.c_Texto
                            .RegistroDato.c_AutoMedida.c_Texto = ._ItemDetalleOrigen.c_AutoMedida.c_Texto
                            .RegistroDato.c_AutoProducto.c_Texto = ._ItemDetalleOrigen.c_AutoProducto.c_Texto
                            .RegistroDato.c_AutoSubGrupo.c_Texto = ._ItemDetalleOrigen.c_AutoSubGrupo.c_Texto
                            .RegistroDato.c_CantidadDespachada.c_Valor = xdetalle._Cantidad
                            .RegistroDato.c_CategoriaProducto.c_Texto = ._ItemDetalleOrigen.c_CategoriaProducto.c_Texto
                            .RegistroDato.c_CodigoDeposito.c_Texto = ._ItemDetalleOrigen.c_CodigoDeposito.c_Texto
                            .RegistroDato.c_CodigoProducto.c_Texto = ._ItemDetalleOrigen.c_CodigoProducto.c_Texto
                            .RegistroDato.c_ContenidoEmpaque.c_Valor = ._ItemDetalleOrigen.c_ContenidoEmpaque.c_Valor
                            .RegistroDato.c_Corte.c_Texto = ._ItemDetalleOrigen.c_Corte.c_Texto
                            .RegistroDato.c_Corte_X.c_Valor = ._ItemDetalleOrigen.c_Corte_X.c_Valor
                            .RegistroDato.c_Corte_Y.c_Valor = ._ItemDetalleOrigen.c_Corte_Y.c_Valor
                            .RegistroDato.c_Corte_Z.c_Valor = ._ItemDetalleOrigen.c_Corte_Z.c_Valor
                            .RegistroDato.c_DescuentoTasa_1.c_Valor = xdetalle._Descto
                            .RegistroDato.c_DescuentoTasa_2.c_Valor = ._ItemDetalleOrigen.c_DescuentoTasa_2.c_Valor
                            .RegistroDato.c_DescuentoTasa_3.c_Valor = ._ItemDetalleOrigen.c_DescuentoTasa_3.c_Valor
                            .RegistroDato.c_DetalleNotas.c_Texto = xdetalle._NotasDetalle
                            .RegistroDato.c_DiasGarantia.c_Valor = ._ItemDetalleOrigen.c_DiasGarantia.c_Valor
                            .RegistroDato.c_Estatus.c_Texto = ._ItemDetalleOrigen.c_Estatus.c_Texto
                            .RegistroDato.c_EstatusCorte.c_Texto = ._ItemDetalleOrigen.c_EstatusCorte.c_Texto
                            .RegistroDato.c_EstatusGarantia.c_Texto = ._ItemDetalleOrigen.c_EstatusGarantia.c_Texto
                            .RegistroDato.c_EstatusSerial.c_Texto = ._ItemDetalleOrigen.c_EstatusSerial.c_Texto
                            .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                            .RegistroDato.c_ForzarMedida.c_Texto = ._ItemDetalleOrigen.c_ForzarMedida.c_Texto
                            .RegistroDato.c_NombreDeposito.c_Texto = ._ItemDetalleOrigen.c_NombreDeposito.c_Texto
                            .RegistroDato.c_NombreEmpaque.c_Texto = ._ItemDetalleOrigen.c_NombreEmpaque.c_Texto
                            .RegistroDato.c_NombreProducto.c_Texto = ._ItemDetalleOrigen.c_NombreProducto.c_Texto
                            .RegistroDato.c_NombreCortoProducto.c_Texto = IIf(._ItemDetalleOrigen._NombreCortoProducto = "", ._ItemDetalleOrigen._NombreProducto, ._ItemDetalleOrigen._NombreCortoProducto)
                            .RegistroDato.c_NumeroDecimales.c_Valor = ._ItemDetalleOrigen.c_NumeroDecimales.c_Valor
                            .RegistroDato.c_PrecioSugerido.c_Valor = ._ItemDetalleOrigen.c_PrecioSugerido.c_Valor
                            .RegistroDato.c_PTO_AutoJornada.c_Texto = ._ItemDetalleOrigen.c_PTO_AutoJornada.c_Texto
                            .RegistroDato.c_PTO_AutoOperador.c_Texto = ._ItemDetalleOrigen.c_PTO_AutoOperador.c_Texto
                            .RegistroDato.c_PTO_CodigoBarra.c_Texto = ._ItemDetalleOrigen.c_PTO_CodigoBarra.c_Texto
                            .RegistroDato.c_PTO_DigitosEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_DigitosEtiqueta.c_Texto
                            .RegistroDato.c_PTO_EsPesado.c_Texto = ._ItemDetalleOrigen.c_PTO_EsPesado.c_Texto
                            .RegistroDato.c_PTO_EstaEnOferta.c_Texto = ._ItemDetalleOrigen.c_PTO_EstaEnOferta.c_Texto
                            .RegistroDato.c_PTO_FormatoEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_FormatoEtiqueta.c_Texto
                            .RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_MontoTotalEtiqueta.c_Valor
                            .RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroBalanzaEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroControlEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroDepartEtiqueta.c_Texto
                            .RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_NumeroItemEtiqueta.c_Valor
                            .RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_NumeroTicketEtiqueta.c_Texto
                            .RegistroDato.c_PTO_PesoEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_PesoEtiqueta.c_Valor
                            .RegistroDato.c_PTO_Plu.c_Texto = ._ItemDetalleOrigen.c_PTO_Plu.c_Texto
                            .RegistroDato.c_PTO_PluEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_PluEtiqueta.c_Texto
                            .RegistroDato.c_PTO_PrecioEtiqueta.c_Valor = ._ItemDetalleOrigen.c_PTO_PrecioEtiqueta.c_Valor
                            .RegistroDato.c_PTO_SeccionEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_SeccionEtiqueta.c_Texto
                            .RegistroDato.c_PTO_VendedorEtiqueta.c_Texto = ._ItemDetalleOrigen.c_PTO_VendedorEtiqueta.c_Texto
                            .RegistroDato.c_ReferenciaEmpaque.c_Texto = ._ItemDetalleOrigen.c_ReferenciaEmpaque.c_Texto
                            .RegistroDato.c_SignoDocumento.c_Valor = -1
                            .RegistroDato.c_TasaIva.c_Valor = ._ItemDetalleOrigen.c_TasaIva.c_Valor
                            .RegistroDato.c_TipoDocumento.c_Texto = "03"
                            .RegistroDato.c_TipoTasaIva.c_Texto = ._ItemDetalleOrigen.c_TipoTasaIva.c_Texto
                            .RegistroDato.c_AutoItemOrigen.c_Texto = ._ItemDetalleOrigen._AutoItem

                            If xdetalle._TipoMovimiento = TipoMovimientoNC.DEVOLUCION Then
                                .RegistroDato.c_TipoCalculoUtilidad.c_Texto = ._ItemDetalleOrigen.c_TipoCalculoUtilidad.c_Texto
                                .RegistroDato.c_TipoMovimiento.c_Texto = "D"
                                .RegistroDato.c_PrecioNeto.c_Valor = ._PrecioNeto
                                .RegistroDato.c_CostoVenta.c_Valor = ._ItemDetalleOrigen.c_CostoVenta.c_Valor
                                .RegistroDato.c_CostoInventario.c_Valor = ._ItemDetalleOrigen.c_CostoInventario.c_Valor

                                Dim x0 As Decimal = 0
                                x0 = ._PrecioNeto

                                .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
                                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
                                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioItem.c_Valor = x0

                                Dim x1 As Decimal = 0
                                x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_TotalNeto.c_Valor = x1

                                Dim x2 As Decimal = 0
                                x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_MontoIva.c_Valor = x2
                                .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                                Dim x3 As Decimal = 0
                                x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                                .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                                Dim x4 As Decimal = x0
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioFinal.c_Valor = x4
                                .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                                Dim x5 As Decimal = 0
                                Dim x6 As Decimal = 0
                                x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                                x6 = xdetalle._ItemDetalleOrigen._CostoVentaEmpaque * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_CostoVenta.c_Valor = x6
                                'x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                                If ._ItemDetalleOrigen._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                                Else
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                                End If

                                xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
                                                                               ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
                                                                               ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
                                                                               ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})

                            Else 'AJUSTE
                                .RegistroDato.c_TipoCalculoUtilidad.c_Texto = ._ItemDetalleOrigen.c_TipoCalculoUtilidad.c_Texto
                                .RegistroDato.c_TipoMovimiento.c_Texto = "A"
                                Dim t1 As Decimal = Decimal.Round(xdetalle._ItemDetalleOrigen.c_TotalNeto.c_Valor / _
                                                                     xdetalle._ItemDetalleOrigen.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                Dim t2 As Decimal = Decimal.Round(t1 * (xdetalle._ItemDetalleOrigen.c_CantidadDespachada.c_Valor - xdetalle._Cantidad), 2, MidpointRounding.AwayFromZero)
                                Dim t3 As Decimal = Decimal.Round(xdetalle._Importe + t2, 2, MidpointRounding.AwayFromZero)
                                Dim x0 As Decimal = Decimal.Round((xdetalle._ItemDetalleOrigen.c_TotalNeto.c_Valor - t3) / xdetalle._Cantidad, 2, MidpointRounding.AwayFromZero)

                                .RegistroDato.c_PrecioNeto.c_Valor = x0
                                .RegistroDato.c_DescuentoMonto_1.c_Valor = 0
                                .RegistroDato.c_DescuentoMonto_2.c_Valor = 0
                                .RegistroDato.c_DescuentoMonto_3.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_1.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_2.c_Valor = 0
                                .RegistroDato.c_DescuentoTasa_3.c_Valor = 0
                                .RegistroDato.c_PrecioItem.c_Valor = x0

                                Dim x1 As Decimal = 0
                                x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_TotalNeto.c_Valor = x1

                                Dim x2 As Decimal = 0
                                x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_MontoIva.c_Valor = x2
                                .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

                                Dim x3 As Decimal = 0
                                x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
                                .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

                                Dim x4 As Decimal = x0
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioFinal.c_Valor = x4
                                .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

                                '.RegistroDato.c_CantidadUnidadInventario.c_Valor = 0
                                '.RegistroDato.c_CostoInventario.c_Valor = 0
                                '.RegistroDato.c_PrecioInventario.c_Valor = 0

                                If ._ItemDetalleOrigen.c_PrecioNeto.c_Valor > 0 Then
                                    .RegistroDato.c_CostoVenta.c_Valor = Decimal.Round((x0 * ._ItemDetalleOrigen._CostoVentaEmpaque) / ._ItemDetalleOrigen.c_PrecioItem.c_Valor, 2, MidpointRounding.AwayFromZero)
                                Else
                                    .RegistroDato.c_CostoVenta.c_Valor = ._ItemDetalleOrigen._CostoVentaEmpaque
                                End If
                                .RegistroDato.c_CostoInventario.c_Valor = Decimal.Round(.RegistroDato.c_CostoVenta.c_Valor / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)
                                .RegistroDato.c_PrecioSugerido.c_Valor = 0

                                Dim x5 As Decimal = 0
                                Dim x6 As Decimal = 0
                                x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
                                x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
                                .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

                                If ._ItemDetalleOrigen._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
                                Else
                                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
                                End If
                            End If

                        End With
                    Next

                    '
                    ' ARRANCA EL PROCEDIMIENTO DE GRABAR
                    '
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_1
                                xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CONTADOR AUTOMATICO CXC
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                autocxc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'ACTUALIZA CORRELATIVO DE SERIES FISCALES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select a_chimbo_nc from contadores"
                                If IsDBNull(xcmd.ExecuteScalar) Then
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "UPDATE CONTADORES SET a_chimbo_nc=0"
                                    xcmd.ExecuteNonQuery()
                                End If
                                Dim xnc As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "update contadores set a_chimbo_nc=a_chimbo_nc+1;select a_chimbo_nc from contadores"
                                xnc = xcmd.ExecuteScalar()

                                xventa.RegistroDato.c_Documento.c_Texto = xventa.RegistroDato._SerieFiscalAsignada + _
                                                xnc.ToString.Trim.PadLeft(10 - xventa.RegistroDato._SerieFiscalAsignada.Length, "0")

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
                                xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
                                xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
                                xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
                                xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
                                xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
                                xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
                                xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
                                xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
                                xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
                                xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
                                xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
                                xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
                                xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
                                xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
                                xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
                                xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
                                xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
                                xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo
                                'CAMPOS NUEVOS
                                xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
                                xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
                                xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
                                xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
                                xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
                                xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
                                xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
                                xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'CXC, sea Contado / Credito
                                Dim xcxc As New FichaCtasCobrar.c_CxC.c_Registro
                                With xcxc
                                    .c_AutoAgencia.c_Texto = ""
                                    .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
                                    .c_AutoCxC.c_Texto = autocxc
                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
                                    .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
                                    .c_EstatusCancelado.c_Texto = "0"
                                    .c_EstatusDocumentoCxC.c_Texto = "0"
                                    .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                    .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
                                    .c_MontoAcumulado.c_Valor = 0
                                    .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor * -1
                                    .c_MontoPorCobrar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor * -1
                                    .c_NombreAgencia.c_Texto = ""
                                    .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                    .c_NotasDetalles.c_Texto = xventa.RegistroDato.c_NotasDocumento.c_Texto
                                    .c_Numero.c_Texto = ""
                                    .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                    .c_TipoDocumento.c_Texto = "NCF"
                                    .c_TipoMovimiento.c_Valor = -1
                                    .c_TipoOperacion.c_Texto = ""
                                    .c_AutoMovimientoEntrada.c_Texto = ""
                                    .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                End With

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                xcmd.Parameters.AddWithValue("@auto", xcxc.c_AutoCxC.c_Texto).Size = xcxc.c_AutoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xcxc.c_FechaProceso.c_Valor)
                                xcmd.Parameters.AddWithValue("@tipo_documento", xcxc.c_TipoDocumento.c_Texto).Size = xcxc.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xcxc.c_NumeroDocumento.c_Texto).Size = xcxc.c_NumeroDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@detalle", xcxc.c_NotasDetalles.c_Texto).Size = xcxc.c_NotasDetalles.c_Largo
                                xcmd.Parameters.AddWithValue("@importe", xcxc.c_MontoImporte.c_Valor)
                                xcmd.Parameters.AddWithValue("@acumulado", xcxc.c_MontoAcumulado.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_cliente", xcxc.c_AutoCliente.c_Texto).Size = xcxc.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cliente", xcxc.c_NombreCliente.c_Texto).Size = xcxc.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xcxc.c_CiRifCliente.c_Texto).Size = xcxc.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc.c_CodigoCliente.c_Texto).Size = xcxc.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cancelado", xcxc.c_EstatusCancelado.c_Texto).Size = xcxc.c_EstatusCancelado.c_Largo
                                xcmd.Parameters.AddWithValue("@resta", xcxc.c_MontoPorCobrar.c_Valor)
                                xcmd.Parameters.AddWithValue("@operacion", xcxc.c_TipoOperacion.c_Texto).Size = xcxc.c_TipoOperacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xcxc.c_EstatusDocumentoCxC.c_Texto).Size = xcxc.c_EstatusDocumentoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xcxc.c_AutoDocumento.c_Texto).Size = xcxc.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@numero", xcxc.c_Numero.c_Texto).Size = xcxc.c_Numero.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_agencia", xcxc.c_AutoAgencia.c_Texto).Size = xcxc.c_AutoAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@agencia", xcxc.c_NombreAgencia.c_Texto).Size = xcxc.c_NombreAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@signo", xcxc.c_TipoMovimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc.c_AutoMovimientoEntrada.c_Texto).Size = xcxc.c_AutoMovimientoEntrada.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_emision", xcxc.c_FechaEmision.c_Valor)
                                xcmd.ExecuteNonQuery()

                                'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
                                Dim auto_concepto As Object = Nothing
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
                                auto_concepto = xcmd.ExecuteScalar()
                                If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
                                    Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
                                End If

                                Dim xconcepto As String = ""
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
                                xcmd.Parameters.AddWithValue("@auto", auto_concepto)
                                xconcepto = xcmd.ExecuteScalar

                                'VENTAS_DETALLE
                                For Each xdetalle In xventadetalle
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

                                    With xdetalle
                                        .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                    End With

                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
                                    xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
                                    xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
                                    xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
                                    xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
                                    xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
                                    xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
                                    xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
                                    xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
                                    xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
                                    xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
                                    xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
                                    xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
                                    xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
                                    xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
                                    xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
                                    'CAMPOS NUEVOS, PARA EL PTO DE VENTA
                                    xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
                                    xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
                                    xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
                                    xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
                                    xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

                                    xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
                                    xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

                                    xcmd.ExecuteNonQuery()

                                    If xdetalle.RegistroDato._TipoMovimientoEfectuado = TipoMovimientoDetalle.Devolucion Then
                                        Dim xvalor As Decimal = 0
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "SELECT SUM(CANTIDAD) FROM VENTAS_DETALLE WHERE auto_productos=@auto_producto " & _
                                          "and n_auto_item_origen=@n_auto_item_origen AND N_TipoMovimiento='D' " & _
                                          "AND AUTO_DOCUMENTO IN (select AUTO from ventas where aplica=@aplica AND estatus='0') "
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto)
                                        xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto)
                                        xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto)
                                        xvalor = xcmd.ExecuteScalar()
                                        If IsDBNull(xvalor) Then
                                        Else
                                            If (xvalor) > xdetalle._ItemDetalleOrigen._CantidadDespachada Then
                                                Throw New Exception("PRODUCTO HA EFECTUAR DEVOLUCION:" & xdetalle.RegistroDato.c_NombreProducto.c_Texto & _
                                                                    vbCrLf & "LA CANTIDAD A DEVOLVER SUPERA LA CANTIDAD FACTURADA" & vbCrLf & _
                                                                    "VERIFICA SI HAY UNA NOTA DE CREDITO YA REALIZADA A ESTE PRODUCTO")
                                            End If
                                        End If

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
                                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor * xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
                                        xcmd.ExecuteNonQuery()

                                        'PRODUCTOS_KARDEX
                                        Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
                                        With xkardex
                                            .c_AutoConcepto.c_Texto = auto_concepto
                                            .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
                                            .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                            .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
                                            .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                            .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
                                            .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
                                            .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
                                            .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
                                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
                                            .c_NotasDetallesMovimiento.c_Texto = xdetalle._NotasDetalle
                                            .c_OrigenMovimiento.c_Texto = "0803"
                                            .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
                                            .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
                                            'Campos Nuevos
                                            .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                            .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
                                            .c_NombreConcepto.c_Texto = xconcepto
                                            .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
                                            .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
                                            .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
                                            .c_CodigoProducto.c_Texto = xdetalle.RegistroDato.c_CodigoProducto.c_Texto
                                            .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato.c_CodigoDeposito.c_Texto
                                            .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
                                        End With

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
                                        xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
                                        xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
                                        xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
                                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
                                        xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
                                        xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
                                        xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
                                        xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
                                        'Campos Nuevos
                                        xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
                                        xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
                                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
                                        xcmd.ExecuteNonQuery()
                                    End If

                                    'VERIFICO SI EL MONTO DE LA NC ES SUPERIOR AL MONTO ORIGINAL DEL ITEM DE FACTURA
                                    Dim xmonto As Object = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT SUM(TOTAL) FROM ventas_detalle WHERE auto_productos=@auto_producto " & _
                                      "and n_auto_item_origen=@n_auto_item_origen " & _
                                      "AND AUTO_DOCUMENTO IN (select AUTO from ventas where aplica=@aplica AND estatus='0')"
                                    xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto)
                                    xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto)
                                    xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto)
                                    xmonto = xcmd.ExecuteScalar()
                                    If IsDBNull(xmonto) Or xmonto Is Nothing Then
                                    Else
                                        If (xmonto) > xdetalle._ItemDetalleOrigen._TotalGeneral Then
                                            Throw New Exception("PRODUCTO HA EFECTUAR DEVOLUCION:" & vbCrLf & xdetalle.RegistroDato.c_NombreProducto.c_Texto & _
                                                                vbCrLf & "EL MONTO A DEVOLVER SUPERA EL IMPORTE TOTAL FACTURADO" & vbCrLf & _
                                                                "VERIFICA SI HAY UNA NOTA DE CREDITO YA REALIZADA A ESTE PRODUCTO")
                                        End If
                                    End If


                                    'CARGAR REGISTRO DE PRODUCTO A IMPRRIMIR EN IMP FISCAL
                                    Dim dr As DataRow = xtablaprd.NewRow
                                    dr("cantidad") = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
                                    dr("nombre") = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
                                    dr("descuento1p") = xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor
                                    dr("precio_neto") = xdetalle.RegistroDato.c_PrecioNeto.c_Valor
                                    dr("codigo_tasa") = xdetalle.RegistroDato._TipoTasaIva
                                    dr("detalle") = xdetalle.RegistroDato.c_DetalleNotas.c_Texto.Trim
                                    xtablaprd.Rows.Add(dr)

                                    'VERIFICO ESTATUS DEL PRODUCTO
                                    Dim xestatus As String = ""
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
                                    xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
                                    If xestatus <> "ACTIVO" Then
                                        Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
                                    End If
                                Next

                                'VERIFICO SI EL MONTO DE LA NC ES SUPERIOR AL MONTO ORIGINAL DEL DOCUMENTO DE FACTURA
                                Dim xval As Decimal = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "SELECT SUM(total) FROM VENTAS WHERE auto IN (select AUTO from ventas where aplica=@aplica AND estatus='0')"
                                xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato._DocumentoAplica)
                                xval = xcmd.ExecuteScalar()
                                If IsDBNull(xval) Then
                                Else
                                    If xval > xventa._FichaRegistroVentaOrigen._TotalGenereal Then
                                        Throw New Exception("ERROR... AL PROCESAR NOTA DE CREDITO" & vbCrLf & "MONTO SUPERA EL TOTAL DEL DOCUMENTO ORIGEN AL QUE AFECTA")
                                    End If
                                End If

                                'VENTAS_MEDIDAS
                                Dim x = From n In xlista_medidasventa _
                                        Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
                                        Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

                                Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
                                For Each xmed In x
                                    xmedida.M_LimpiarRegistro()

                                    With xmedida
                                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
                                        .c_AutoMedida.c_Texto = xmed._Auto
                                        .c_CantidadEmpaques.c_Valor = xmed.Sum
                                        .c_DecimalesEmpaque.c_Texto = xmed._Decimales
                                        .c_NombreEmpaque.c_Texto = xmed._Nombre
                                    End With

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
                                    xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
                                    xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
                                    xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
                                    xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
                                    xcmd.ExecuteNonQuery()
                                Next


                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                Dim xr_cliente As Integer = 0
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xr_cliente = xcmd.ExecuteNonQuery()
                                If xr_cliente = 0 Then
                                    Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
                                End If
                            End Using
                            xtr.Commit()
                            RaiseEvent FacturaExitosa()
                            RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)

                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
                            ElseIf xsql.Number = 547 Then
                                Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
                            Else
                                Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("ERROR AL GRABAR NOTA DE CREDITO:" + vbCrLf + ex.Message)
                End Try
            End Function

            Function ImprimeNotaCredito(ByVal xfiscal As IFiscal, ByVal xtablaprd As DataTable, ByVal xtotal As Single) As Boolean
                Try
                    xfiscal.NC_Encabezado()

                    For Each dr As DataRow In xtablaprd.Rows
                        xfiscal.LimpiarItem()
                        xfiscal.Prd_CantidadPrd = dr("cantidad")
                        xfiscal.Prd_DetallePrd = dr("nombre")
                        xfiscal.Prd_DsctoPrd = dr("descuento1p")
                        xfiscal.Prd_PNetoPrd = dr("precio_neto")
                        xfiscal.Prd_TasaIvaPrd = dr("codigo_tasa")
                        xfiscal.Prd_Nota1Prd = dr("detalle")
                        xfiscal.Prd_Codigo = dr("codigo")
                        xfiscal.NC_Detalle()
                    Next

                    xfiscal.MedioPago_1 = xtotal
                    'xfiscal.MedioPago_1 = 0

                    xfiscal.NC_Cerrar()
                    Return True
                Catch ex As Exception
                    Try
                        xfiscal.AbortarDF()
                    Catch ex2 As Exception
                    End Try
                    Throw New Exception("ERROR AL IMPRIMIR NOTA DE CREDITO FISCAL:" + vbCrLf + "MOTIVO:" + vbCrLf + ex.Message + vbCrLf)
                End Try
            End Function


            'Function F_GrabarRetencionIva(ByVal xretencion As V_RetencionesIva.AgregarRetencionIva, ByVal xretencion_detalle As List(Of V_RetencionesIvaDetalle.AgregarRetencionIvaDetalle)) As Boolean
            '    Dim xsql1 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
            '    Dim xsql2 As String = "update contadores set a_cxc_recibos=a_cxc_recibos+1; select a_cxc_recibos from contadores"
            '    Dim xsql3 As String = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1; select a_cxc_recibos_numero from contadores"

            '    Dim xsentencia As String = "update contadores set a_retencion_ventas=a_retencion_ventas+1; select a_retencion_ventas from contadores"
            '    Dim xautoretencion As String = ""
            '    Dim xtr As SqlTransaction = Nothing
            '    Dim xautodetalle As Integer = 0

            '    Dim xagregar_cxc As New FichaCtasCobrar.c_CxC.c_Registro
            '    Dim xagregar_cxc_documentos As New FichaCtasCobrar.c_Documentos
            '    Dim xagregar_cxc_recibos As New FichaCtasCobrar.c_Recibos
            '    Dim xagregar_cxc_modo_pago As New FichaCtasCobrar.c_ModosPago

            '    Try
            '        Using xcon As New SqlConnection(_MiCadenaConexion)
            '            xcon.Open()
            '            xtr = xcon.BeginTransaction
            '            Try
            '                Using xcmd As New SqlCommand("", xcon, xtr)
            '                    xcmd.CommandText = xsql1
            '                    xagregar_cxc.c_AutoCxC.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

            '                    xcmd.CommandText = xsql2
            '                    xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

            '                    xcmd.CommandText = xsql3
            '                    xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

            '                    'REGISTRAR LA CUENTA POR COBRAR
            '                    With xagregar_cxc
            '                        .c_AutoMovimientoEntrada.c_Texto = ""
            '                        .c_AutoDocumento.c_Texto = ""
            '                        .c_FechaProceso.c_Valor = xretencion.RegistroDato._FechaEmision
            '                        .c_FechaVencimiento.c_Valor = xretencion.RegistroDato._FechaEmision
            '                        .c_TipoDocumento.c_Texto = "PAG"
            '                        .c_NumeroDocumento.c_Texto = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto
            '                        .c_NotasDetalles.c_Texto = "Pago Con Planilla De Retencion Numero " + xretencion.RegistroDato.c_AnoRelacion.c_Texto _
            '                                                                                            + xretencion.RegistroDato.c_MesRelacion.c_Texto _
            '                                                                                            + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
            '                        .c_MontoImporte.c_Valor = xretencion.RegistroDato._Retencion._Valor
            '                        .c_MontoAcumulado.c_Valor = .c_MontoImporte.c_Valor
            '                        .c_AutoCliente.c_Texto = xretencion.RegistroDato.c_AutoCliente.c_Texto
            '                        .c_NombreCliente.c_Texto = xretencion.RegistroDato.c_NombreCliente.c_Texto
            '                        .c_CiRifCliente.c_Texto = xretencion.RegistroDato.c_CiRifCliente.c_Texto
            '                        .c_CodigoCliente.c_Texto = xretencion.RegistroDato.c_Codigocliente.c_Texto
            '                        .c_EstatusCancelado.c_Texto = ""
            '                        .c_MontoPorCobrar.c_Valor = 0
            '                        .c_EstatusDocumentoCxC.c_Texto = "0"
            '                        .c_TipoMovimiento.c_Valor = -1
            '                        .c_FechaEmision.c_Valor = xretencion.RegistroDato._FechaEmision
            '                    End With

            '                    'GRABAR CUENTA POR COBRAR'
            '                    xcmd.Parameters.Clear()
            '                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
            '                    xcmd.Parameters.AddWithValue("@auto", xagregar_cxc.c_AutoCxC.c_Texto).Size = xagregar_cxc.c_AutoCxC.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", xagregar_cxc.c_AutoMovimientoEntrada.c_Texto).Size = xagregar_cxc.c_AutoMovimientoEntrada.c_Largo
            '                    xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc.c_FechaProceso.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@tipo_documento", xagregar_cxc.c_TipoDocumento.c_Texto).Size = xagregar_cxc.c_TipoDocumento.c_Largo
            '                    xcmd.Parameters.AddWithValue("@documento", xagregar_cxc.c_NumeroDocumento.c_Texto).Size = xagregar_cxc.c_NumeroDocumento.c_Largo
            '                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xagregar_cxc.c_FechaVencimiento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc.c_NotasDetalles.c_Texto).Size = xagregar_cxc.c_NotasDetalles.c_Largo
            '                    xcmd.Parameters.AddWithValue("@importe", xagregar_cxc.c_MontoImporte.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@acumulado", xagregar_cxc.c_MontoAcumulado.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@auto_cliente", xagregar_cxc.c_AutoCliente.c_Texto).Size = xagregar_cxc.c_AutoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@cliente", xagregar_cxc.c_NombreCliente.c_Texto).Size = xagregar_cxc.c_NombreCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@ci_rif", xagregar_cxc.c_CiRifCliente.c_Texto).Size = xagregar_cxc.c_CiRifCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@codigo_cliente", xagregar_cxc.c_CodigoCliente.c_Texto).Size = xagregar_cxc.c_CodigoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@cancelado", xagregar_cxc.c_EstatusCancelado.c_Texto).Size = xagregar_cxc.c_EstatusCancelado.c_Largo
            '                    xcmd.Parameters.AddWithValue("@resta", xagregar_cxc.c_MontoPorCobrar.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@operacion", xagregar_cxc.c_TipoOperacion.c_Texto).Size = xagregar_cxc.c_TipoOperacion.c_Largo
            '                    xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc.c_EstatusDocumentoCxC.c_Texto).Size = xagregar_cxc.c_EstatusDocumentoCxC.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_documento", xagregar_cxc.c_AutoDocumento.c_Texto).Size = xagregar_cxc.c_AutoDocumento.c_Largo
            '                    xcmd.Parameters.AddWithValue("@numero", xagregar_cxc.c_Numero.c_Texto).Size = xagregar_cxc.c_Numero.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_agencia", xagregar_cxc.c_AutoAgencia.c_Texto).Size = xagregar_cxc.c_AutoAgencia.c_Largo
            '                    xcmd.Parameters.AddWithValue("@agencia", xagregar_cxc.c_NombreAgencia.c_Texto).Size = xagregar_cxc.c_NombreAgencia.c_Largo
            '                    xcmd.Parameters.AddWithValue("@signo", xagregar_cxc.c_TipoMovimiento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@fecha_emision", xagregar_cxc.c_FechaEmision.c_Valor)
            '                    xcmd.ExecuteNonQuery()

            '                    'REGISTRAR RECIBO'
            '                    With xagregar_cxc_recibos.RegistroDato
            '                        .c_FechaEmision.c_Valor = xretencion.RegistroDato._FechaEmision
            '                        .c_AutoUsuario.c_Texto = xretencion._AutoUsuario
            '                        .c_MontoImporte.c_Valor = xretencion.RegistroDato._Retencion._Valor
            '                        .c_NombreUsuario.c_Texto = xretencion._NombreUsuario
            '                        .c_NotasDetalles.c_Texto = "Recibo De Cobro De Planilla Numero " + xretencion.RegistroDato.c_AnoRelacion.c_Texto _
            '                                                                                         + xretencion.RegistroDato.c_MesRelacion.c_Texto _
            '                                                                                         + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
            '                        .c_AutoCobrador.c_Texto = xretencion._AutoCobrador
            '                        .c_NombreCobrador.c_Texto = xretencion._NombreCobrador
            '                        .c_AutoCliente.c_Texto = xretencion.RegistroDato._AutoCliente
            '                        .c_NombreCliente.c_Texto = xretencion.RegistroDato._NombreCliente
            '                        .c_CiRifCliente.c_Texto = xretencion.RegistroDato._CiRifCliente
            '                        .c_CodigoCliente.c_Texto = xretencion.RegistroDato._Codigocliente
            '                        .c_EstatusRecibo.c_Texto = "0"
            '                        .c_MontoImporteDocumento.c_Valor = ._MontoImporte
            '                        .c_MontoTotalDocumento.c_Valor = ._MontoImporte
            '                        .c_MontoAnticipo.c_Valor = 0
            '                        .c_CantidadDocumentosRelacionados.c_Valor = xretencion_detalle.Count
            '                        .c_CantNCPagadas.c_Valor = 0
            '                        .c_MontoNCPagadas.c_Valor = 0
            '                        .c_AutoCxcPago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
            '                    End With

            '                    'GRABAR RECIBO'
            '                    xcmd.Parameters.Clear()
            '                    xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
            '                    xcmd.Parameters.AddWithValue("@auto", xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Largo
            '                    xcmd.Parameters.AddWithValue("@numero", xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Largo
            '                    xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_recibos.RegistroDato.c_FechaEmision.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@auto_usuario", xagregar_cxc_recibos.RegistroDato.c_AutoUsuario.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoUsuario.c_Largo
            '                    xcmd.Parameters.AddWithValue("@importe", xagregar_cxc_recibos.RegistroDato.c_MontoImporte.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@usuario", xagregar_cxc_recibos.RegistroDato.c_NombreUsuario.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreUsuario.c_Largo
            '                    xcmd.Parameters.AddWithValue("@importe_documentos", xagregar_cxc_recibos.RegistroDato.c_MontoImporteDocumento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@descuentos", xagregar_cxc_recibos.RegistroDato.c_MontoDescuento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@total_documentos", xagregar_cxc_recibos.RegistroDato.c_MontoTotalDocumento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc_recibos.RegistroDato.c_NotasDetalles.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NotasDetalles.c_Largo
            '                    xcmd.Parameters.AddWithValue("@cobrador", xagregar_cxc_recibos.RegistroDato.c_NombreCobrador.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreCobrador.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_cliente", xagregar_cxc_recibos.RegistroDato.c_AutoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@nombre_cliente", xagregar_cxc_recibos.RegistroDato.c_NombreCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@ci_rif_cliente", xagregar_cxc_recibos.RegistroDato.c_CiRifCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_CiRifCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@codigo_cliente", xagregar_cxc_recibos.RegistroDato.c_CodigoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_CodigoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc_recibos.RegistroDato.c_EstatusRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_EstatusRecibo.c_Largo
            '                    xcmd.Parameters.AddWithValue("@direccion", xagregar_cxc_recibos.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_DirFiscalCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@telefono", xagregar_cxc_recibos.RegistroDato.c_TelefonoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_TelefonoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_cobrador", xagregar_cxc_recibos.RegistroDato.c_AutoCobrador.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoCobrador.c_Largo
            '                    xcmd.Parameters.AddWithValue("@anticipos", xagregar_cxc_recibos.RegistroDato.c_MontoAnticipo.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@cant_doc_rel", xagregar_cxc_recibos.RegistroDato.c_CantidadDocumentosRelacionados.c_Valor)
            '                    'campos nuevos
            '                    xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xagregar_cxc_recibos.RegistroDato.c_MontoNCPagadas.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xagregar_cxc_recibos.RegistroDato.c_CantNCPagadas.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@auto_cxc", xagregar_cxc_recibos.RegistroDato.c_AutoCxcPago.c_Texto)
            '                    xcmd.ExecuteNonQuery()


            '                    'ACTUALIZO CONTADOR AUTOMATICO DE RETENCIONES DE VENTAS
            '                    xcmd.Parameters.Clear()
            '                    xcmd.CommandText = xsentencia
            '                    xretencion.RegistroDato.c_Auto.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

            '                    'RETENCIONES VENTAS
            '                    xretencion.RegistroDato.c_AutoCxc_Pago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
            '                    xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Texto = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto
            '                    xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto = xretencion.RegistroDato.c_AnoRelacion.c_Texto _
            '                                                                              + xretencion.RegistroDato.c_MesRelacion.c_Texto _
            '                                                                              + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto

            '                    xcmd.Parameters.Clear()
            '                    xcmd.CommandText = FichaVentas.INSERT_RETENCIONESIVA_VENTAS
            '                    xcmd.Parameters.AddWithValue("@auto", xretencion.RegistroDato.c_Auto.c_Texto).Size = xretencion.RegistroDato.c_Auto.c_Largo
            '                    xcmd.Parameters.AddWithValue("@documento", xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto).Size = xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Largo
            '                    xcmd.Parameters.AddWithValue("@fecha", xretencion.RegistroDato.c_FechaEmision.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@nombre", xretencion.RegistroDato.c_NombreCliente.c_Texto).Size = xretencion.RegistroDato.c_NombreCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@dir_fiscal", xretencion.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xretencion.RegistroDato.c_DirFiscalCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@ci_rif", xretencion.RegistroDato.c_CiRifCliente.c_Texto).Size = xretencion.RegistroDato.c_CiRifCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@tipo", xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Texto).Size = xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Largo
            '                    xcmd.Parameters.AddWithValue("@exento", xretencion.RegistroDato.c_MontoExento.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@base", xretencion.RegistroDato.c_MontoBase.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@impuesto", xretencion.RegistroDato.c_MontoImpuesto.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@total", xretencion.RegistroDato.c_MontoTotalGeneral.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@tasa_retencion", xretencion.RegistroDato.c_TasaRetencion.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@retencion", xretencion.RegistroDato.c_MontoRetencion.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@auto_entidad", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@fecha_relacion", xretencion.RegistroDato.c_FechaRelacion.c_Valor)
            '                    xcmd.Parameters.AddWithValue("@codigo_entidad", xretencion.RegistroDato.c_Codigocliente.c_Texto).Size = xretencion.RegistroDato.c_Codigocliente.c_Largo
            '                    xcmd.Parameters.AddWithValue("@ano_relacion", xretencion.RegistroDato.c_AnoRelacion.c_Texto).Size = xretencion.RegistroDato.c_AnoRelacion.c_Largo
            '                    xcmd.Parameters.AddWithValue("@mes_relacion", xretencion.RegistroDato.c_MesRelacion.c_Texto).Size = xretencion.RegistroDato.c_MesRelacion.c_Largo

            '                    'Nuevos
            '                    xcmd.Parameters.AddWithValue("@auto_cxc", xretencion.RegistroDato.c_AutoCxc_Pago.c_Texto).Size = xretencion.RegistroDato.c_AutoCxc_Pago.c_Largo
            '                    xcmd.Parameters.AddWithValue("@auto_recibo_cxc", xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Texto).Size = xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Largo
            '                    xcmd.ExecuteNonQuery()

            '                    'RETENCIONES VENTAS DETALLE
            '                    Dim xitem As Integer = 0
            '                    Dim xsaldopendiente_antes_del_pago As Decimal = 0
            '                    For Each xdetalle In xretencion_detalle
            '                        xitem += 1

            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = FichaVentas.INSERT_RETENCIONESIVA_VENTAS_DETALLE
            '                        With xdetalle
            '                            .RegistroDato.c_Auto.c_Texto = xretencion.RegistroDato.c_Auto.c_Texto
            '                            .RegistroDato.c_FechaRetencion.c_Valor = xretencion.RegistroDato.c_FechaRelacion.c_Valor
            '                            .RegistroDato.c_TipoRetencion.c_Texto = xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Texto
            '                            .RegistroDato.c_ComprobanteRetencion.c_Texto = xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
            '                        End With
            '                        xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@documento", xdetalle.RegistroDato.c_NumeroDocumento.c_Texto).Size = xdetalle.RegistroDato.c_NumeroDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@exento", xdetalle.RegistroDato.c_MontoExento.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@base", xdetalle.RegistroDato.c_MontoBase.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoImpuesto.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_MontoTotal.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@tasa_retencion", xdetalle.RegistroDato.c_TasaRetencion.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@retencion", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@control", xdetalle.RegistroDato.c_NumeroControlFiscal.c_Texto).Size = xdetalle.RegistroDato.c_NumeroControlFiscal.c_Largo
            '                        xcmd.Parameters.AddWithValue("@aplica", xdetalle.RegistroDato.c_DocumentoAplica.c_Texto).Size = xdetalle.RegistroDato.c_DocumentoAplica.c_Largo
            '                        xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_Tasa.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_Auto.c_Texto).Size = xdetalle.RegistroDato.c_Auto.c_Largo
            '                        xcmd.Parameters.AddWithValue("@ci_rif", xdetalle.RegistroDato.c_CiRifCliente.c_Texto).Size = xdetalle.RegistroDato.c_CiRifCliente.c_Largo
            '                        xcmd.Parameters.AddWithValue("@comprobante", xdetalle.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xdetalle.RegistroDato.c_ComprobanteRetencion.c_Largo
            '                        xcmd.Parameters.AddWithValue("@tipo_retencion", xdetalle.RegistroDato.c_TipoRetencion.c_Texto).Size = xdetalle.RegistroDato.c_TipoRetencion.c_Largo
            '                        xcmd.Parameters.AddWithValue("@fecha_retencion", xdetalle.RegistroDato.c_FechaRetencion.c_Valor)
            '                        xcmd.ExecuteNonQuery()

            '                        'VERIFICO SI EL DOCUMENTO PARA DETERMINAR LO SIGUIENTE:
            '                        'ESTATUS DEL DOCUMENTO: ACTIVO
            '                        'OH SI YA TIENE UNA RETENCION HECHA
            '                        Dim dr As SqlDataReader
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "select estatus,comprobante_retencion from ventas where auto=@auto"
            '                        xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoDocumento.c_Texto)
            '                        dr = xcmd.ExecuteReader
            '                        Dim xerr As Boolean = False
            '                        While dr.Read
            '                            If dr(0).ToString.Trim = "1" Then
            '                                xerr = True
            '                            End If
            '                            If dr(1).ToString.Trim <> "" Then
            '                                xerr = True
            '                            End If
            '                        End While
            '                        dr.Close()
            '                        If xerr = True Then
            '                            Throw New Exception("ERROR EN DOCUMENTO A PROCESAR RETENCION: " & _
            '                                                xdetalle.RegistroDato.c_NumeroDocumento.c_Texto & vbCrLf & _
            '                                                "DOCUMENTO ANULADO / YA TIENE UNA RETENCION ASIGNADA")
            '                        End If

            '                        'ACTUALIZAR VENTAS
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "update ventas set tasa_retencion_iva=@tasa_retencion_iva, retencion_iva=@retencion_iva, comprobante_retencion=@comprobante_retencion where auto=@auto"
            '                        xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xdetalle.RegistroDato.c_TasaRetencion.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@retencion_iva", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@comprobante_retencion", xdetalle.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xdetalle.RegistroDato.c_ComprobanteRetencion.c_Largo
            '                        xcmd.ExecuteNonQuery()


            '                        'ACTUALIZAR CUENTAS POR COBRAR
            '                        Dim xr As Integer = 0
            '                        Dim xsigno As Integer = 1
            '                        Dim xauto As String = ""
            '                        Dim xtipo As String = ""

            '                        Select Case xdetalle.RegistroDato._TipoDocumento
            '                            Case TipoDocumentoVentaRegistrado.Factura
            '                                xtipo = "FACTURA"
            '                            Case TipoDocumentoVentaRegistrado.NotaDebito
            '                                xtipo = "NOTA DEBITO"
            '                            Case TipoDocumentoVentaRegistrado.NotaCredito
            '                                xtipo = "NOTA CREDITO"
            '                                xsigno = -1
            '                        End Select

            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "select auto from cxc where auto_documento=@auto_documento"
            '                        xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
            '                        xauto = xcmd.ExecuteScalar.ToString

            '                        xsaldopendiente_antes_del_pago = 0
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "select resta from cxc where auto_documento=@auto_documento"
            '                        xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
            '                        xsaldopendiente_antes_del_pago = xcmd.ExecuteScalar

            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "update cxc set acumulado=acumulado+@monto, resta=resta-@monto where auto=@auto and ABS(resta)>=ABS(@monto)"
            '                        xcmd.Parameters.AddWithValue("@auto", xauto)
            '                        xcmd.Parameters.AddWithValue("@monto", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
            '                        xr = xcmd.ExecuteNonQuery()
            '                        If xr = 0 Then
            '                            Throw New Exception("ERROR EL MONTO DE LA RETENCION ES MAYOR AL MONTO POR COBRAR DEL DOCUMENTO")
            '                        End If

            '                        Dim xrest As Decimal = 0
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = "select resta from cxc where auto=@auto"
            '                        xcmd.Parameters.AddWithValue("@auto", xauto)
            '                        xrest = xcmd.ExecuteScalar
            '                        If IsNothing(xrest) Or IsDBNull(xrest) Then
            '                            Throw New Exception("ERROR AL ACTUALIZAR EL ESTATUS DE CANCELADO DE LA CXC" + vbCrLf + "AUTO DE LA CXC NO ENCONTRADO")
            '                        End If

            '                        If xrest = 0 Then
            '                            xr = 0
            '                            xcmd.Parameters.Clear()
            '                            xcmd.CommandText = "update CxC set cancelado='1' where auto=@auto"
            '                            xcmd.Parameters.AddWithValue("@auto", xauto)
            '                            xr = xcmd.ExecuteNonQuery()
            '                            If xr = 0 Then
            '                                Throw New Exception("ERROR AL ACTUALIZAR EL ESTATUS DE CANCELADO DE LA CXC" + vbCrLf + "AUTO DE LA CXC NO ENCONTRADO")
            '                            End If
            '                        End If

            '                        'REGISTRAR DOCUMENTO
            '                        With xagregar_cxc_documentos.RegistroDato
            '                            .c_AutoCxC.c_Texto = xauto
            '                            .c_AutoCxCPago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
            '                            .c_AutoCxCRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto
            '                            .c_NumeroRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto
            '                            .c_TipoDocumento.c_Texto = "PAG"
            '                            .c_OrigenDocumento.c_Texto = xtipo
            '                            .c_Item.c_Valor = xitem
            '                            .c_FechaEmision.c_Valor = xdetalle.RegistroDato._FechaEmision
            '                            .c_NumeroDocumento.c_Texto = xdetalle.RegistroDato._NumeroDocumento
            '                            .c_TipoOperacion.c_Texto = "Abono"
            '                            .c_Monto.c_Valor = xdetalle.RegistroDato._Retencion._Valor
            '                            .c_NotasDetalles.c_Texto = "Abono Con Planilla Numero " + xretencion.RegistroDato._NumeroPlanilla
            '                            .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
            '                            .c_SignoDocumento.c_Valor = 1
            '                        End With

            '                        'GRABAR DOCUMENTO'
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
            '                        xcmd.Parameters.AddWithValue("@item", xagregar_cxc_documentos.RegistroDato.c_Item.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@operacion", xagregar_cxc_documentos.RegistroDato.c_TipoOperacion.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_TipoOperacion.c_Largo
            '                        xcmd.Parameters.AddWithValue("@monto", xagregar_cxc_documentos.RegistroDato.c_Monto.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@auto_cxc", xagregar_cxc_documentos.RegistroDato.c_AutoCxC.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxC.c_Largo
            '                        xcmd.Parameters.AddWithValue("@documento", xagregar_cxc_documentos.RegistroDato.c_NumeroDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NumeroDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@auto_cxc_pago", xagregar_cxc_documentos.RegistroDato.c_AutoCxCPago.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxCPago.c_Largo
            '                        xcmd.Parameters.AddWithValue("@tipo", xagregar_cxc_documentos.RegistroDato.c_TipoDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_TipoDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_documentos.RegistroDato.c_FechaEmision.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc_documentos.RegistroDato.c_NotasDetalles.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NotasDetalles.c_Largo
            '                        xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xagregar_cxc_documentos.RegistroDato.c_AutoCxCRecibo.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxCRecibo.c_Largo
            '                        xcmd.Parameters.AddWithValue("@numero_recibo", xagregar_cxc_documentos.RegistroDato.c_NumeroRecibo.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NumeroRecibo.c_Largo
            '                        xcmd.Parameters.AddWithValue("@origen", xagregar_cxc_documentos.RegistroDato.c_OrigenDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_OrigenDocumento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@monto_pendiente", xagregar_cxc_documentos.RegistroDato.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
            '                        'campos nuevo
            '                        xcmd.Parameters.AddWithValue("@signo", xagregar_cxc_documentos.RegistroDato.c_SignoDocumento.c_Valor)
            '                        xcmd.ExecuteNonQuery()

            '                        'REGISTRAR MODO PAGO
            '                        With xagregar_cxc_modo_pago.RegistroDato
            '                            .c_Numero.c_Texto = ""
            '                            .c_NombreAgencia.c_Texto = ""
            '                            .c_MontoImporte.c_Valor = xdetalle.RegistroDato._Retencion._Valor
            '                            .c_CodigoTipoPago.c_Texto = "RV"
            '                            .c_AutoRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto
            '                            .c_NombreTipoPago.c_Texto = "PL RET VENTA IVA"
            '                            .c_AutoTipoPago.c_Texto = "RVI0000001"
            '                            .c_AutoAgencia.c_Texto = ""
            '                            .c_FechaEmision.c_Valor = xdetalle.RegistroDato._FechaEmision
            '                            .c_EstatusMovimiento.c_Texto = "0"
            '                            .c_MontoRecibido.c_Valor = ._MontoImporte
            '                        End With

            '                        'GRABAR MODO DE PAGO'
            '                        xcmd.Parameters.Clear()
            '                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
            '                        xcmd.Parameters.AddWithValue("@numero", xagregar_cxc_modo_pago.RegistroDato.c_Numero.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_Numero.c_Largo
            '                        xcmd.Parameters.AddWithValue("@agencia", xagregar_cxc_modo_pago.RegistroDato.c_NombreAgencia.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_NombreAgencia.c_Largo
            '                        xcmd.Parameters.AddWithValue("@importe", xagregar_cxc_modo_pago.RegistroDato.c_MontoImporte.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@codigo", xagregar_cxc_modo_pago.RegistroDato.c_CodigoTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_CodigoTipoPago.c_Largo
            '                        xcmd.Parameters.AddWithValue("@auto_recibo", xagregar_cxc_modo_pago.RegistroDato.c_AutoRecibo.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoRecibo.c_Largo
            '                        xcmd.Parameters.AddWithValue("@nombre", xagregar_cxc_modo_pago.RegistroDato.c_NombreTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_NombreTipoPago.c_Largo
            '                        xcmd.Parameters.AddWithValue("@auto_medios_pago", xagregar_cxc_modo_pago.RegistroDato.c_AutoTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoTipoPago.c_Largo
            '                        xcmd.Parameters.AddWithValue("@auto_agencia", xagregar_cxc_modo_pago.RegistroDato.c_AutoAgencia.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoAgencia.c_Largo
            '                        xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_modo_pago.RegistroDato.c_FechaEmision.c_Valor)
            '                        xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc_modo_pago.RegistroDato.c_EstatusMovimiento.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_EstatusMovimiento.c_Largo
            '                        xcmd.Parameters.AddWithValue("@monto_recibido", xagregar_cxc_modo_pago.RegistroDato.c_MontoRecibido.c_Valor)
            '                        xcmd.ExecuteNonQuery()
            '                    Next

            '                    Dim t_debito As Single = 0
            '                    Dim t_credito As Single = 0
            '                    Dim t_saldo As Single = 0

            '                    'BUSCA LOS SALDOS PARA EL CLIENTE
            '                    xcmd.Parameters.Clear()
            '                    xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
            '                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
            '                    t_debito = xcmd.ExecuteScalar()

            '                    xcmd.Parameters.Clear()
            '                    xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
            '                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
            '                    t_credito = xcmd.ExecuteScalar()

            '                    xcmd.Parameters.Clear()
            '                    xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
            '                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
            '                    t_saldo = xcmd.ExecuteScalar()

            '                    'CLIENTES
            '                    xcmd.Parameters.Clear()
            '                    xcmd.CommandText = "UPDATE CLIENTES SET " _
            '                      + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
            '                      + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
            '                      + "where auto=@auto"
            '                    xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
            '                    xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
            '                    xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
            '                    xcmd.Parameters.AddWithValue("@auto", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
            '                    xcmd.ExecuteNonQuery()

            '                    xtr.Commit()
            '                End Using
            '                Return True
            '            Catch xsql As SqlException
            '                xtr.Rollback()
            '                If xsql.Number = 2601 Then
            '                    Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO DE RETENCION CON EL MISMO NUMERO DE PLANILLA ASIGNADA")
            '                Else
            '                    Throw New Exception(xsql.Message)
            '                End If
            '            Catch ex As Exception
            '                xtr.Rollback()
            '                Throw New Exception(ex.Message)
            '            End Try
            '        End Using
            '    Catch ex As Exception
            '        Throw New Exception("RETENCION VENTAS IVA" + vbCrLf + "ERROR AL GRABAR RETENCION VENTAS IVA:" + vbCrLf + ex.Message)
            '    End Try
            'End Function


            ''' <summary>
            ''' Funcion: Permite Grabar Retencion Ventas Tipo Iva
            ''' </summary>
            ''' <param name="xretencion"></param>
            ''' Clase Tipo Encabezado Retencion
            ''' <param name="xretencion_detalle"></param>
            ''' Clase Tipo Detalle Retencion
            ''' <returns></returns>
            Function F_GrabarRetencionIva(ByVal xretencion As V_RetencionesIva.AgregarRetencionIva, ByVal xretencion_detalle As List(Of V_RetencionesIvaDetalle.AgregarRetencionIvaDetalle)) As Boolean
                Dim xsql1 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
                Dim xsql2 As String = "update contadores set a_cxc_recibos=a_cxc_recibos+1; select a_cxc_recibos from contadores"
                Dim xsql3 As String = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1; select a_cxc_recibos_numero from contadores"

                Dim xsentencia As String = "update contadores set a_retencion_ventas=a_retencion_ventas+1; select a_retencion_ventas from contadores"
                Dim xautoretencion As String = ""
                Dim xtr As SqlTransaction = Nothing
                Dim xautodetalle As Integer = 0

                Dim xagregar_cxc As New FichaCtasCobrar.c_CxC.c_Registro
                Dim xagregar_cxc_documentos As New FichaCtasCobrar.c_Documentos
                Dim xagregar_cxc_recibos As New FichaCtasCobrar.c_Recibos
                Dim xagregar_cxc_modo_pago As New FichaCtasCobrar.c_ModosPago

                Try
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                xcmd.CommandText = xsql1
                                xagregar_cxc.c_AutoCxC.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

                                xcmd.CommandText = xsql2
                                xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

                                xcmd.CommandText = xsql3
                                xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto = xcmd.ExecuteScalar().ToString().Trim.PadLeft(10, "0")

                                'REGISTRAR LA CUENTA POR COBRAR
                                With xagregar_cxc
                                    .c_AutoMovimientoEntrada.c_Texto = ""
                                    .c_AutoDocumento.c_Texto = ""
                                    .c_FechaProceso.c_Valor = xretencion.RegistroDato._FechaEmision
                                    .c_FechaVencimiento.c_Valor = xretencion.RegistroDato._FechaEmision
                                    .c_TipoDocumento.c_Texto = "NCF"
                                    .c_NumeroDocumento.c_Texto = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto
                                    .c_NotasDetalles.c_Texto = "Pago Con Planilla De Retencion Numero " + xretencion.RegistroDato.c_AnoRelacion.c_Texto _
                                                                                                        + xretencion.RegistroDato.c_MesRelacion.c_Texto _
                                                                                                        + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
                                    .c_MontoImporte.c_Valor = -1 * xretencion.RegistroDato._Retencion._Valor
                                    .c_MontoAcumulado.c_Valor = 0
                                    .c_AutoCliente.c_Texto = xretencion.RegistroDato.c_AutoCliente.c_Texto
                                    .c_NombreCliente.c_Texto = xretencion.RegistroDato.c_NombreCliente.c_Texto
                                    .c_CiRifCliente.c_Texto = xretencion.RegistroDato.c_CiRifCliente.c_Texto
                                    .c_CodigoCliente.c_Texto = xretencion.RegistroDato.c_Codigocliente.c_Texto
                                    .c_EstatusCancelado.c_Texto = "0"
                                    .c_MontoPorCobrar.c_Valor = -1 * xretencion.RegistroDato._Retencion._Valor
                                    .c_EstatusDocumentoCxC.c_Texto = "0"
                                    .c_TipoMovimiento.c_Valor = -1
                                    .c_FechaEmision.c_Valor = xretencion.RegistroDato._FechaEmision
                                End With

                                'GRABAR CUENTA POR COBRAR'
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
                                xcmd.Parameters.AddWithValue("@auto", xagregar_cxc.c_AutoCxC.c_Texto).Size = xagregar_cxc.c_AutoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_mov_entrada", xagregar_cxc.c_AutoMovimientoEntrada.c_Texto).Size = xagregar_cxc.c_AutoMovimientoEntrada.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc.c_FechaProceso.c_Valor)
                                xcmd.Parameters.AddWithValue("@tipo_documento", xagregar_cxc.c_TipoDocumento.c_Texto).Size = xagregar_cxc.c_TipoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xagregar_cxc.c_NumeroDocumento.c_Texto).Size = xagregar_cxc.c_NumeroDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_vencimiento", xagregar_cxc.c_FechaVencimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc.c_NotasDetalles.c_Texto).Size = xagregar_cxc.c_NotasDetalles.c_Largo
                                xcmd.Parameters.AddWithValue("@importe", xagregar_cxc.c_MontoImporte.c_Valor)
                                xcmd.Parameters.AddWithValue("@acumulado", xagregar_cxc.c_MontoAcumulado.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_cliente", xagregar_cxc.c_AutoCliente.c_Texto).Size = xagregar_cxc.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cliente", xagregar_cxc.c_NombreCliente.c_Texto).Size = xagregar_cxc.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xagregar_cxc.c_CiRifCliente.c_Texto).Size = xagregar_cxc.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_cliente", xagregar_cxc.c_CodigoCliente.c_Texto).Size = xagregar_cxc.c_CodigoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@cancelado", xagregar_cxc.c_EstatusCancelado.c_Texto).Size = xagregar_cxc.c_EstatusCancelado.c_Largo
                                xcmd.Parameters.AddWithValue("@resta", xagregar_cxc.c_MontoPorCobrar.c_Valor)
                                xcmd.Parameters.AddWithValue("@operacion", xagregar_cxc.c_TipoOperacion.c_Texto).Size = xagregar_cxc.c_TipoOperacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc.c_EstatusDocumentoCxC.c_Texto).Size = xagregar_cxc.c_EstatusDocumentoCxC.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xagregar_cxc.c_AutoDocumento.c_Texto).Size = xagregar_cxc.c_AutoDocumento.c_Largo
                                xcmd.Parameters.AddWithValue("@numero", xagregar_cxc.c_Numero.c_Texto).Size = xagregar_cxc.c_Numero.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_agencia", xagregar_cxc.c_AutoAgencia.c_Texto).Size = xagregar_cxc.c_AutoAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@agencia", xagregar_cxc.c_NombreAgencia.c_Texto).Size = xagregar_cxc.c_NombreAgencia.c_Largo
                                xcmd.Parameters.AddWithValue("@signo", xagregar_cxc.c_TipoMovimiento.c_Valor)
                                xcmd.Parameters.AddWithValue("@fecha_emision", xagregar_cxc.c_FechaEmision.c_Valor)
                                xcmd.ExecuteNonQuery()

                                ''REGISTRAR RECIBO'
                                'With xagregar_cxc_recibos.RegistroDato
                                '    .c_FechaEmision.c_Valor = xretencion.RegistroDato._FechaEmision
                                '    .c_AutoUsuario.c_Texto = xretencion._AutoUsuario
                                '    .c_MontoImporte.c_Valor = xretencion.RegistroDato._Retencion._Valor
                                '    .c_NombreUsuario.c_Texto = xretencion._NombreUsuario
                                '    .c_NotasDetalles.c_Texto = "Recibo De Cobro De Planilla Numero " + xretencion.RegistroDato.c_AnoRelacion.c_Texto _
                                '                                                                     + xretencion.RegistroDato.c_MesRelacion.c_Texto _
                                '                                                                     + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
                                '    .c_AutoCobrador.c_Texto = xretencion._AutoCobrador
                                '    .c_NombreCobrador.c_Texto = xretencion._NombreCobrador
                                '    .c_AutoCliente.c_Texto = xretencion.RegistroDato._AutoCliente
                                '    .c_NombreCliente.c_Texto = xretencion.RegistroDato._NombreCliente
                                '    .c_CiRifCliente.c_Texto = xretencion.RegistroDato._CiRifCliente
                                '    .c_CodigoCliente.c_Texto = xretencion.RegistroDato._Codigocliente
                                '    .c_EstatusRecibo.c_Texto = "0"
                                '    .c_MontoImporteDocumento.c_Valor = ._MontoImporte
                                '    .c_MontoTotalDocumento.c_Valor = ._MontoImporte
                                '    .c_MontoAnticipo.c_Valor = 0
                                '    .c_CantidadDocumentosRelacionados.c_Valor = xretencion_detalle.Count
                                '    .c_CantNCPagadas.c_Valor = 0
                                '    .c_MontoNCPagadas.c_Valor = 0
                                '    .c_AutoCxcPago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
                                'End With

                                ''GRABAR RECIBO'
                                'xcmd.Parameters.Clear()
                                'xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
                                'xcmd.Parameters.AddWithValue("@auto", xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Largo
                                'xcmd.Parameters.AddWithValue("@numero", xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Largo
                                'xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_recibos.RegistroDato.c_FechaEmision.c_Valor)
                                'xcmd.Parameters.AddWithValue("@auto_usuario", xagregar_cxc_recibos.RegistroDato.c_AutoUsuario.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoUsuario.c_Largo
                                'xcmd.Parameters.AddWithValue("@importe", xagregar_cxc_recibos.RegistroDato.c_MontoImporte.c_Valor)
                                'xcmd.Parameters.AddWithValue("@usuario", xagregar_cxc_recibos.RegistroDato.c_NombreUsuario.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreUsuario.c_Largo
                                'xcmd.Parameters.AddWithValue("@importe_documentos", xagregar_cxc_recibos.RegistroDato.c_MontoImporteDocumento.c_Valor)
                                'xcmd.Parameters.AddWithValue("@descuentos", xagregar_cxc_recibos.RegistroDato.c_MontoDescuento.c_Valor)
                                'xcmd.Parameters.AddWithValue("@total_documentos", xagregar_cxc_recibos.RegistroDato.c_MontoTotalDocumento.c_Valor)
                                'xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc_recibos.RegistroDato.c_NotasDetalles.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NotasDetalles.c_Largo
                                'xcmd.Parameters.AddWithValue("@cobrador", xagregar_cxc_recibos.RegistroDato.c_NombreCobrador.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreCobrador.c_Largo
                                'xcmd.Parameters.AddWithValue("@auto_cliente", xagregar_cxc_recibos.RegistroDato.c_AutoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@nombre_cliente", xagregar_cxc_recibos.RegistroDato.c_NombreCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_NombreCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@ci_rif_cliente", xagregar_cxc_recibos.RegistroDato.c_CiRifCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_CiRifCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@codigo_cliente", xagregar_cxc_recibos.RegistroDato.c_CodigoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_CodigoCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc_recibos.RegistroDato.c_EstatusRecibo.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_EstatusRecibo.c_Largo
                                'xcmd.Parameters.AddWithValue("@direccion", xagregar_cxc_recibos.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_DirFiscalCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@telefono", xagregar_cxc_recibos.RegistroDato.c_TelefonoCliente.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_TelefonoCliente.c_Largo
                                'xcmd.Parameters.AddWithValue("@auto_cobrador", xagregar_cxc_recibos.RegistroDato.c_AutoCobrador.c_Texto).Size = xagregar_cxc_recibos.RegistroDato.c_AutoCobrador.c_Largo
                                'xcmd.Parameters.AddWithValue("@anticipos", xagregar_cxc_recibos.RegistroDato.c_MontoAnticipo.c_Valor)
                                'xcmd.Parameters.AddWithValue("@cant_doc_rel", xagregar_cxc_recibos.RegistroDato.c_CantidadDocumentosRelacionados.c_Valor)
                                ''campos nuevos
                                'xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xagregar_cxc_recibos.RegistroDato.c_MontoNCPagadas.c_Valor)
                                'xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xagregar_cxc_recibos.RegistroDato.c_CantNCPagadas.c_Valor)
                                'xcmd.Parameters.AddWithValue("@auto_cxc", xagregar_cxc_recibos.RegistroDato.c_AutoCxcPago.c_Texto)
                                'xcmd.ExecuteNonQuery()


                                'ACTUALIZO CONTADOR AUTOMATICO DE RETENCIONES DE VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsentencia
                                xretencion.RegistroDato.c_Auto.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'RETENCIONES VENTAS
                                xretencion.RegistroDato.c_AutoCxc_Pago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
                                xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Texto = ""
                                xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto = xretencion.RegistroDato.c_AnoRelacion.c_Texto _
                                                                                          + xretencion.RegistroDato.c_MesRelacion.c_Texto _
                                                                                          + xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaVentas.INSERT_RETENCIONESIVA_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xretencion.RegistroDato.c_Auto.c_Texto).Size = xretencion.RegistroDato.c_Auto.c_Largo
                                xcmd.Parameters.AddWithValue("@documento", xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto).Size = xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xretencion.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@nombre", xretencion.RegistroDato.c_NombreCliente.c_Texto).Size = xretencion.RegistroDato.c_NombreCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@dir_fiscal", xretencion.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xretencion.RegistroDato.c_DirFiscalCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ci_rif", xretencion.RegistroDato.c_CiRifCliente.c_Texto).Size = xretencion.RegistroDato.c_CiRifCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@tipo", xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Texto).Size = xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Largo
                                xcmd.Parameters.AddWithValue("@exento", xretencion.RegistroDato.c_MontoExento.c_Valor)
                                xcmd.Parameters.AddWithValue("@base", xretencion.RegistroDato.c_MontoBase.c_Valor)
                                xcmd.Parameters.AddWithValue("@impuesto", xretencion.RegistroDato.c_MontoImpuesto.c_Valor)
                                xcmd.Parameters.AddWithValue("@total", xretencion.RegistroDato.c_MontoTotalGeneral.c_Valor)
                                xcmd.Parameters.AddWithValue("@tasa_retencion", xretencion.RegistroDato.c_TasaRetencion.c_Valor)
                                xcmd.Parameters.AddWithValue("@retencion", xretencion.RegistroDato.c_MontoRetencion.c_Valor)
                                xcmd.Parameters.AddWithValue("@auto_entidad", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha_relacion", xretencion.RegistroDato.c_FechaRelacion.c_Valor)
                                xcmd.Parameters.AddWithValue("@codigo_entidad", xretencion.RegistroDato.c_Codigocliente.c_Texto).Size = xretencion.RegistroDato.c_Codigocliente.c_Largo
                                xcmd.Parameters.AddWithValue("@ano_relacion", xretencion.RegistroDato.c_AnoRelacion.c_Texto).Size = xretencion.RegistroDato.c_AnoRelacion.c_Largo
                                xcmd.Parameters.AddWithValue("@mes_relacion", xretencion.RegistroDato.c_MesRelacion.c_Texto).Size = xretencion.RegistroDato.c_MesRelacion.c_Largo

                                'Nuevos
                                xcmd.Parameters.AddWithValue("@auto_cxc", xretencion.RegistroDato.c_AutoCxc_Pago.c_Texto).Size = xretencion.RegistroDato.c_AutoCxc_Pago.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_recibo_cxc", xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Texto).Size = xretencion.RegistroDato.c_AutoReciboCxC_Pago.c_Largo
                                xcmd.ExecuteNonQuery()

                                'RETENCIONES VENTAS DETALLE
                                Dim xitem As Integer = 0
                                Dim xsaldopendiente_antes_del_pago As Decimal = 0
                                For Each xdetalle In xretencion_detalle
                                    xitem += 1

                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = FichaVentas.INSERT_RETENCIONESIVA_VENTAS_DETALLE
                                    With xdetalle
                                        .RegistroDato.c_Auto.c_Texto = xretencion.RegistroDato.c_Auto.c_Texto
                                        .RegistroDato.c_FechaRetencion.c_Valor = xretencion.RegistroDato.c_FechaRelacion.c_Valor
                                        .RegistroDato.c_TipoRetencion.c_Texto = xretencion.RegistroDato.c_TipoDocumentoRetencion.c_Texto
                                        .RegistroDato.c_ComprobanteRetencion.c_Texto = xretencion.RegistroDato.c_NumeroPlanillaRetencion.c_Texto
                                    End With
                                    xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@documento", xdetalle.RegistroDato.c_NumeroDocumento.c_Texto).Size = xdetalle.RegistroDato.c_NumeroDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
                                    xcmd.Parameters.AddWithValue("@exento", xdetalle.RegistroDato.c_MontoExento.c_Valor)
                                    xcmd.Parameters.AddWithValue("@base", xdetalle.RegistroDato.c_MontoBase.c_Valor)
                                    xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoImpuesto.c_Valor)
                                    xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_MontoTotal.c_Valor)
                                    xcmd.Parameters.AddWithValue("@tasa_retencion", xdetalle.RegistroDato.c_TasaRetencion.c_Valor)
                                    xcmd.Parameters.AddWithValue("@retencion", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
                                    xcmd.Parameters.AddWithValue("@control", xdetalle.RegistroDato.c_NumeroControlFiscal.c_Texto).Size = xdetalle.RegistroDato.c_NumeroControlFiscal.c_Largo
                                    xcmd.Parameters.AddWithValue("@aplica", xdetalle.RegistroDato.c_DocumentoAplica.c_Texto).Size = xdetalle.RegistroDato.c_DocumentoAplica.c_Largo
                                    xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_Tasa.c_Valor)
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_Auto.c_Texto).Size = xdetalle.RegistroDato.c_Auto.c_Largo
                                    xcmd.Parameters.AddWithValue("@ci_rif", xdetalle.RegistroDato.c_CiRifCliente.c_Texto).Size = xdetalle.RegistroDato.c_CiRifCliente.c_Largo
                                    xcmd.Parameters.AddWithValue("@comprobante", xdetalle.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xdetalle.RegistroDato.c_ComprobanteRetencion.c_Largo
                                    xcmd.Parameters.AddWithValue("@tipo_retencion", xdetalle.RegistroDato.c_TipoRetencion.c_Texto).Size = xdetalle.RegistroDato.c_TipoRetencion.c_Largo
                                    xcmd.Parameters.AddWithValue("@fecha_retencion", xdetalle.RegistroDato.c_FechaRetencion.c_Valor)
                                    If xcmd.ExecuteNonQuery() = 0 Then
                                        Throw New Exception("PROBLEMA AL GRABAR RETENCION DETALLE FACTURA:" + xdetalle.RegistroDato._DocumentoAplica)
                                    End If

                                    'VERIFICO SI EL DOCUMENTO PARA DETERMINAR LO SIGUIENTE:
                                    'ESTATUS DEL DOCUMENTO: ACTIVO
                                    'OH SI YA TIENE UNA RETENCION HECHA
                                    Dim dr As SqlDataReader
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select estatus,comprobante_retencion from ventas where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoDocumento.c_Texto)
                                    dr = xcmd.ExecuteReader
                                    Dim xerr As Boolean = False
                                    While dr.Read
                                        If dr(0).ToString.Trim = "1" Then
                                            xerr = True
                                        End If
                                        If dr(1).ToString.Trim <> "" Then
                                            xerr = True
                                        End If
                                    End While
                                    dr.Close()
                                    If xerr = True Then
                                        Throw New Exception("ERROR EN DOCUMENTO A PROCESAR RETENCION: " & _
                                                            xdetalle.RegistroDato.c_NumeroDocumento.c_Texto & vbCrLf & _
                                                            "DOCUMENTO ANULADO / YA TIENE UNA RETENCION ASIGNADA")
                                    End If

                                    'ACTUALIZAR VENTAS
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "update ventas set tasa_retencion_iva=@tasa_retencion_iva, retencion_iva=@retencion_iva, comprobante_retencion=@comprobante_retencion where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xdetalle.RegistroDato.c_TasaRetencion.c_Valor)
                                    xcmd.Parameters.AddWithValue("@retencion_iva", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
                                    xcmd.Parameters.AddWithValue("@comprobante_retencion", xdetalle.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xdetalle.RegistroDato.c_ComprobanteRetencion.c_Largo
                                    xcmd.ExecuteNonQuery()


                                    ''ACTUALIZAR CUENTAS POR COBRAR
                                    'Dim xr As Integer = 0
                                    'Dim xsigno As Integer = 1
                                    'Dim xauto As String = ""
                                    'Dim xtipo As String = ""

                                    'Select Case xdetalle.RegistroDato._TipoDocumento
                                    '    Case TipoDocumentoVentaRegistrado.Factura
                                    '        xtipo = "FACTURA"
                                    '    Case TipoDocumentoVentaRegistrado.NotaDebito
                                    '        xtipo = "NOTA DEBITO"
                                    '    Case TipoDocumentoVentaRegistrado.NotaCredito
                                    '        xtipo = "NOTA CREDITO"
                                    '        xsigno = -1
                                    'End Select

                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = "select auto from cxc where auto_documento=@auto_documento"
                                    'xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    'xauto = xcmd.ExecuteScalar.ToString

                                    'xsaldopendiente_antes_del_pago = 0
                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = "select resta from cxc where auto_documento=@auto_documento"
                                    'xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
                                    'xsaldopendiente_antes_del_pago = xcmd.ExecuteScalar

                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = "update cxc set acumulado=acumulado+@monto, resta=resta-@monto where auto=@auto and ABS(resta)>=ABS(@monto)"
                                    'xcmd.Parameters.AddWithValue("@auto", xauto)
                                    'xcmd.Parameters.AddWithValue("@monto", xdetalle.RegistroDato.c_MontoRetencion.c_Valor)
                                    'xr = xcmd.ExecuteNonQuery()
                                    'If xr = 0 Then
                                    '    Throw New Exception("ERROR EL MONTO DE LA RETENCION ES MAYOR AL MONTO POR COBRAR DEL DOCUMENTO")
                                    'End If

                                    'Dim xrest As Decimal = 0
                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = "select resta from cxc where auto=@auto"
                                    'xcmd.Parameters.AddWithValue("@auto", xauto)
                                    'xrest = xcmd.ExecuteScalar
                                    'If IsNothing(xrest) Or IsDBNull(xrest) Then
                                    '    Throw New Exception("ERROR AL ACTUALIZAR EL ESTATUS DE CANCELADO DE LA CXC" + vbCrLf + "AUTO DE LA CXC NO ENCONTRADO")
                                    'End If

                                    'If xrest = 0 Then
                                    '    xr = 0
                                    '    xcmd.Parameters.Clear()
                                    '    xcmd.CommandText = "update CxC set cancelado='1' where auto=@auto"
                                    '    xcmd.Parameters.AddWithValue("@auto", xauto)
                                    '    xr = xcmd.ExecuteNonQuery()
                                    '    If xr = 0 Then
                                    '        Throw New Exception("ERROR AL ACTUALIZAR EL ESTATUS DE CANCELADO DE LA CXC" + vbCrLf + "AUTO DE LA CXC NO ENCONTRADO")
                                    '    End If
                                    'End If

                                    ''REGISTRAR DOCUMENTO
                                    'With xagregar_cxc_documentos.RegistroDato
                                    '    .c_AutoCxC.c_Texto = xauto
                                    '    .c_AutoCxCPago.c_Texto = xagregar_cxc.c_AutoCxC.c_Texto
                                    '    .c_AutoCxCRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto
                                    '    .c_NumeroRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_NumeroRecibo.c_Texto
                                    '    .c_TipoDocumento.c_Texto = "PAG"
                                    '    .c_OrigenDocumento.c_Texto = xtipo
                                    '    .c_Item.c_Valor = xitem
                                    '    .c_FechaEmision.c_Valor = xdetalle.RegistroDato._FechaEmision
                                    '    .c_NumeroDocumento.c_Texto = xdetalle.RegistroDato._NumeroDocumento
                                    '    .c_TipoOperacion.c_Texto = "Abono"
                                    '    .c_Monto.c_Valor = xdetalle.RegistroDato._Retencion._Valor
                                    '    .c_NotasDetalles.c_Texto = "Abono Con Planilla Numero " + xretencion.RegistroDato._NumeroPlanilla
                                    '    .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
                                    '    .c_SignoDocumento.c_Valor = 1
                                    'End With

                                    ''GRABAR DOCUMENTO'
                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
                                    'xcmd.Parameters.AddWithValue("@item", xagregar_cxc_documentos.RegistroDato.c_Item.c_Valor)
                                    'xcmd.Parameters.AddWithValue("@operacion", xagregar_cxc_documentos.RegistroDato.c_TipoOperacion.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_TipoOperacion.c_Largo
                                    'xcmd.Parameters.AddWithValue("@monto", xagregar_cxc_documentos.RegistroDato.c_Monto.c_Valor)
                                    'xcmd.Parameters.AddWithValue("@auto_cxc", xagregar_cxc_documentos.RegistroDato.c_AutoCxC.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxC.c_Largo
                                    'xcmd.Parameters.AddWithValue("@documento", xagregar_cxc_documentos.RegistroDato.c_NumeroDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NumeroDocumento.c_Largo
                                    'xcmd.Parameters.AddWithValue("@auto_cxc_pago", xagregar_cxc_documentos.RegistroDato.c_AutoCxCPago.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxCPago.c_Largo
                                    'xcmd.Parameters.AddWithValue("@tipo", xagregar_cxc_documentos.RegistroDato.c_TipoDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_TipoDocumento.c_Largo
                                    'xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_documentos.RegistroDato.c_FechaEmision.c_Valor)
                                    'xcmd.Parameters.AddWithValue("@detalle", xagregar_cxc_documentos.RegistroDato.c_NotasDetalles.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NotasDetalles.c_Largo
                                    'xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xagregar_cxc_documentos.RegistroDato.c_AutoCxCRecibo.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_AutoCxCRecibo.c_Largo
                                    'xcmd.Parameters.AddWithValue("@numero_recibo", xagregar_cxc_documentos.RegistroDato.c_NumeroRecibo.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_NumeroRecibo.c_Largo
                                    'xcmd.Parameters.AddWithValue("@origen", xagregar_cxc_documentos.RegistroDato.c_OrigenDocumento.c_Texto).Size = xagregar_cxc_documentos.RegistroDato.c_OrigenDocumento.c_Largo
                                    'xcmd.Parameters.AddWithValue("@monto_pendiente", xagregar_cxc_documentos.RegistroDato.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
                                    ''campos nuevo
                                    'xcmd.Parameters.AddWithValue("@signo", xagregar_cxc_documentos.RegistroDato.c_SignoDocumento.c_Valor)
                                    'xcmd.ExecuteNonQuery()

                                    ''REGISTRAR MODO PAGO
                                    'With xagregar_cxc_modo_pago.RegistroDato
                                    '    .c_Numero.c_Texto = ""
                                    '    .c_NombreAgencia.c_Texto = ""
                                    '    .c_MontoImporte.c_Valor = xdetalle.RegistroDato._Retencion._Valor
                                    '    .c_CodigoTipoPago.c_Texto = "RV"
                                    '    .c_AutoRecibo.c_Texto = xagregar_cxc_recibos.RegistroDato.c_AutoRecibo.c_Texto
                                    '    .c_NombreTipoPago.c_Texto = "PL RET VENTA IVA"
                                    '    .c_AutoTipoPago.c_Texto = "RVI0000001"
                                    '    .c_AutoAgencia.c_Texto = ""
                                    '    .c_FechaEmision.c_Valor = xdetalle.RegistroDato._FechaEmision
                                    '    .c_EstatusMovimiento.c_Texto = "0"
                                    '    .c_MontoRecibido.c_Valor = ._MontoImporte
                                    'End With

                                    ''GRABAR MODO DE PAGO'
                                    'xcmd.Parameters.Clear()
                                    'xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
                                    'xcmd.Parameters.AddWithValue("@numero", xagregar_cxc_modo_pago.RegistroDato.c_Numero.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_Numero.c_Largo
                                    'xcmd.Parameters.AddWithValue("@agencia", xagregar_cxc_modo_pago.RegistroDato.c_NombreAgencia.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_NombreAgencia.c_Largo
                                    'xcmd.Parameters.AddWithValue("@importe", xagregar_cxc_modo_pago.RegistroDato.c_MontoImporte.c_Valor)
                                    'xcmd.Parameters.AddWithValue("@codigo", xagregar_cxc_modo_pago.RegistroDato.c_CodigoTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_CodigoTipoPago.c_Largo
                                    'xcmd.Parameters.AddWithValue("@auto_recibo", xagregar_cxc_modo_pago.RegistroDato.c_AutoRecibo.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoRecibo.c_Largo
                                    'xcmd.Parameters.AddWithValue("@nombre", xagregar_cxc_modo_pago.RegistroDato.c_NombreTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_NombreTipoPago.c_Largo
                                    'xcmd.Parameters.AddWithValue("@auto_medios_pago", xagregar_cxc_modo_pago.RegistroDato.c_AutoTipoPago.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoTipoPago.c_Largo
                                    'xcmd.Parameters.AddWithValue("@auto_agencia", xagregar_cxc_modo_pago.RegistroDato.c_AutoAgencia.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_AutoAgencia.c_Largo
                                    'xcmd.Parameters.AddWithValue("@fecha", xagregar_cxc_modo_pago.RegistroDato.c_FechaEmision.c_Valor)
                                    'xcmd.Parameters.AddWithValue("@estatus", xagregar_cxc_modo_pago.RegistroDato.c_EstatusMovimiento.c_Texto).Size = xagregar_cxc_modo_pago.RegistroDato.c_EstatusMovimiento.c_Largo
                                    'xcmd.Parameters.AddWithValue("@monto_recibido", xagregar_cxc_modo_pago.RegistroDato.c_MontoRecibido.c_Valor)
                                    'xcmd.ExecuteNonQuery()
                                Next

                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "update cxc set auto_documento_retencion=@auto_retencion where auto=@auto_cxc"
                                xcmd.Parameters.AddWithValue("@auto_retencion", xretencion.RegistroDato._Auto)
                                xcmd.Parameters.AddWithValue("@auto_cxc", xagregar_cxc._AutoCxC)
                                xcmd.ExecuteNonQuery()

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xretencion.RegistroDato.c_AutoCliente.c_Texto).Size = xretencion.RegistroDato.c_AutoCliente.c_Largo
                                xcmd.ExecuteNonQuery()

                                xtr.Commit()
                            End Using
                            Return True
                        Catch xsql As SqlException
                            xtr.Rollback()
                            If xsql.Number = 2601 Then
                                Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO DE RETENCION CON EL MISMO NUMERO DE PLANILLA ASIGNADA")
                            Else
                                Throw New Exception(xsql.Message)
                            End If
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("RETENCION VENTAS IVA" + vbCrLf + "ERROR AL GRABAR RETENCION VENTAS IVA:" + vbCrLf + ex.Message)
                End Try
            End Function


#Region "DEFINICIONES SQL PARA RETENCIONES VENTA, ANULAR"
            Protected Friend Const UPDATE_VENTAS_RETENCION_IVA As String = "Update ventas set " _
               + "comprobante_retencion='', retencion_iva=0, tasa_retencion_iva=0 " _
               + "where auto=@auto"

            Protected Friend Const DELETE_RETENCIONES_VENTAS_DETALLE As String = "Delete From retenciones_ventas_detalle " _
               + "where auto=@auto"

            Protected Friend Const DELETE_RETENCIONES_VENTAS As String = "Delete From retenciones_ventas " _
               + "where auto=@auto"

            Protected Friend Const UPDATE_CXC_RETENCION_IVA As String = "Update cxc set " _
                       + "acumulado=acumulado-@monto, resta=resta+@monto,cancelado='0' " _
                       + "where auto_documento=@auto_documento"
#End Region

            ''' <summary>
            ''' Funcion: Permite Anular Documento De Retencion En Venta
            ''' </summary>
            ''' <param name="xficharetencion"></param>
            ''' CLASE FICHA RETENCION VENTA
            ''' <returns></returns>
            Function F_AnularRetencionIva(ByVal xficharetencion As FichaVentas.V_RetencionesIva.c_Registro, ByVal xdoc_anulados As FichaGlobal.c_DocumentosAnulados.c_AgregarRegistro) As Boolean
                Dim xtr As SqlTransaction = Nothing
                Dim xauto_recibo As String = ""
                Dim xauto_cxc As String = ""

                Dim xsql1 As String = "update contadores set a_documentos_anulados=a_documentos_anulados+1;select a_documentos_anulados from contadores"
                Dim xauto1 As String = ""

                Try
                    Dim xtb As New DataTable
                    Using xadap As New SqlDataAdapter("select auto_documento, retencion from retenciones_ventas_detalle where auto=@auto", _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@auto", xficharetencion._Auto).Size = xficharetencion.c_Auto.c_Largo
                        xadap.Fill(xtb)
                    End Using
                    If xtb.Rows.Count = 0 Then
                        Throw New Exception("ERROR AL ANULAR. EL DOCUMENTO YA ESTA ANULADO")
                    End If


                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try
                            Dim xautoretencion As Object = Nothing
                            Using xcmd As New SqlCommand("", xcon, xtr)
                                'verifico si la retencion se ha registrado de manera tipo pago / nota de credito fiscal nueva ver desde 7.9.26
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select auto_documento_retencion from cxc where auto=@autocxc"
                                xcmd.Parameters.AddWithValue("@autocxc", xficharetencion._AutoCxC_Pago)
                                xautoretencion = xcmd.ExecuteScalar()

                                If IsDBNull(xautoretencion) Or IsNothing(xautoretencion) Then 'version vieja
                                    xautoretencion = ""
                                Else
                                    'verifico si la ncf de la retencion se ha usado como un medio de pago para otra cuenta
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select count(*) from cxc_documentos as cxcd join cxc_recibos as cxcr " & _
                                    "on cxcd.auto_cxc_recibo=cxcr.auto where cxcd.auto_cxc=@autocxc and cxcr.estatus='0'"
                                    xcmd.Parameters.AddWithValue("@autocxc", xficharetencion._AutoCxC_Pago)
                                    If xcmd.ExecuteScalar() = 0 Then

                                        'ACTUALIZAR EL ESTATUS DE CXC A ANULADO
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "Update cxc set estatus='1' where auto=@auto and estatus='0'"
                                        xcmd.Parameters.AddWithValue("@auto", xficharetencion._AutoCxC_Pago)
                                        If xcmd.ExecuteNonQuery() = 0 Then
                                            Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO SE PUEDE VOLVER A ANULAR")
                                        End If


                                    Else
                                        Throw New Exception("PROBLEMA AL ANULAR RETENCION DE VENTA, LA NOTA DE CREDITO " & _
                                                            "RELACIONADA CON ESTA RETENCION SE HA USADO COMO MEDIO DE PAGO PARA " & _
                                                            "OTRAS CUENTAS POR COBRAR, VERIFIQUE POR FAVOR")
                                    End If
                                End If

                                If xautoretencion = "" Then
                                    'NECESITO EL AUTO DE LA CUENTA POR COBRAR DEL PAGO DE LA RETENCION
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select auto_cxc from retenciones_ventas where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xficharetencion._Auto).Size = xficharetencion.c_Auto.c_Largo
                                    xauto_cxc = xcmd.ExecuteScalar.ToString.Trim

                                    'NECESITO EL AUTO DEL RECIBO DE LA CUENTA POR COBRAR DEL PAGO DE LA RETENCION
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select auto_recibo_cxc from retenciones_ventas where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xficharetencion._Auto).Size = xficharetencion.c_Auto.c_Largo
                                    xauto_recibo = xcmd.ExecuteScalar.ToString.Trim

                                    'ACTUALIZAR EL ESTATUS A ANULADOR DEL PAGO RELACIONADO CON LA PLANILLA DE RETENCION EN (1)
                                    Dim xr As Integer = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "Update cxc set estatus='1' where auto=@auto and estatus='0'"
                                    xcmd.Parameters.AddWithValue("@auto", xauto_cxc)
                                    xr = xcmd.ExecuteNonQuery()
                                    If xr = 0 Then
                                        Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO SE PUEDE VOLVER A ANULAR")
                                    End If

                                    'ACTUALIZAR EL ESTATUS A ANULADO DEL RECIBO DE CXC RELACIONADO CON LA PLANILLA DE RETENCION EN (1)
                                    xr = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "Update cxc_recibos set estatus='1' where auto=@auto"
                                    xcmd.Parameters.AddWithValue("@auto", xauto_recibo)
                                    xr = xcmd.ExecuteNonQuery()
                                    If xr = 0 Then
                                        Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO PUEDE SE PUEDE VOLVER A ANULAR")
                                    End If

                                    'ACTUALIZAR EL ESTATUS A ANULADO DEL MODO DE PAGO RELACIONADO CON LA PLANILLA DE RETENCION EN (1)
                                    xr = 0
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "Update cxc_modo_pago set estatus='1' where auto_recibo=@auto_recibo"
                                    xcmd.Parameters.AddWithValue("@auto_recibo", xauto_recibo)
                                    xr = xcmd.ExecuteNonQuery()
                                    If xr = 0 Then
                                        Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO PUEDE SE PUEDE VOLVER A ANULAR")
                                    End If

                                    For Each xreg As DataRow In xtb.Rows
                                        'ACTUALIZO LOS DOCUMENTOS DE VENTA RELACIONADOS CON LA PLANILLA DE RETENCION
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = UPDATE_VENTAS_RETENCION_IVA
                                        xcmd.Parameters.AddWithValue("@auto", xreg("auto_documento"))
                                        xr = xcmd.ExecuteNonQuery()
                                        If xr = 0 Then
                                            Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO PUEDE SE PUEDE VOLVER A ANULAR")
                                        End If

                                        'ACTUALIZO LOS MONTOS DE CUENTAS POR COBRAR RELACIONADOS CON LA PLANILLA DE RETENCION
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = UPDATE_CXC_RETENCION_IVA
                                        xcmd.Parameters.AddWithValue("@auto_documento", xreg("auto_documento"))
                                        xcmd.Parameters.AddWithValue("@monto", xreg("retencion"))
                                        xcmd.ExecuteNonQuery()
                                    Next
                                Else
                                    For Each xreg As DataRow In xtb.Rows
                                        'ACTUALIZO LOS DOCUMENTOS DE VENTA RELACIONADOS CON LA PLANILLA DE RETENCION
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = UPDATE_VENTAS_RETENCION_IVA
                                        xcmd.Parameters.AddWithValue("@auto", xreg("auto_documento"))
                                        If xcmd.ExecuteNonQuery() = 0 Then
                                            Throw New Exception("EL DOCUMENTO YA ESTA ANULADO. NO PUEDE SE PUEDE VOLVER A ANULAR")
                                        End If
                                    Next
                                End If


                                'ELIMINO RETENCIONES_VENTAS_DETALLE
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = DELETE_RETENCIONES_VENTAS_DETALLE
                                xcmd.Parameters.AddWithValue("@auto", xficharetencion._Auto).Size = xficharetencion.c_Auto.c_Largo
                                xcmd.ExecuteNonQuery()

                                'ELIMINO RETENCIONES_VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = DELETE_RETENCIONES_VENTAS
                                xcmd.Parameters.AddWithValue("@auto", xficharetencion._Auto).Size = xficharetencion.c_Auto.c_Largo
                                xcmd.ExecuteNonQuery()

                                'REGISTRAR DOCUMENTO DE PAGO ANULADO
                                xcmd.CommandText = "update contadores set a_documentos_anulados=a_documentos_anulados+1;select a_documentos_anulados from contadores"
                                xdoc_anulados.RegistroDato.c_AutoAnulacion.c_Texto = xcmd.ExecuteScalar.ToString.Trim.PadLeft(10, "0")
                                With xdoc_anulados.RegistroDato
                                    .c_AutoDocumento.c_Texto = xauto_cxc
                                    .c_CodigoAnulacion.c_Texto = "0401"
                                End With

                                'GRABAR DOCUMENTO ANULADO
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                xcmd.Parameters.AddWithValue("@codigo", xdoc_anulados.RegistroDato.c_CodigoAnulacion.c_Texto).Size = xdoc_anulados.RegistroDato.c_CodigoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xdoc_anulados.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@hora", xdoc_anulados.RegistroDato.c_HoraAnulacion.c_Texto).Size = xdoc_anulados.RegistroDato.c_HoraAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@detalle", xdoc_anulados.RegistroDato.c_NotaDetalleAnulacion.c_Texto).Size = xdoc_anulados.RegistroDato.c_NotaDetalleAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xdoc_anulados.RegistroDato.c_NombreEstacion.c_Texto).Size = xdoc_anulados.RegistroDato.c_NombreEstacion.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xdoc_anulados.RegistroDato.c_NombreUsuario.c_Texto).Size = xdoc_anulados.RegistroDato.c_NombreUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xdoc_anulados.RegistroDato.c_CodigoUsuario.c_Texto).Size = xdoc_anulados.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@auto", xdoc_anulados.RegistroDato.c_AutoAnulacion.c_Texto).Size = xdoc_anulados.RegistroDato.c_AutoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xdoc_anulados.RegistroDato.c_AutoDocumento.c_Texto).Size = xdoc_anulados.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.ExecuteNonQuery()

                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xficharetencion._AutoCliente).Size = xficharetencion.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xficharetencion._AutoCliente).Size = xficharetencion.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xficharetencion._AutoCliente).Size = xficharetencion.c_AutoCliente.c_Largo
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xficharetencion._AutoCliente).Size = xficharetencion.c_AutoCliente.c_Largo
                                xcmd.ExecuteNonQuery()
                            End Using
                            xtr.Commit()

                            RaiseEvent ActualizarTabla()
                            Return True
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("RETENCIONES IVA" + vbCrLf + "ERROR AL ANULAR" + vbCrLf + ex.Message)
                End Try
            End Function

            Class TrasladarDocVenta
                Private xusuario As FichaGlobal.c_Usuario.c_Registro
                Private xfichaventa As FichaVentas.V_Ventas.c_Registro

                Private xtipodocumento As String
                Private xautodeposito As String
                Private xidunico As String
                Private xequipoestacion As String


                ''

                Private _tasaDivisaTraslado As Decimal = 1
                Private _solicitudDivisa As Boolean = False

                Public Sub setTasaDivisa(valor As Decimal)
                    _tasaDivisaTraslado = valor
                End Sub
                Public Sub setSolicitudDivisa(valor As Boolean)
                    _solicitudDivisa = valor
                End Sub

                Public ReadOnly Property SolicitudDivisa As Boolean
                    Get
                        Return _solicitudDivisa
                    End Get
                End Property

                Public ReadOnly Property TasaDivisaTrasladar As Decimal
                    Get
                        Return _tasaDivisaTraslado
                    End Get
                End Property

                ''


                Property _FichaUsuario() As FichaGlobal.c_Usuario.c_Registro
                    Protected Friend Get
                        Return xusuario
                    End Get
                    Set(ByVal value As FichaGlobal.c_Usuario.c_Registro)
                        xusuario = value
                    End Set
                End Property

                Property _DocumentoTrasladar() As FichaVentas.V_Ventas.c_Registro
                    Protected Friend Get
                        Return Me.xfichaventa
                    End Get
                    Set(ByVal value As FichaVentas.V_Ventas.c_Registro)
                        Me.xfichaventa = value
                    End Set
                End Property

                Property _EquipoEstacion() As String
                    Protected Friend Get
                        Return xequipoestacion.Trim
                    End Get
                    Set(ByVal value As String)
                        xequipoestacion = value
                    End Set
                End Property

                Property _IDUnico() As String
                    Protected Friend Get
                        Return xidunico.Trim
                    End Get
                    Set(ByVal value As String)
                        xidunico = value
                    End Set
                End Property

                Property _AutoDeposito() As String
                    Protected Friend Get
                        Return Me.xautodeposito.Trim
                    End Get
                    Set(ByVal value As String)
                        Me.xautodeposito = value
                    End Set
                End Property

                Property _TipoDocumentoAGenerar() As String
                    Protected Friend Get
                        Return Me.xtipodocumento.Trim
                    End Get
                    Set(ByVal value As String)
                        Me.xtipodocumento = value
                    End Set
                End Property

                Sub New()
                    Me._DocumentoTrasladar = Nothing
                    Me._FichaUsuario = Nothing

                    Me._EquipoEstacion = ""
                    Me._IDUnico = ""
                    Me._AutoDeposito = ""
                    Me._TipoDocumentoAGenerar = ""
                End Sub
            End Class

            Function F_TrasladarDocumentoAVenta(ByVal xdoc As TrasladarDocVenta) As Boolean
                Try
                    Dim xtr As SqlTransaction
                    Dim xrd As SqlDataReader
                    Dim xtb As New DataTable

                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction

                        Try

                            Using xcmd As New SqlCommand("", xcon, xtr)
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "select * from ventas_detalle where auto_documento=@auto_documento and estatus='0'"
                                xcmd.Parameters.AddWithValue("@auto_documento", xdoc._DocumentoTrasladar._AutoDocumento)
                                xrd = xcmd.ExecuteReader()
                                xtb.Load(xrd)
                                xrd.Close()

                                If xtb.Rows.Count > 0 Then
                                    Dim xdetalle As New FichaVentas.V_VentasDetalle.c_Registro
                                    Dim xtemporal As New FichaVentas.V_TemporalVenta.c_Registro

                                    For Each XROW As DataRow In xtb.Rows
                                        xdetalle.M_CargarFicha(XROW)

                                        ''AGREGADO EL 08/12/2021, AL TRASLADAR DOCUMENTO EL VA A BUSCAR POR CADA PRODUCTO EL PRECIO 2 ASIGNADO
                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select precio_1 from productos_empaque where auto_producto=@p1 and referencia='2'"
                                        xcmd.Parameters.AddWithValue("@p1", xdetalle._AutoProducto)
                                        Dim xprecio2 = xcmd.ExecuteScalar()

                                        Dim xprecio As Decimal = xdetalle._PrecioNeto
                                        If xprecio2 <> 0 Then
                                            xprecio = xprecio2
                                        End If

                                        If xdoc.SolicitudDivisa Then
                                            xprecio = xprecio * xdoc.TasaDivisaTrasladar
                                        End If

                                        xtemporal.M_LimpiarRegistro()
                                        With xtemporal
                                            .c_AutoDeposito.c_Texto = xdoc._AutoDeposito
                                            .c_AutoMedida.c_Texto = xdetalle._AutoMedida
                                            .c_AutoProducto.c_Texto = xdetalle._AutoProducto
                                            .c_AutoUsuario.c_Texto = xdoc._FichaUsuario._AutoUsuario
                                            .c_CantidadDespachar.c_Valor = xdetalle._CantidadDespachada
                                            .c_CodigoProducto.c_Texto = xdetalle._CodigoProducto
                                            .c_ContenidoEmpaque.c_Valor = xdetalle._ContenidoEmpaque
                                            .c_CostoInventario.c_Valor = xdetalle._CostoInventario
                                            .c_CostoVenta.c_Valor = xdetalle._CostoVentaEmpaque
                                            .c_Descuento.c_Valor = xdetalle._Tasa_Descuento1
                                            .c_EsPesado.c_Texto = xdetalle.c_PTO_EsPesado.c_Texto
                                            .c_EstacionEquipo.c_Texto = xdoc._EquipoEstacion
                                            .c_FechaProceso.c_Valor = F_GetDate("SELECT getdate()")
                                            .c_ForzarDecimalesMedida.c_Texto = xdetalle.c_ForzarMedida.c_Texto
                                            .c_IdUnico.c_Texto = xdoc._IDUnico
                                            .c_ItemNotas.c_Texto = xdetalle._DetalleNotas
                                            .c_NombreEmpaque.c_Texto = xdetalle._NombreEmpaque
                                            .c_NombreProducto.c_Texto = xdetalle._NombreProducto
                                            .c_NombreUsuario.c_Texto = xdoc._FichaUsuario._NombreUsuario
                                            .c_NumeroDecimalesMedida.c_Texto = xdetalle._NumeroDecimales
                                            ''.c_PrecioNeto.c_Valor = xdetalle._PrecioNeto
                                            .c_PrecioNeto.c_Valor = xprecio
                                            .c_PSugerido.c_Valor = xdetalle._PrecioSugerido
                                            .c_ReferenciaEmpaque.c_Texto = xdetalle._ReferenciaEmpaque
                                            .c_TasaIva.c_Valor = xdetalle._TasaIva
                                            .c_TipoDocumento.c_Texto = xdoc._TipoDocumentoAGenerar
                                            .c_TipoTasa.c_Texto = xdetalle.c_TipoTasaIva.c_Texto
                                            .c_BloquearExistencia.c_Texto = "0"
                                            .c_PLiquida.c_Valor = xdetalle._PrecioLiquida
                                            .c_Importe.c_Valor = xdetalle._TotalNeto

                                            .c_AutoDocumento_Origen.c_Texto = xdoc._DocumentoTrasladar._AutoDocumento
                                            .c_TipoDocumento_Origen.c_Texto = xdoc._DocumentoTrasladar.c_TipoDocumento.c_Texto
                                            .c_ProblemaDocumento_Origen.c_Texto = "0"
                                            .c_AutoItem_Documento_Origen.c_Texto = xdetalle._AutoItem
                                        End With

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select a_temporalventa from contadores"
                                        If IsDBNull(xcmd.ExecuteScalar()) Then
                                            xcmd.CommandText = "update contadores set a_temporalventa=0"
                                            xcmd.ExecuteScalar()
                                        End If
                                        xcmd.CommandText = "update contadores set a_temporalventa=a_temporalventa+1;select a_temporalventa from contadores"
                                        xtemporal.c_AutoItem.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = FichaVentas.V_TemporalVenta.InsertRegistroTemporalVenta
                                        With xcmd.Parameters
                                            .AddWithValue("@codigo", xtemporal.c_CodigoProducto.c_Texto).Size = xtemporal.c_CodigoProducto.c_Largo
                                            .AddWithValue("@producto", xtemporal.c_NombreProducto.c_Texto).Size = xtemporal.c_NombreProducto.c_Largo
                                            .AddWithValue("@cantidad", xtemporal.c_CantidadDespachar.c_Valor)
                                            .AddWithValue("@precioneto", xtemporal.c_PrecioNeto.c_Valor)
                                            .AddWithValue("@descuento", xtemporal.c_Descuento.c_Valor)
                                            .AddWithValue("@tasaiva", xtemporal.c_TasaIva.c_Valor)
                                            .AddWithValue("@importe", xtemporal._Importe)
                                            .AddWithValue("@espesado", xtemporal.c_EsPesado.c_Texto).Size = xtemporal.c_EsPesado.c_Largo
                                            .AddWithValue("@autoitem", xtemporal.c_AutoItem.c_Texto).Size = xtemporal.c_AutoItem.c_Largo
                                            .AddWithValue("@autoproducto", xtemporal._AutoProducto).Size = xtemporal.c_CodigoProducto.c_Largo
                                            .AddWithValue("@bloquearexistencia", xtemporal.c_BloquearExistencia.c_Texto).Size = xtemporal.c_NombreProducto.c_Largo
                                            .AddWithValue("@nombreempaque", xtemporal.c_NombreEmpaque.c_Texto).Size = xtemporal.c_NombreEmpaque.c_Largo
                                            .AddWithValue("@contenidoempaque", xtemporal.c_ContenidoEmpaque.c_Valor)
                                            .AddWithValue("@referenciaempaque", xtemporal.c_ReferenciaEmpaque.c_Texto).Size = xtemporal.c_ReferenciaEmpaque.c_Largo
                                            .AddWithValue("@automedida", xtemporal.c_AutoMedida.c_Texto).Size = xtemporal.c_AutoMedida.c_Largo
                                            .AddWithValue("@decimalesmedida", xtemporal.c_NumeroDecimalesMedida.c_Texto).Size = xtemporal.c_NumeroDecimalesMedida.c_Largo
                                            .AddWithValue("@forzarmedida", xtemporal.c_ForzarDecimalesMedida.c_Texto).Size = xtemporal.c_ForzarDecimalesMedida.c_Largo
                                            .AddWithValue("@tipotasa", xtemporal.c_TipoTasa.c_Texto).Size = xtemporal.c_TipoTasa.c_Largo
                                            .AddWithValue("@autodeposito", xtemporal.c_AutoDeposito.c_Texto).Size = xtemporal.c_AutoDeposito.c_Largo
                                            .AddWithValue("@autousuario", xtemporal.c_AutoUsuario.c_Texto).Size = xtemporal.c_AutoUsuario.c_Largo
                                            .AddWithValue("@nombreusuario", xtemporal.c_NombreUsuario.c_Texto).Size = xtemporal.c_NombreUsuario.c_Largo
                                            .AddWithValue("@fecha", xtemporal.c_FechaProceso.c_Valor)
                                            .AddWithValue("@estacion", xtemporal.c_EstacionEquipo.c_Texto).Size = xtemporal.c_EstacionEquipo.c_Largo
                                            .AddWithValue("@tipodocumento", xtemporal.c_TipoDocumento.c_Texto).Size = xtemporal.c_TipoDocumento.c_Largo
                                            .AddWithValue("@psugerido", xtemporal.c_PSugerido.c_Valor)
                                            .AddWithValue("@pliquida", xtemporal._PLiquida)
                                            .AddWithValue("@costoinventario", xtemporal.c_CostoInventario.c_Valor)
                                            .AddWithValue("@costoventa", xtemporal.c_CostoVenta.c_Valor)
                                            .AddWithValue("@notasitem", xtemporal.c_ItemNotas.c_Texto).Size = xtemporal.c_ItemNotas.c_Largo
                                            .AddWithValue("@idunico", xtemporal.c_IdUnico.c_Texto).Size = xtemporal.c_IdUnico.c_Largo

                                            ' Campos Nuevos
                                            .AddWithValue("@n_autodoc_origen", xtemporal.c_AutoDocumento_Origen.c_Texto).Size = xtemporal.c_AutoDocumento_Origen.c_Largo
                                            .AddWithValue("@n_tipodoc_origen", xtemporal.c_TipoDocumento_Origen.c_Texto).Size = xtemporal.c_TipoDocumento_Origen.c_Largo
                                            .AddWithValue("@n_problema_origen", xtemporal.c_ProblemaDocumento_Origen.c_Texto).Size = xtemporal.c_ProblemaDocumento_Origen.c_Largo
                                            .AddWithValue("@n_autoitem_doc_origen", xtemporal.c_AutoItem_Documento_Origen.c_Texto).Size = xtemporal.c_AutoItem_Documento_Origen.c_Largo
                                            .AddWithValue("@n_RestringidoVenta", xtemporal.c_RestringidoVenta.c_Texto).Size = xtemporal.c_RestringidoVenta.c_Largo
                                        End With
                                        xcmd.ExecuteNonQuery()
                                    Next
                                Else
                                    Throw New Exception("ERROR AL CARGAR DETALLES DEL DOCUMENTO. DOCUMENTO NO ENCONTRADO / DOCUMENTO ANULADO POR OTRO USUARIO")
                                End If
                            End Using
                            xtr.Commit()
                            RaiseEvent ActualizarTabla()
                            RaiseEvent _ActualizarFichaCliente(xdoc._DocumentoTrasladar._AutoCliente)
                            RaiseEvent _DocumentoTrasladado(xdoc._DocumentoTrasladar)

                            Return True
                        Catch ex2 As SqlException
                            xtr.Rollback()
                            Throw New Exception(ex2.Message)
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("PROBLEMA AL TRASLADAR DOCUMENTO A VENTAS:" + vbCrLf + ex.Message)
                End Try
            End Function


            Function F_AnularDocumentoNC(ByVal xdoc As FichaGlobal.c_DocumentosAnulados.c_AgregarRegistro, _
                                                Optional ByVal xrevertir As RevertirDocumento = Nothing) As Boolean
                Try
                    Dim xtb_revertir As New DataTable
                    Dim xventa As New FichaVentas.V_Ventas
                    xventa.F_BuscarDocumento(xdoc.RegistroDato.c_AutoDocumento.c_Texto)

                    Select Case xventa.RegistroDato._TipoDocumento
                        Case TipoDocumentoVentaRegistrado.Factura, TipoDocumentoVentaRegistrado.NotaCredito, TipoDocumentoVentaRegistrado.NotaDebito
                            If Month(xventa.RegistroDato._FechaEmision) = Month(xdoc.RegistroDato.c_FechaEmision.c_Valor) _
                              And Year(xventa.RegistroDato._FechaEmision) = Year(xdoc.RegistroDato.c_FechaEmision.c_Valor) Then
                            Else
                                Throw New Exception("Error Al Anular Documento... Fecha No Corresponde Al Perido Actual !!!")
                            End If
                    End Select

                    If xventa.RegistroDato._EstatusDocumento = TipoEstatus.Inactivo Then
                        Throw New Exception("Error Al Anular Documento... Dicho Documento Ya Se Encuentra Anulado !!!")
                    End If

                    If xventa.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.NotaCredito Or _
                       xventa.RegistroDato._TipoDocumento = TipoDocumentoVentaRegistrado.ChimboNC Then
                    Else
                        Throw New Exception("Error Al Anular Documento... Dicho Documento Debe Ser Tipo Nota De Credito !!!")
                    End If

                    Dim xdetalle As New DataTable
                    Dim sql_1 As String = "select auto_productos,auto_deposito,sum(cantidad_inventario*signo) cantidad " _
                        + "from ventas_detalle where auto_documento=@auto_documento group by auto_productos,auto_deposito"
                    Using xadap As New SqlDataAdapter(sql_1, _MiCadenaConexion)
                        xadap.SelectCommand.Parameters.AddWithValue("@auto_documento", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                        xadap.Fill(xdetalle)
                    End Using

                    With xdoc
                        .RegistroDato.c_CodigoAnulacion.c_Texto = "0803"
                    End With

                    Dim xsql_1 As String = "update contadores set a_documentos_anulados=a_documentos_anulados+1;" _
                      + "select a_documentos_anulados from contadores"
                    Dim xsql_2 As String = "update ventas set estatus='1' where auto=@auto"
                    Dim xsql_3 As String = "update ventas_detalle set estatus='1' where auto_documento=@auto"
                    Dim xsql_4 As String = "update productos_kardex set estatus='1' where auto_documento=@auto and origen=@origen"
                    Dim xsql_5 As String = "update productos_deposito set real = real + @cantidad1, disponible = disponible + @cantidad2, " _
                       + " reservada=reservada-@cantidad3 from productos_deposito pd where pd.auto_producto=@auto_producto and pd.auto_deposito=@auto_deposito"
                    Dim xsql_6 As String = "select codigo,nombre as producto,cantidad,precio_neto precioneto,descuento1p descuento,tasa tasaiva,total_neto " & _
                                  "importe, N_espesado espesado,auto_productos autoproducto,empaque nombreempaque, contenido_empaque contenidoempaque, " & _
                                  "empaque_tipo referenciaempaque, N_automedida automedida,decimales decimalesmedida,N_forzarmedida forzarmedida, " & _
                                  "codigo_tasa tipotasa,tipo tipodocumento, psv psugerido, costo_inventario costoinventario, costo_venta costoventa, " & _
                                  "detalle notasitem from ventas_detalle where auto_documento=@auto"

                    Dim xtr As SqlTransaction
                    Using xcon As New SqlConnection(_MiCadenaConexion)
                        xcon.Open()
                        xtr = xcon.BeginTransaction
                        Try

                            Using xcmd As New SqlCommand("", xcon, xtr)

                                'CONTADORES
                                xcmd.CommandText = xsql_1
                                xdoc.RegistroDato.c_AutoAnulacion.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                'DOCUMENTOS_ANULADOS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                xcmd.Parameters.AddWithValue("@codigo", xdoc.RegistroDato.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@fecha", xdoc.RegistroDato.c_FechaEmision.c_Valor)
                                xcmd.Parameters.AddWithValue("@hora", xdoc.RegistroDato.c_HoraAnulacion.c_Texto).Size = xdoc.RegistroDato.c_HoraAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@detalle", xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Texto).Size = xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@estacion", xdoc.RegistroDato.c_NombreEstacion.c_Texto).Size = xdoc.RegistroDato.c_NombreEstacion.c_Largo
                                xcmd.Parameters.AddWithValue("@usuario", xdoc.RegistroDato.c_NombreUsuario.c_Texto).Size = xdoc.RegistroDato.c_NombreUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@codigo_usuario", xdoc.RegistroDato.c_CodigoUsuario.c_Texto).Size = xdoc.RegistroDato.c_CodigoUsuario.c_Largo
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_AutoAnulacion.c_Largo
                                xcmd.Parameters.AddWithValue("@auto_documento", xdoc.RegistroDato.c_AutoDocumento.c_Texto).Size = xdoc.RegistroDato.c_AutoDocumento.c_Largo
                                xcmd.ExecuteNonQuery()

                                'VENTAS
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_2
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                xcmd.ExecuteNonQuery()

                                'VENTAS_DETALLE
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_3
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                xcmd.ExecuteNonQuery()

                                'PRODUCTOS_KARDEX
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = xsql_4
                                xcmd.Parameters.AddWithValue("@auto", xdoc.RegistroDato.c_AutoDocumento.c_Texto)
                                xcmd.Parameters.AddWithValue("@origen", xdoc.RegistroDato.c_CodigoAnulacion.c_Texto)
                                xcmd.ExecuteNonQuery()

                                'PRODUCTOS_DEPOSITO
                                For Each dr As DataRow In xdetalle.Rows
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = xsql_5
                                    xcmd.Parameters.AddWithValue("@cantidad1", dr("cantidad"))
                                    xcmd.Parameters.AddWithValue("@cantidad2", dr("cantidad"))
                                    xcmd.Parameters.AddWithValue("@cantidad3", 0)
                                    xcmd.Parameters.AddWithValue("@auto_producto", dr("auto_productos").ToString)
                                    xcmd.Parameters.AddWithValue("@auto_deposito", dr("auto_deposito").ToString)
                                    xcmd.ExecuteNonQuery()
                                Next

                                Dim xanticipos As Decimal = 0
                                If xventa.RegistroDato.c_TipoDocumento.c_Texto <> "06" Then
                                    'CXC
                                    Dim xauto_cxc As String = ""
                                    Dim xobj As Object = Nothing
                                    xcmd.Parameters.Clear()
                                    xcmd.CommandText = "select auto from cxc where auto_documento=@auto_documento"
                                    xcmd.Parameters.AddWithValue("@auto_documento", xventa.RegistroDato.c_AutoDocumento.c_Texto)
                                    xobj = xcmd.ExecuteScalar()

                                    If IsDBNull(xobj) Or (xobj Is Nothing) Then
                                    Else
                                        xauto_cxc = xobj.ToString.Trim
                                        Dim xdocumentos As Integer = 0

                                        xcmd.Parameters.Clear()
                                        xcmd.CommandText = "select COUNT(*) xdoc from cxc_documentos cd join cxc_recibos cr on cd.auto_cxc_recibo = cr.auto " & _
                                                           "where cd.auto_cxc=@auto and cr.estatus='0'"
                                        xcmd.Parameters.AddWithValue("@auto", xauto_cxc)
                                        xdocumentos = xcmd.ExecuteScalar()
                                        If xdocumentos > 0 Then
                                            Throw New Exception("ERROR AL ANULAR DOCUMENTO, HAY MOVIMIENTOS DE PAGOS EFECTUADOS EN CXC SOBRE ESTE DOCUMENTO, VERIFIQUE POR FAVOR")
                                        Else
                                            'CXC, ELIMINO EL MOVIMIENTO PRINCIPAL
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "UPDATE CXC set estatus='1' where auto=@auto"
                                            xcmd.Parameters.AddWithValue("@auto", xauto_cxc)
                                            xcmd.ExecuteNonQuery()

                                            'CONTADORES DOCUMENTOS ANULADOS, SE INCREMENTA EL AUTOMATICO
                                            Dim xcxc_anulado As New FichaGlobal.c_DocumentosAnulados.c_Registro
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = xsql_1
                                            xcxc_anulado.c_AutoAnulacion.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

                                            With xcxc_anulado
                                                .c_AutoDocumento.c_Texto = xauto_cxc
                                                .c_CodigoAnulacion.c_Texto = "0401"
                                                .c_CodigoUsuario.c_Texto = xdoc.RegistroDato.c_CodigoUsuario.c_Texto
                                                .c_FechaEmision.c_Valor = xdoc.RegistroDato.c_FechaEmision.c_Valor
                                                .c_HoraAnulacion.c_Texto = xdoc.RegistroDato.c_HoraAnulacion.c_Texto
                                                .c_NombreEstacion.c_Texto = xdoc.RegistroDato.c_NombreEstacion.c_Texto
                                                .c_NombreUsuario.c_Texto = xdoc.RegistroDato.c_NombreUsuario.c_Texto
                                                .c_NotaDetalleAnulacion.c_Texto = "ANULACION DE " + xventa.RegistroDato._TipoDocumento.ToString
                                            End With

                                            'DOCUMENTOS_ANULADOS, SE GRABA EL DOCUMENTO ANULADO
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                            xcmd.Parameters.AddWithValue("@codigo", xcxc_anulado.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@fecha", xcxc_anulado.c_FechaEmision.c_Valor)
                                            xcmd.Parameters.AddWithValue("@hora", xcxc_anulado.c_HoraAnulacion.c_Texto).Size = xcxc_anulado.c_HoraAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@detalle", xcxc_anulado.c_NotaDetalleAnulacion.c_Texto).Size = xcxc_anulado.c_NotaDetalleAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@estacion", xcxc_anulado.c_NombreEstacion.c_Texto).Size = xcxc_anulado.c_NombreEstacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@usuario", xcxc_anulado.c_NombreUsuario.c_Texto).Size = xcxc_anulado.c_NombreUsuario.c_Largo
                                            xcmd.Parameters.AddWithValue("@codigo_usuario", xcxc_anulado.c_CodigoUsuario.c_Texto).Size = xcxc_anulado.c_CodigoUsuario.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto", xcxc_anulado.c_AutoAnulacion.c_Texto).Size = xcxc_anulado.c_AutoAnulacion.c_Largo
                                            xcmd.Parameters.AddWithValue("@auto_documento", xcxc_anulado.c_AutoDocumento.c_Texto).Size = xcxc_anulado.c_AutoDocumento.c_Largo
                                            xcmd.ExecuteNonQuery()

                                            'CXC_DOCUMENTOS, TOMO TODOS LOS DOCUMENTOS DE PAGOS RELACIONADOS CON ESTA CXC
                                            Dim xreader As SqlDataReader = Nothing
                                            xcmd.Parameters.Clear()
                                            xcmd.CommandText = "SELECT AUTO_CXC_PAGO,AUTO_CXC_RECIBO from cxc_documentos where auto_cxc=@auto_cxc"
                                            xcmd.Parameters.AddWithValue("@auto_cxc", xauto_cxc)
                                            xreader = xcmd.ExecuteReader()
                                            Dim xtb As New DataTable
                                            xtb.Load(xreader)
                                            xreader.Close()

                                            For Each xrow As DataRow In xtb.Rows
                                                Dim xauto_recibo As String = ""
                                                Dim xauto_cxc_pago As String = ""

                                                xauto_recibo = xrow(1).ToString
                                                xauto_cxc_pago = xrow(0).ToString

                                                Using xcmd2 As New SqlCommand("", xcon, xtr)
                                                    'CXC_RECIBOS, ELIMINO TODOS LOS RECIBOS RELACIONADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC_RECIBOS set estatus='1' where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xcmd2.ExecuteNonQuery()

                                                    'CXC_RECIBOS, VERIFICO SI HAY UN ANTICIPO Y LO ACUMULO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "select anticipos from CXC_RECIBOS where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xanticipos += xcmd2.ExecuteScalar

                                                    'CXC_MODO_PAGO, ELIMINO TODOS LOS PAGOS RELACIONADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC_MODO_PAGO set estatus='1' where auto_recibo=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_recibo)
                                                    xcmd2.ExecuteNonQuery()

                                                    'CXC, ELIMINO TODOS LOS MOVIMIENTOS DE CXC RELACIONADOS A LOS PAGOS EFECTUADOS
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = "UPDATE CXC set estatus='1' where auto=@auto"
                                                    xcmd2.Parameters.AddWithValue("@auto", xauto_cxc_pago)
                                                    xcmd2.ExecuteNonQuery()

                                                    Dim xcxc_pago As New FichaGlobal.c_DocumentosAnulados.c_Registro
                                                    'CONTADORES DOCUMENTOS ANULADOS, SE INCREMENTA EL AUTOMATICO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = xsql_1
                                                    xcxc_pago.c_AutoAnulacion.c_Texto = xcmd2.ExecuteScalar().ToString.Trim.PadLeft(10, "0")
                                                    With xcxc_pago
                                                        .c_AutoDocumento.c_Texto = xauto_recibo
                                                        .c_CodigoAnulacion.c_Texto = "0401"
                                                        .c_CodigoUsuario.c_Texto = xdoc.RegistroDato.c_CodigoUsuario.c_Texto
                                                        .c_FechaEmision.c_Valor = xdoc.RegistroDato.c_FechaEmision.c_Valor
                                                        .c_HoraAnulacion.c_Texto = xdoc.RegistroDato.c_HoraAnulacion.c_Texto
                                                        .c_NombreEstacion.c_Texto = xdoc.RegistroDato.c_NombreEstacion.c_Texto
                                                        .c_NombreUsuario.c_Texto = xdoc.RegistroDato.c_NombreUsuario.c_Texto
                                                        .c_NotaDetalleAnulacion.c_Texto = "ANULACION PAGO DE " + xventa.RegistroDato._TipoDocumento.ToString + ", " + xdoc.RegistroDato.c_NotaDetalleAnulacion.c_Texto
                                                    End With

                                                    'DOCUMENTOS_ANULADOS, SE GRABA EL DOCUMENTO ANULADO
                                                    xcmd2.Parameters.Clear()
                                                    xcmd2.CommandText = FichaGlobal.c_DocumentosAnulados.InsertSql
                                                    xcmd2.Parameters.AddWithValue("@codigo", xcxc_pago.c_CodigoAnulacion.c_Texto).Size = xdoc.RegistroDato.c_CodigoAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@fecha", xcxc_pago.c_FechaEmision.c_Valor)
                                                    xcmd2.Parameters.AddWithValue("@hora", xcxc_pago.c_HoraAnulacion.c_Texto).Size = xcxc_pago.c_HoraAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@detalle", xcxc_pago.c_NotaDetalleAnulacion.c_Texto).Size = xcxc_pago.c_NotaDetalleAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@estacion", xcxc_pago.c_NombreEstacion.c_Texto).Size = xcxc_pago.c_NombreEstacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@usuario", xcxc_pago.c_NombreUsuario.c_Texto).Size = xcxc_pago.c_NombreUsuario.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@codigo_usuario", xcxc_pago.c_CodigoUsuario.c_Texto).Size = xcxc_pago.c_CodigoUsuario.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@auto", xcxc_pago.c_AutoAnulacion.c_Texto).Size = xcxc_pago.c_AutoAnulacion.c_Largo
                                                    xcmd2.Parameters.AddWithValue("@auto_documento", xcxc_pago.c_AutoDocumento.c_Texto).Size = xcxc_pago.c_AutoDocumento.c_Largo
                                                    xcmd2.ExecuteNonQuery()
                                                End Using
                                            Next
                                        End If
                                    End If
                                End If

                                'BUSCA LOS SALDOS PARA EL CLIENTE
                                Dim t_debito As Single = 0
                                Dim t_credito As Single = 0
                                Dim t_saldo As Single = 0

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
                                t_debito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
                                t_credito = xcmd.ExecuteScalar()

                                xcmd.Parameters.Clear()
                                xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
                                  + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
                                t_saldo = xcmd.ExecuteScalar()

                                'CLIENTES
                                xcmd.Parameters.Clear()
                                xcmd.CommandText = "UPDATE CLIENTES SET " _
                                  + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
                                  + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo " _
                                  + "where auto=@auto"
                                xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
                                xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
                                xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
                                xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
                                xcmd.ExecuteNonQuery()
                            End Using

                            xtr.Commit()
                            RaiseEvent ActualizarTabla()
                            Return True
                        Catch ex2 As SqlException
                            xtr.Rollback()
                            Throw New Exception(ex2.Message)
                        Catch ex As Exception
                            xtr.Rollback()
                            Throw New Exception(ex.Message)
                        End Try
                    End Using
                Catch ex As Exception
                    Throw New Exception("ERROR AL ANULAR DOCUMENTO:" + vbCrLf + ex.Message)
                End Try
            End Function

        End Class
    End Class
End Namespace





' ''Function F_GrabarVenta(ByVal idunico As String, ByVal xventa As V_Ventas.AgregarVenta, _
' ''                       ByVal xventadetalle As List(Of V_VentasDetalle.AgregarDetalleVenta), _
' ''                       ByVal xpagos As List(Of FichaCtasCobrar.c_ModosPago.AgregarModoPago), _
' ''                       ByVal xcondiciones As CondicionesParaVenta, ByVal ximpresora As ModoImprimirFactura)

' ''    Dim xsql_1 As String = "update contadores set a_ventas=a_ventas+1; select a_ventas from contadores"
' ''    Dim xsql_2 As String = "update contadores set a_cxc=a_cxc+1; select a_cxc from contadores"
' ''    Dim xsql_3 As String = "update series_fiscales set correlativo=correlativo+1, estatus_fiscal='1' where nombre=@nombre;" _
' ''                          + "select correlativo from series_fiscales where nombre=@nombre"

' ''    Dim autocxc As String = ""
' ''    Dim xlista_medidasventa As New List(Of MedidasVenta)

' ''    'Tabla Usada Para Lista De Productos Para La Impresora Fiscal
' ''    Dim xtablaprd As New DataTable
' ''    With xtablaprd
' ''        .Columns.Add("cantidad", GetType(System.Decimal))
' ''        .Columns.Add("nombre", GetType(System.String))
' ''        .Columns.Add("codigo", GetType(System.String))
' ''        .Columns.Add("descuento1p", GetType(System.Decimal))
' ''        .Columns.Add("precio_neto", GetType(System.Decimal))
' ''        .Columns.Add("codigo_tasa", GetType(System.String))
' ''        .Columns.Add("detalle", GetType(System.String))
' ''        .Columns.Add("SUBDETALLE", GetType(System.String))
' ''    End With

' ''    Dim xtr As SqlTransaction = Nothing
' ''    Try
' ''        Dim xfiscal As New FichaGlobal.c_SeriesFiscales
' ''        Dim xtb As New DataTable
' ''        Using xadap As New SqlDataAdapter("select * from series_fiscales where nombre=@nombre", _MiCadenaConexion)
' ''            xadap.SelectCommand.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
' ''            xadap.Fill(xtb)
' ''        End Using

' ''        If xtb.Rows.Count > 0 Then
' ''            xfiscal.M_CargarFicha(xtb(0))
' ''        Else
' ''            Throw New Exception("ERROR... SERIE NO REGISTRADA, VERIFIQUE")
' ''        End If

' ''        If xfiscal.RegistroDato.r_EstatusSerie = TipoEstatus.Activo Then
' ''            If xfiscal.RegistroDato.r_EstatusParaVentas = TipoEstatus.Activo Then
' ''            Else
' ''                Throw New Exception("ERROR... SERIE NO ASIGNADA PARA EFECTUAR VENTAS, VERIFIQUE")
' ''            End If
' ''        Else
' ''            Throw New Exception("ERROR... SERIE ESTA EN ESTADO INACTVIO, VERIFIQUE")
' ''        End If


' ''        Dim xn As Decimal = 0
' ''        Dim xmd1 As Decimal = 0
' ''        Dim xmd2 As Decimal = 0
' ''        Dim xmt As Decimal = 0
' ''        Dim xb1 As Decimal = 0
' ''        Dim xb2 As Decimal = 0
' ''        Dim xb3 As Decimal = 0
' ''        Dim xexento As Decimal = 0

' ''        xn = xventa.RegistroDato.c_MontoSubTotal.c_Valor
' ''        xb1 = xventa.RegistroDato.c_Base1.c_Valor
' ''        xb2 = xventa.RegistroDato.c_Base2.c_Valor
' ''        xb3 = xventa.RegistroDato.c_Base3.c_Valor
' ''        xexento = xventa.RegistroDato.c_Exento.c_Valor

' ''        'If xventa.RegistroDato.c_TasaDescuento_1.c_Valor > 0 Then
' ''        '    Dim xd1 As Decimal = 0
' ''        '    Dim xd2 As Decimal = 0
' ''        '    Dim xd3 As Decimal = 0
' ''        '    Dim xd4 As Decimal = 0
' ''        '    xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xventa.RegistroDato.c_MontoDescuento_1.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

' ''        '    xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        'End If

' ''        'If xventa.RegistroDato.c_TasaDescuento_2.c_Valor > 0 Then
' ''        '    Dim xd1 As Decimal = 0
' ''        '    Dim xd2 As Decimal = 0
' ''        '    Dim xd3 As Decimal = 0
' ''        '    Dim xd4 As Decimal = 0
' ''        '    xd1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xd4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xventa.RegistroDato.c_MontoDescuento_2.c_Valor = Decimal.Round(xd1 + xd2 + xd3 + xd4, 2, MidpointRounding.AwayFromZero)

' ''        '    xb1 = Decimal.Round(xb1 - (xb1 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb2 = Decimal.Round(xb2 - (xb2 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb3 = Decimal.Round(xb3 - (xb3 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xexento = Decimal.Round(xexento - (xexento * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        'End If

' ''        'If xventa.RegistroDato.c_TasaCargos.c_Valor > 0 Then
' ''        '    Dim xc1 As Decimal = 0
' ''        '    Dim xc2 As Decimal = 0
' ''        '    Dim xc3 As Decimal = 0
' ''        '    Dim xc4 As Decimal = 0
' ''        '    xc1 = Decimal.Round((xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xc2 = Decimal.Round((xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xc3 = Decimal.Round((xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xc4 = Decimal.Round((xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xventa.RegistroDato.c_MontoCargo.c_Valor = Decimal.Round(xc1 + xc2 + xc3 + xc4, 2, MidpointRounding.AwayFromZero)

' ''        '    xb1 = Decimal.Round(xb1 + (xb1 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb2 = Decimal.Round(xb2 + (xb2 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xb3 = Decimal.Round(xb3 + (xb3 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        '    xexento = Decimal.Round(xexento + (xexento * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''        'End If

' ''        Dim ximp1 As Decimal = 0
' ''        Dim ximp2 As Decimal = 0
' ''        Dim ximp3 As Decimal = 0

' ''        'ximp1 = Decimal.Round(xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
' ''        'ximp2 = Decimal.Round(xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
' ''        'ximp3 = Decimal.Round(xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100, 2, MidpointRounding.AwayFromZero)

' ''        ximp1 = (xb1 * xventa.RegistroDato.c_Tasa1.c_Valor / 100)
' ''        ximp2 = (xb2 * xventa.RegistroDato.c_Tasa2.c_Valor / 100)
' ''        ximp3 = (xb3 * xventa.RegistroDato.c_Tasa3.c_Valor / 100)

' ''        Dim tg As Decimal = (xexento + xb1 + xb2 + xb3 + ximp1 + ximp2 + ximp3)
' ''        tg = Decimal.Round(tg, 2, MidpointRounding.AwayFromZero)

' ''        xventa.RegistroDato.c_Base1.c_Valor = Decimal.Round(xb1, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Base2.c_Valor = Decimal.Round(xb2, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Base3.c_Valor = Decimal.Round(xb3, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Base.c_Valor = Decimal.Round(xb1 + xb2 + xb3, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Exento.c_Valor = Decimal.Round(xexento, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Impuesto1.c_Valor = Decimal.Round(ximp1, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Impuesto2.c_Valor = Decimal.Round(ximp2, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Impuesto3.c_Valor = Decimal.Round(ximp3, 2, MidpointRounding.AwayFromZero)
' ''        xventa.RegistroDato.c_Impuesto.c_Valor = Decimal.Round(ximp1 + ximp2 + ximp3, 2, MidpointRounding.AwayFromZero)
' ''        'xventa.RegistroDato.c_TotalGeneral.c_Valor = xventa.RegistroDato.c_Exento.c_Valor + _
' ''        '                       xventa.RegistroDato.c_Base.c_Valor + xventa.RegistroDato.c_Impuesto.c_Valor
' ''        xventa.RegistroDato.c_TotalGeneral.c_Valor = tg

' ''        xventa.RegistroDato.c_MontoDescuento_1.c_Valor = xventa.DsctoGeneralMonto
' ''        xventa.RegistroDato.c_MontoDescuento_2.c_Valor = 0
' ''        xventa.RegistroDato.c_MontoCargo.c_Valor = xventa.CargoGeneralMonto
' ''        xventa.RegistroDato.c_MontoSubTotal.c_Valor = xventa.SubTotal_1

' ''        xventa.AsignarData()
' ''        With xventa.RegistroDato
' ''            If ._CondicionPago = TipoCondcionPago.Contado Then
' ''                .c_MontoSaldoPendiente.c_Valor = 0
' ''            Else
' ''                .c_MontoSaldoPendiente.c_Valor = .c_TotalGeneral.c_Valor
' ''            End If
' ''            .c_SerialImpresoraFiscal.c_Texto = xfiscal.RegistroDato.r_SerialFiscal
' ''            .c_BloquearAlmacen.c_Texto = IIf(xcondiciones._Permitir_RupturaPorExistencia, "1", "0")
' ''            .c_FechaVencimiento.c_Valor = DateAdd(DateInterval.Day, .c_DiasCreditoCliente.c_Valor, .c_FechaEmision.c_Valor)
' ''            .c_MesRelacion.c_Texto = Month(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(2, "0")
' ''            .c_FechaRelacion.c_Valor = .c_FechaEmision.c_Valor
' ''            .c_TipoColumna.c_Texto = "1"
' ''            .c_EstatusDocumento.c_Texto = "0"
' ''            .c_AnoRelacion.c_Texto = Year(.c_FechaEmision.c_Valor).ToString.Trim.PadLeft(4, "0")
' ''            If .c_FactorCambio.c_Valor > 0 Then
' ''                .c_MontoDivisa.c_Valor = Decimal.Round(.c_TotalGeneral.c_Valor / .c_FactorCambio.c_Valor, 2, MidpointRounding.AwayFromZero)
' ''            Else
' ''                .c_MontoDivisa.c_Valor = 0
' ''            End If

' ''            If xventa._f_FichaDocumentoOrigen IsNot Nothing Then
' ''                .c_NumeroPedido.c_Texto = xventa._f_FichaDocumentoOrigen._Documento
' ''            End If
' ''            .c_DescuentoPorProntoPago.c_Valor = xventa._DescuentoPorProntoPago
' ''        End With

' ''        Dim xauto As Integer = 0
' ''        For Each xdetalle In xventadetalle
' ''            xauto += 1

' ''            With xdetalle
' ''                .RegistroDato.c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
' ''                .RegistroDato.c_AutoItem.c_Texto = xauto.ToString.Trim.PadLeft(10, "0")
' ''                .RegistroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                .RegistroDato.c_TipoDocumento.c_Texto = xventa.RegistroDato.c_TipoDocumento.c_Texto
' ''                .RegistroDato.c_TipoMovimiento.c_Texto = "V"
' ''                .RegistroDato.c_TipoCalculoUtilidad.c_Texto = IIf(._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto, "C", "V")

' ''                Dim x0 As Decimal = 0
' ''                x0 = .RegistroDato.c_PrecioNeto.c_Valor

' ''                .RegistroDato.c_DescuentoMonto_1.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_1.c_Valor * _
' ''                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
' ''                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_1.c_Valor, 2, MidpointRounding.AwayFromZero)

' ''                .RegistroDato.c_DescuentoMonto_2.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_2.c_Valor * _
' ''                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
' ''                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_2.c_Valor, 2, MidpointRounding.AwayFromZero)

' ''                .RegistroDato.c_DescuentoMonto_3.c_Valor = Decimal.Round(.RegistroDato.c_DescuentoTasa_3.c_Valor * _
' ''                                                                         x0 / 100, 2, MidpointRounding.AwayFromZero)
' ''                x0 = Decimal.Round(x0 - .RegistroDato.c_DescuentoMonto_3.c_Valor, 2, MidpointRounding.AwayFromZero)
' ''                .RegistroDato.c_PrecioItem.c_Valor = x0

' ''                Dim x1 As Decimal = 0
' ''                x1 = Decimal.Round(x0 * .RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero)
' ''                .RegistroDato.c_TotalNeto.c_Valor = x1

' ''                Dim x2 As Decimal = 0
' ''                x2 = Decimal.Round(x1 * .RegistroDato.c_TasaIva.c_Valor / 100, 2, MidpointRounding.AwayFromZero)
' ''                .RegistroDato.c_MontoIva.c_Valor = x2
' ''                .RegistroDato.c_TotalGeneral.c_Valor = Decimal.Round(x1 + x2, 2, MidpointRounding.AwayFromZero)

' ''                Dim x3 As Decimal = 0
' ''                x3 = .RegistroDato.c_CantidadDespachada.c_Valor * .RegistroDato.c_ContenidoEmpaque.c_Valor
' ''                .RegistroDato.c_CantidadUnidadInventario.c_Valor = x3

' ''                Dim x4 As Decimal = x0
' ''                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_1.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''                x4 = Decimal.Round(x4 - (x4 * xventa.RegistroDato.c_TasaDescuento_2.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''                x4 = Decimal.Round(x4 + (x4 * xventa.RegistroDato.c_TasaCargos.c_Valor / 100), 2, MidpointRounding.AwayFromZero)
' ''                .RegistroDato.c_PrecioFinal.c_Valor = x4
' ''                .RegistroDato.c_PrecioInventario.c_Valor = Decimal.Round(x4 / .RegistroDato.c_ContenidoEmpaque.c_Valor, 2, MidpointRounding.AwayFromZero)

' ''                Dim x5 As Decimal = 0
' ''                Dim x6 As Decimal = 0
' ''                x5 = x4 * .RegistroDato.c_CantidadDespachada.c_Valor
' ''                x6 = .RegistroDato.c_CostoVenta.c_Valor * .RegistroDato.c_CantidadDespachada.c_Valor
' ''                .RegistroDato.c_UtilidadMonto.c_Valor = Decimal.Round(x5 - x6, 2, MidpointRounding.AwayFromZero)

' ''                If ._TipoCalculoUtilidad = TipoCalculoUtilidad.BaseAlCosto Then
' ''                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBaseCosto(x6, .RegistroDato.c_UtilidadMonto.c_Valor)
' ''                Else
' ''                    .RegistroDato.c_UtilidadTasa.c_Valor = UtilidadBasePrecioVenta(x5, .RegistroDato.c_UtilidadMonto.c_Valor)
' ''                End If

' ''                If xcondiciones._Permitir_PrecioCero = True Then
' ''                Else
' ''                    If x4 = 0 Then
' ''                        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO EN CERO")
' ''                    End If
' ''                End If

' ''                If xcondiciones._Permitir_PrecioMenorCosto = True Then
' ''                Else
' ''                    If (x4 > 0) And x4 < .RegistroDato.c_CostoVenta.c_Valor Then
' ''                        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + .RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO SE PERMITE PRECIO POR DEBAJO DEL COSTO")
' ''                    End If
' ''                End If
' ''            End With

' ''            xlista_medidasventa.Add(New MedidasVenta With {._Cantidad = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, _
' ''                                                           ._Decimales = xdetalle.RegistroDato.c_NumeroDecimales.c_Valor.ToString, _
' ''                                                           ._Nombre = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto, _
' ''                                                           ._Auto = xdetalle.RegistroDato.c_AutoMedida.c_Texto})
' ''        Next

' ''        'VERIFICO LIMITE DE DOCUMENTOS DEL CLIENTE / LIMITE DE CREDITO
' ''        If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Credito Then
' ''            Dim xcliente As New FichaClientes
' ''            xcliente.F_BuscarCliente(xventa.RegistroDato._AutoCliente)
' ''            If (xcliente.f_Clientes.RegistroDato.r_LimiteCreditoPermitido = 0) Or (xcliente.f_Clientes.RegistroDato.r_CreditoDisponible >= xventa.RegistroDato.c_TotalGeneral.c_Valor) Then
' ''                If xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos > 0 Then
' ''                    If (xcliente.f_Clientes.RegistroDato.r_CantidadDocPendientes + 1) > xcliente.f_Clientes.RegistroDato.r_CantDocPendPermitidos Then
' ''                        Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE DOCUMENTOS PENDIENTES DE CREDITO, VERIFIQUE")
' ''                    End If
' ''                End If
' ''            Else
' ''                Throw New Exception("ERROR... CLIENTE SOBREPASA SU LIMITE DE CREDITO, VERIFIQUE")
' ''            End If
' ''        End If

' ''        '
' ''        ' ARRANCA EL PROCEDIMIENTO DE GRABAR
' ''        '
' ''        Using xcon As New SqlConnection(_MiCadenaConexion)
' ''            xcon.Open()
' ''            xtr = xcon.BeginTransaction
' ''            Try
' ''                Using xcmd As New SqlCommand("", xcon, xtr)
' ''                    'ACTUALIZO CONTADOR AUTOMATICO DE VENTAS
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = xsql_1
' ''                    xventa.RegistroDato.c_AutoDocumento.c_Texto = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

' ''                    'ACTUALIZA CONTADOR AUTOMATICO CXC
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = xsql_2
' ''                    autocxc = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

' ''                    'ACTUALIZA CORRELATIVO DE SERIES FISCALES
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = xsql_3
' ''                    xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato._SerieFiscalAsignada)
' ''                    xventa.RegistroDato.c_Documento.c_Texto = xventa.RegistroDato._SerieFiscalAsignada + _
' ''                                     xcmd.ExecuteScalar().ToString.Trim.PadLeft(10 - xventa.RegistroDato._SerieFiscalAsignada.Length, "0")

' ''                    'VENTAS
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = FichaVentas.INSERT_VENTAS
' ''                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@documento", xventa.RegistroDato.c_Documento.c_Texto).Size = xventa.RegistroDato.c_Documento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha", xventa.RegistroDato.c_FechaEmision.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xventa.RegistroDato.c_FechaVencimiento.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@nombre", xventa.RegistroDato.c_NombreCliente.c_Texto).Size = xventa.RegistroDato.c_NombreCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@dir_fiscal", xventa.RegistroDato.c_DirFiscalCliente.c_Texto).Size = xventa.RegistroDato.c_DirFiscalCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@ci_rif", xventa.RegistroDato.c_CiRifCliente.c_Texto).Size = xventa.RegistroDato.c_CiRifCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@tipo", xventa.RegistroDato.c_TipoDocumento.c_Texto).Size = xventa.RegistroDato.c_TipoDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@exento", xventa.RegistroDato.c_Exento.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@base1", xventa.RegistroDato.c_Base1.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@base2", xventa.RegistroDato.c_Base2.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@base3", xventa.RegistroDato.c_Base3.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@impuesto1", xventa.RegistroDato.c_Impuesto1.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@impuesto2", xventa.RegistroDato.c_Impuesto2.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@impuesto3", xventa.RegistroDato.c_Impuesto3.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@base", xventa.RegistroDato.c_Base.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@impuesto", xventa.RegistroDato.c_Impuesto.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@total", xventa.RegistroDato.c_TotalGeneral.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@tasa1", xventa.RegistroDato.c_Tasa1.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@tasa2", xventa.RegistroDato.c_Tasa2.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@tasa3", xventa.RegistroDato.c_Tasa3.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@nota", xventa.RegistroDato.c_NotasDocumento.c_Texto).Size = xventa.RegistroDato.c_NotasDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@tasa_retencion_iva", xventa.RegistroDato.c_TasaRetencionIva.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@tasa_retencion_islr", xventa.RegistroDato.c_TasaRetencionISLR.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@retencion_iva", xventa.RegistroDato.c_RetencionIva.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@retencion_islr", xventa.RegistroDato.c_RetencionISLR.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@auto_entidad", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@codigo_entidad", xventa.RegistroDato.c_CodigoCliente.c_Texto).Size = xventa.RegistroDato.c_CodigoCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@mes_relacion", xventa.RegistroDato.c_MesRelacion.c_Texto).Size = xventa.RegistroDato.c_MesRelacion.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@control", xventa.RegistroDato.c_ControlFiscal.c_Texto).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha_relacion", xventa.RegistroDato.c_FechaRelacion.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@orden_compra", xventa.RegistroDato.c_OrdenCompra.c_Texto).Size = xventa.RegistroDato.c_OrdenCompra.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@dias", xventa.RegistroDato.c_DiasCreditoCliente.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@descuento1", xventa.RegistroDato.c_MontoDescuento_1.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@descuento2", xventa.RegistroDato.c_MontoDescuento_2.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@cargos", xventa.RegistroDato.c_MontoCargo.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@descuento1_porcentaje", xventa.RegistroDato.c_TasaDescuento_1.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@descuento2_porcentaje", xventa.RegistroDato.c_TasaDescuento_2.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@cargos_porcentaje", xventa.RegistroDato.c_TasaCargos.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@columna", xventa.RegistroDato.c_TipoColumna.c_Texto).Size = xventa.RegistroDato.c_TipoColumna.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@estatus", xventa.RegistroDato.c_EstatusDocumento.c_Texto).Size = xventa.RegistroDato.c_EstatusDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@aplica", xventa.RegistroDato.c_DocumentoAplica.c_Texto).Size = xventa.RegistroDato.c_DocumentoAplica.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@comprobante_retencion", xventa.RegistroDato.c_ComprobanteRetencion.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencion.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@subtotal", xventa.RegistroDato.c_MontoSubTotal.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@telefono", xventa.RegistroDato.c_TelefonoCliente.c_Texto).Size = xventa.RegistroDato.c_TelefonoCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@factor_cambio", xventa.RegistroDato.c_FactorCambio.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@codigo_vendedor", xventa.RegistroDato.c_CodigoVendedor.c_Texto).Size = xventa.RegistroDato.c_CodigoVendedor.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@vendedor", xventa.RegistroDato.c_NombreVendedor.c_Texto).Size = xventa.RegistroDato.c_NombreVendedor.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_vendedor", xventa.RegistroDato.c_AutoVendedor.c_Texto).Size = xventa.RegistroDato.c_AutoVendedor.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha_pedido", xventa.RegistroDato.c_FechaPedido.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@pedido", xventa.RegistroDato.c_NumeroPedido.c_Texto).Size = xventa.RegistroDato.c_NumeroPedido.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@condicion_pago", xventa.RegistroDato.c_CondicionPago.c_Texto).Size = xventa.RegistroDato.c_CondicionPago.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@usuario", xventa.RegistroDato.c_Usuario.c_Texto).Size = xventa.RegistroDato.c_Usuario.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@codigo_usuario", xventa.RegistroDato.c_CodigoUsuario.c_Texto).Size = xventa.RegistroDato.c_CodigoUsuario.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@codigo_sucursal", xventa.RegistroDato.c_CodigoSucursal.c_Texto).Size = xventa.RegistroDato.c_CodigoSucursal.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@hora", xventa.RegistroDato.c_Hora.c_Texto).Size = xventa.RegistroDato.c_Hora.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@transporte", xventa.RegistroDato.c_Transporte.c_Texto).Size = xventa.RegistroDato.c_Transporte.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@codigo_transporte", xventa.RegistroDato.c_CodigoTransporte.c_Texto).Size = xventa.RegistroDato.c_CodigoTransporte.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@monto_divisa", xventa.RegistroDato.c_MontoDivisa.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@despachado", xventa.RegistroDato.c_NombreDespachador.c_Texto).Size = xventa.RegistroDato.c_NombreDespachador.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@dir_despacho", xventa.RegistroDato.c_DirDespacho.c_Texto).Size = xventa.RegistroDato.c_DirDespacho.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@estacion", xventa.RegistroDato.c_EstacionEquipo.c_Texto).Size = xventa.RegistroDato.c_EstacionEquipo.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_recibo", xventa.RegistroDato.c_AutoRecibo.c_Texto).Size = xventa.RegistroDato.c_AutoRecibo.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@recibo", xventa.RegistroDato.c_NumeroRecibo.c_Texto).Size = xventa.RegistroDato.c_NumeroRecibo.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@renglones", xventa.RegistroDato.c_CantidadRenglones.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@saldo_pendiente", xventa.RegistroDato.c_MontoSaldoPendiente.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@ano_relacion", xventa.RegistroDato.c_AnoRelacion.c_Texto).Size = xventa.RegistroDato.c_AnoRelacion.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@comprobante_retencion_islr", xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Texto).Size = xventa.RegistroDato.c_ComprobanteRetencionISLR.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@dias_validez", xventa.RegistroDato.c_ValidezDocumentoDias.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@nrf", xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto).Size = xventa.RegistroDato.c_SerialImpresoraFiscal.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_usuario", xventa.RegistroDato.c_AutoUsuario.c_Texto).Size = xventa.RegistroDato.c_AutoUsuario.c_Largo

' ''                    'CAMPOS NUEVOS
' ''                    xcmd.Parameters.AddWithValue("@auto_jornada", xventa.RegistroDato.c_AutomaticoJornada.c_Texto).Size = xventa.RegistroDato.c_AutomaticoJornada.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_operador", xventa.RegistroDato.c_AutomaticoOperador.c_Texto).Size = xventa.RegistroDato.c_AutomaticoOperador.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@serie", xventa.RegistroDato.c_SerieAsignada.c_Texto).Size = xventa.RegistroDato.c_SerieAsignada.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@serial", xventa.RegistroDato.c_SerialUnico_Jornada.c_Texto).Size = xventa.RegistroDato.c_SerialUnico_Jornada.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@bloquear_almacen", xventa.RegistroDato.c_BloquearAlmacen.c_Texto).Size = xventa.RegistroDato.c_BloquearAlmacen.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@origen_documento", xventa.RegistroDato.c_OrigenDocumento.c_Texto).Size = xventa.RegistroDato.c_OrigenDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@rest_numero_mesapedido", xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_NumeroMesaPedido.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@rest_servicio_tasa", xventa.RegistroDato.c_Rest_ServicioTasa.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@rest_servicio_monto", xventa.RegistroDato.c_Rest_ServicioMonto.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@rest_modo_mesapedido", xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Texto).Size = xventa.RegistroDato.c_Rest_ModoMesaPedido.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@descuento_por_prontopago", xventa.RegistroDato.c_DescuentoPorProntoPago.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@relacion_z", xventa.RegistroDato.c_Relacion_Z.c_Valor)
' ''                    xcmd.ExecuteNonQuery()

' ''                    'CXC, sea Contado / Credito
' ''                    Dim xcxc_doc_factura As New FichaCtasCobrar.c_CxC.c_Registro
' ''                    With xcxc_doc_factura
' ''                        .c_AutoAgencia.c_Texto = ""
' ''                        .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
' ''                        .c_AutoCxC.c_Texto = autocxc
' ''                        .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
' ''                        .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
' ''                        .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
' ''                        .c_EstatusCancelado.c_Texto = "0"
' ''                        .c_EstatusDocumentoCxC.c_Texto = "0"
' ''                        .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                        .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
' ''                        .c_MontoAcumulado.c_Valor = 0
' ''                        .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                        .c_MontoPorCobrar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                        .c_NombreAgencia.c_Texto = ""
' ''                        .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
' ''                        .c_NotasDetalles.c_Texto = "DOCUMENTO DE VENTA"
' ''                        .c_Numero.c_Texto = ""
' ''                        .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
' ''                        .c_TipoDocumento.c_Texto = "FAC"
' ''                        .c_TipoMovimiento.c_Valor = 1
' ''                        .c_TipoOperacion.c_Texto = ""
' ''                        .c_AutoMovimientoEntrada.c_Texto = ""

' ''                        'Nuevo
' ''                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                    End With

' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
' ''                    xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_factura.c_FechaProceso.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_factura.c_TipoDocumento.c_Texto).Size = xcxc_doc_factura.c_TipoDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@documento", xcxc_doc_factura.c_NumeroDocumento.c_Texto).Size = xcxc_doc_factura.c_NumeroDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_factura.c_FechaVencimiento.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_factura.c_NotasDetalles.c_Texto).Size = xcxc_doc_factura.c_NotasDetalles.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@importe", xcxc_doc_factura.c_MontoImporte.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_factura.c_MontoAcumulado.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_factura.c_AutoCliente.c_Texto).Size = xcxc_doc_factura.c_AutoCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_factura.c_NombreCliente.c_Texto).Size = xcxc_doc_factura.c_NombreCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_factura.c_CiRifCliente.c_Texto).Size = xcxc_doc_factura.c_CiRifCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_factura.c_CodigoCliente.c_Texto).Size = xcxc_doc_factura.c_CodigoCliente.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_factura.c_EstatusCancelado.c_Texto).Size = xcxc_doc_factura.c_EstatusCancelado.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@resta", xcxc_doc_factura.c_MontoPorCobrar.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_factura.c_TipoOperacion.c_Texto).Size = xcxc_doc_factura.c_TipoOperacion.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_factura.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_factura.c_EstatusDocumentoCxC.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_factura.c_AutoDocumento.c_Texto).Size = xcxc_doc_factura.c_AutoDocumento.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@numero", xcxc_doc_factura.c_Numero.c_Texto).Size = xcxc_doc_factura.c_Numero.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_factura.c_AutoAgencia.c_Texto).Size = xcxc_doc_factura.c_AutoAgencia.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_factura.c_NombreAgencia.c_Texto).Size = xcxc_doc_factura.c_NombreAgencia.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@signo", xcxc_doc_factura.c_TipoMovimiento.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
' ''                    xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
' ''                    xcmd.ExecuteNonQuery()

' ''                    'BUSCAR EL CONCEPTO ADECUADO PARA EL TIPO DE DOCUMENTO
' ''                    Dim auto_concepto As Object = Nothing
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = "select auto from productos_conceptos where codigo='VENTAS'"
' ''                    auto_concepto = xcmd.ExecuteScalar()
' ''                    If (auto_concepto Is Nothing) Or IsDBNull(auto_concepto) Then
' ''                        Throw New Exception("CONCEPTO 'VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
' ''                    End If

' ''                    Dim xconcepto As String = ""
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
' ''                    xcmd.Parameters.AddWithValue("@auto", auto_concepto)
' ''                    xconcepto = xcmd.ExecuteScalar

' ''                    'ACTUALIZO DEPOSITO, SI EXISTE UN DOCUMENTO TIPO PEDIDO LA CUAL BLOQUEA LA EXISTENCIA
' ''                    Dim xdoc_origen As FichaVentas.V_Ventas.c_Registro = Nothing
' ''                    Dim xtablaNotaEnt As New DataTable
' ''                    If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
' ''                        Dim xdr As SqlDataReader
' ''                        Dim xtb1 As New DataTable
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "select * from ventas where auto=@autodoc"
' ''                        xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
' ''                        xdr = xcmd.ExecuteReader()
' ''                        xtb1.Load(xdr)
' ''                        xdr.Close()

' ''                        If xtb1.Rows.Count = 0 Then
' ''                            Throw New Exception("DOCUMENTO ORIGEN NO ENCONTRADO , VERIFIQUE POR FAVOR")
' ''                        End If

' ''                        xdoc_origen = New FichaVentas.V_Ventas.c_Registro
' ''                        xdoc_origen.CargarRegistro(xtb1.Rows(0))

' ''                        If xdoc_origen._EstatusDocumento = TipoEstatus.Inactivo Then
' ''                            Throw New Exception("DOCUMENTO ORIGEN HA SIDO ANULADO POR OTRO USUARIO / NO ENCONTRADO , VERIFIQUE POR FAVOR")
' ''                        Else
' ''                            'GENERO UNA TABLA LA CUAL GUARDA LA CANTIDAD TOTAL EN INVENTARIO USADA POR CADA PRODUCTO
' ''                            Dim xtabla_inv As New DataTable
' ''                            Dim xrd_inv As SqlDataReader
' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "select auto_productos, SUM(cantidad_inventario) as xcantidad ,auto_deposito " & _
' ''                                                "from ventas_detalle where auto_documento=@auto_doc_origen group by auto_productos,auto_deposito"
' ''                            xcmd.Parameters.AddWithValue("@auto_doc_origen", xdoc_origen._AutoDocumento)
' ''                            xrd_inv = xcmd.ExecuteReader()
' ''                            xtabla_inv.Load(xrd_inv)

' ''                            If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
' ''                                If xdoc_origen._BloquearExistencia = True Then
' ''                                    ' ACTUALIZO EL DEPOSITO 
' ''                                    For Each DR_INV As DataRow In xtabla_inv.Rows
' ''                                        Dim xres_1 As Integer = 0
' ''                                        xcmd.Parameters.Clear()
' ''                                        xcmd.CommandText = "update productos_deposito set reservada=reservada-@CANTIDAD, " & _
' ''                                           "disponible=disponible+@CANTIDAD from productos_deposito " & _
' ''                                           "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
' ''                                        xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
' ''                                        xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
' ''                                        xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
' ''                                        xres_1 = xcmd.ExecuteNonQuery()
' ''                                        If xres_1 = 0 Then
' ''                                            Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA  RESERVADA POR PEDIDO")
' ''                                        End If
' ''                                    Next
' ''                                End If
' ''                            End If
' ''                            If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.NotaEntrega Then
' ''                                ' ACTUALIZO EL DEPOSITO 
' ''                                For Each DR_INV As DataRow In xtabla_inv.Rows
' ''                                    Dim xres_1 As Integer = 0
' ''                                    xcmd.Parameters.Clear()
' ''                                    xcmd.CommandText = "update productos_deposito set real=real+@CANTIDAD, " & _
' ''                                       "disponible=disponible+@CANTIDAD from productos_deposito " & _
' ''                                       "where AUTO_PRODUCTO=@AUTO_PRODUCTO AND AUTO_DEPOSITO=@AUTO_DEPOSITO"
' ''                                    xcmd.Parameters.AddWithValue("@AUTO_PRODUCTO", DR_INV("auto_productos".ToString.Trim))
' ''                                    xcmd.Parameters.AddWithValue("@AUTO_DEPOSITO", DR_INV("auto_deposito".ToString.Trim))
' ''                                    xcmd.Parameters.AddWithValue("@CANTIDAD", DR_INV("xcantidad"))
' ''                                    xres_1 = xcmd.ExecuteNonQuery()
' ''                                    If xres_1 = 0 Then
' ''                                        Throw New Exception("PROBLEMA AL ACTUALIZAR EXISTENCIA DESPACHADA POR N/ENTREGA")
' ''                                    End If
' ''                                Next

' ''                                Dim xrd_notaent As SqlDataReader
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select * from ventas_detalle where auto_documento=@auto_doc"
' ''                                xcmd.Parameters.AddWithValue("@auto_doc", xdoc_origen._AutoDocumento)
' ''                                xrd_notaent = xcmd.ExecuteReader()
' ''                                xtablaNotaEnt.Load(xrd_notaent)
' ''                            End If
' ''                        End If
' ''                    End If

' ''                    'VERIFICO SI HAY REGISTROS EN NOTAS DE ENTREGA, PARA EVALUAR CUALES FUERON PROCESADOS Y CUALES NO
' ''                    For Each xrd_ne As DataRow In xtablaNotaEnt.Rows
' ''                        Dim xitem As String = xrd_ne("auto").ToString.Trim
' ''                        Dim xcant_ne As Decimal = xrd_ne("cantidad_inventario")
' ''                        Dim xvent As Boolean = False
' ''                        Dim xcant_vt As Decimal = 0
' ''                        Dim xcant_vt_unid As Decimal = 0

' ''                        Dim xdetalle_ne As New FichaVentas.V_VentasDetalle
' ''                        xdetalle_ne.F_BuscarCargar(xdoc_origen._AutoDocumento, xitem)

' ''                        For Each xdetalle As FichaVentas.V_VentasDetalle.AgregarDetalleVenta In xventadetalle
' ''                            If xdetalle._FichaItem_DocOrigen IsNot Nothing Then
' ''                                If xitem = xdetalle._FichaItem_DocOrigen._AutoItem Then
' ''                                    xvent = True
' ''                                    xcant_vt = xdetalle.RegistroDato._CantidadDespachada
' ''                                    xcant_vt_unid = xdetalle.RegistroDato._CantidadUnidadInventario
' ''                                    Exit For
' ''                                End If
' ''                            End If
' ''                        Next

' ''                        'VERIFICO SI EL PRODUCTO FUE FACTURADO, Y QUE CANTIDAD FUE DESPACHADA
' ''                        If xvent = True Then
' ''                            'VERIFICO SI LA CANTIDAD DESPACHA EN VENTA ES LA MISMA A LA DE NOTA DE ENTREGA
' ''                            If xcant_ne = xcant_vt_unid Then
' ''                                ' SE REALIZA UN AJUSTE AUTORIZADO PARA DAR ENTRADA AL PRODUCTO PROCESADO POR LA NOTA DE ENTREGE PARA LUEGO HACER UNA SALIDA DEL MISMO POR VENTA

' ''                                Dim auto_concepto_ajuste As Object = Nothing
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
' ''                                auto_concepto_ajuste = xcmd.ExecuteScalar()
' ''                                If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
' ''                                    Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
' ''                                End If

' ''                                Dim xconcepto_ajuste As String = ""
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
' ''                                xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
' ''                                xconcepto_ajuste = xcmd.ExecuteScalar

' ''                                Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
' ''                                With xkardex
' ''                                    .c_AutoConcepto.c_Texto = auto_concepto_ajuste
' ''                                    .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
' ''                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
' ''                                    .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
' ''                                    .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
' ''                                    .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
' ''                                    .c_Documento.c_Texto = xdoc_origen._Documento
' ''                                    .c_Entidad.c_Texto = xdoc_origen._NombreCliente
' ''                                    .c_Estatus.c_Texto = "0"
' ''                                    .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
' ''                                    .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN SU TOTALIDAD SEGUN FACTURA #: " + xventa.RegistroDato._Documento
' ''                                    .c_OrigenMovimiento.c_Texto = "0801"
' ''                                    .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
' ''                                    .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
' ''                                    'Campos Nuevos
' ''                                    .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
' ''                                    .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
' ''                                    .c_NombreConcepto.c_Texto = xconcepto_ajuste
' ''                                    .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
' ''                                    .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
' ''                                    .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
' ''                                    .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
' ''                                    .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
' ''                                    .c_CodigoConcepto.c_Texto = "AJUSTE"
' ''                                End With

' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
' ''                                xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
' ''                                'Campos Nuevos
' ''                                xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
' ''                                If xcmd.ExecuteNonQuery() = 0 Then
' ''                                    Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
' ''                                End If

' ''                            Else
' ''                                'SE HACE UN AJUSTE AUTORIZADO SOLICITANDO LA ENTRADA DE LO FACTURADO 

' ''                                Dim auto_concepto_ajuste As Object = Nothing
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select auto from productos_conceptos where codigo='AJUSTE'"
' ''                                auto_concepto_ajuste = xcmd.ExecuteScalar()
' ''                                If (auto_concepto_ajuste Is Nothing) Or IsDBNull(auto_concepto_ajuste) Then
' ''                                    Throw New Exception("CONCEPTO 'AJUSTE' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
' ''                                End If

' ''                                Dim xconcepto_ajuste As String = ""
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
' ''                                xcmd.Parameters.AddWithValue("@auto", auto_concepto_ajuste)
' ''                                xconcepto_ajuste = xcmd.ExecuteScalar

' ''                                Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
' ''                                With xkardex
' ''                                    .c_AutoConcepto.c_Texto = auto_concepto_ajuste
' ''                                    .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
' ''                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
' ''                                    .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
' ''                                    .c_CantidadMover.c_Valor = xcant_vt
' ''                                    .c_CantidadUnidadesMover.c_Valor = xcant_vt_unid
' ''                                    .c_Documento.c_Texto = xdoc_origen._Documento
' ''                                    .c_Entidad.c_Texto = xdoc_origen._NombreCliente
' ''                                    .c_Estatus.c_Texto = "0"
' ''                                    .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
' ''                                    .c_NotasDetallesMovimiento.c_Texto = "PROCESADO EN PARTE SEGUN FACTURA #: " + xventa.RegistroDato._Documento
' ''                                    .c_OrigenMovimiento.c_Texto = "0801"
' ''                                    .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
' ''                                    .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
' ''                                    'Campos Nuevos
' ''                                    .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
' ''                                    .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
' ''                                    .c_NombreConcepto.c_Texto = xconcepto_ajuste
' ''                                    .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
' ''                                    .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
' ''                                    .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
' ''                                    .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
' ''                                    .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
' ''                                    .c_CodigoConcepto.c_Texto = "AJUSTE"
' ''                                End With

' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
' ''                                xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
' ''                                'Campos Nuevos
' ''                                xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
' ''                                If xcmd.ExecuteNonQuery() = 0 Then
' ''                                    Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
' ''                                End If


' ''                                ' DEBO HACER UNA DEVOLUCION DEL SOBRANTE PARA KARDEX

' ''                                Dim auto_concepto_dev As Object = Nothing
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
' ''                                auto_concepto_dev = xcmd.ExecuteScalar()
' ''                                If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
' ''                                    Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
' ''                                End If

' ''                                Dim xconcepto_dev As String = ""
' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
' ''                                xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
' ''                                xconcepto_dev = xcmd.ExecuteScalar

' ''                                xkardex = New FichaProducto.Prd_Kardex.c_Registro
' ''                                With xkardex
' ''                                    .c_AutoConcepto.c_Texto = auto_concepto_dev
' ''                                    .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
' ''                                    .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
' ''                                    .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
' ''                                    .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada - xcant_vt
' ''                                    .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario - xcant_vt_unid
' ''                                    .c_Documento.c_Texto = xdoc_origen._Documento
' ''                                    .c_Entidad.c_Texto = xdoc_origen._NombreCliente
' ''                                    .c_Estatus.c_Texto = "0"
' ''                                    .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
' ''                                    .c_NotasDetallesMovimiento.c_Texto = "SIN PROCESAR SEGUN FACTURA #: " + xventa.RegistroDato._Documento
' ''                                    .c_OrigenMovimiento.c_Texto = "0801"
' ''                                    .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
' ''                                    .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
' ''                                    'Campos Nuevos
' ''                                    .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
' ''                                    .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
' ''                                    .c_NombreConcepto.c_Texto = xconcepto_dev
' ''                                    .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
' ''                                    .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
' ''                                    .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
' ''                                    .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
' ''                                    .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
' ''                                    .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
' ''                                End With

' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
' ''                                xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
' ''                                'Campos Nuevos
' ''                                xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
' ''                                If xcmd.ExecuteNonQuery() = 0 Then
' ''                                    Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
' ''                                End If

' ''                            End If
' ''                        Else
' ''                            'SIGNIFICA QUE SE DEBE HACER UNA DEVOLUCION TOTAL DEL ITEM PARA EL KARDEX

' ''                            Dim auto_concepto_dev As Object = Nothing
' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "select auto from productos_conceptos where codigo='DEV_VENTAS'"
' ''                            auto_concepto_dev = xcmd.ExecuteScalar()
' ''                            If (auto_concepto_dev Is Nothing) Or IsDBNull(auto_concepto_dev) Then
' ''                                Throw New Exception("CONCEPTO 'DEV_VENTAS' NO ESTA DEFINIDO EN LA TABLA CONCEPTOS DE MOVIMIENTO DEL INVENTARIO")
' ''                            End If

' ''                            Dim xconcepto_dev As String = ""
' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "select nombre from productos_conceptos where auto=@auto"
' ''                            xcmd.Parameters.AddWithValue("@auto", auto_concepto_dev)
' ''                            xconcepto_dev = xcmd.ExecuteScalar

' ''                            Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
' ''                            With xkardex
' ''                                .c_AutoConcepto.c_Texto = auto_concepto_dev
' ''                                .c_AutoDeposito.c_Texto = xdetalle_ne.RegistroDato._AutoDeposito
' ''                                .c_AutoDocumento.c_Texto = xventa.RegistroDato._AutoDocumento
' ''                                .c_AutoProducto.c_Texto = xdetalle_ne.RegistroDato._AutoProducto
' ''                                .c_CantidadMover.c_Valor = xdetalle_ne.RegistroDato._CantidadDespachada
' ''                                .c_CantidadUnidadesMover.c_Valor = xdetalle_ne.RegistroDato._CantidadUnidadInventario
' ''                                .c_Documento.c_Texto = xdoc_origen._Documento
' ''                                .c_Entidad.c_Texto = xdoc_origen._NombreCliente
' ''                                .c_Estatus.c_Texto = "0"
' ''                                .c_FechaEmision.c_Valor = xventa.RegistroDato._FechaEmision
' ''                                .c_NotasDetallesMovimiento.c_Texto = "NO SE PROCESO EN FACTURA #: " + xventa.RegistroDato._Documento
' ''                                .c_OrigenMovimiento.c_Texto = "0801"
' ''                                .c_ReferenciaEmpaque.c_Texto = xdetalle_ne.RegistroDato._ReferenciaEmpaque
' ''                                .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Entrada
' ''                                'Campos Nuevos
' ''                                .c_NombreProducto.c_Texto = xdetalle_ne.RegistroDato._NombreProducto
' ''                                .c_NombreDeposito.c_Texto = xdetalle_ne.RegistroDato._NombreDeposito
' ''                                .c_NombreConcepto.c_Texto = xconcepto_dev
' ''                                .c_NombreMedidaEmpaque.c_Texto = xdetalle_ne.RegistroDato._NombreEmpaque
' ''                                .c_AutoMedida.c_Texto = xdetalle_ne.RegistroDato._AutoMedida
' ''                                .c_ContenidoMedidaEmpaque.c_Valor = xdetalle_ne.RegistroDato._ContenidoEmpaque
' ''                                .c_CodigoProducto.c_Texto = xdetalle_ne.RegistroDato._CodigoProducto
' ''                                .c_CodigoDeposito.c_Texto = xdetalle_ne.RegistroDato._CodigoDeposito
' ''                                .c_CodigoConcepto.c_Texto = "DEV_VENTAS"
' ''                            End With

' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
' ''                            xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
' ''                            xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
' ''                            xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
' ''                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
' ''                            xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
' ''                            'Campos Nuevos
' ''                            xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
' ''                            xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
' ''                            If xcmd.ExecuteNonQuery() = 0 Then
' ''                                Throw New Exception("PROBLEMA AL GRABAR MOVIMIENTO KARDEX DEVOLUCION MERCANCIA POR NOTA DE ENTREGA")
' ''                            End If
' ''                        End If
' ''                    Next


' ''                    'VENTAS_DETALLE
' ''                    For Each xdetalle In xventadetalle
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_DETALLE

' ''                        With xdetalle
' ''                            .RegistroDato.c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
' ''                        End With

' ''                        xcmd.Parameters.AddWithValue("@auto_documento", xdetalle.RegistroDato.c_AutoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_productos", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@codigo", xdetalle.RegistroDato.c_CodigoProducto.c_Texto).Size = xdetalle.RegistroDato.c_CodigoProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@nombre", xdetalle.RegistroDato.c_NombreProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_departamento", xdetalle.RegistroDato.c_AutoDepartamento.c_Texto).Size = xdetalle.RegistroDato.c_AutoDepartamento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_grupo", xdetalle.RegistroDato.c_AutoGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoGrupo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_subgrupo", xdetalle.RegistroDato.c_AutoSubGrupo.c_Texto).Size = xdetalle.RegistroDato.c_AutoSubGrupo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cantidad", xdetalle.RegistroDato.c_CantidadDespachada.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@empaque", xdetalle.RegistroDato.c_NombreEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_NombreEmpaque.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@descuento1p", xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuento2p", xdetalle.RegistroDato.c_DescuentoTasa_2.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuento3p", xdetalle.RegistroDato.c_DescuentoTasa_3.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuento1", xdetalle.RegistroDato.c_DescuentoMonto_1.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuento2", xdetalle.RegistroDato.c_DescuentoMonto_2.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuento3", xdetalle.RegistroDato.c_DescuentoMonto_3.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@total_neto", xdetalle.RegistroDato.c_TotalNeto.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@tasa", xdetalle.RegistroDato.c_TasaIva.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@impuesto", xdetalle.RegistroDato.c_MontoIva.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@total", xdetalle.RegistroDato.c_TotalGeneral.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoItem.c_Texto).Size = xdetalle.RegistroDato.c_AutoItem.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@codigo_tasa", xdetalle.RegistroDato.c_TipoTasaIva.c_Texto).Size = xdetalle.RegistroDato.c_TipoTasaIva.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@estatus", xdetalle.RegistroDato.c_Estatus.c_Texto).Size = xdetalle.RegistroDato.c_Estatus.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha", xdetalle.RegistroDato.c_FechaEmision.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@tipo", xdetalle.RegistroDato.c_TipoDocumento.c_Texto).Size = xdetalle.RegistroDato.c_TipoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@deposito", xdetalle.RegistroDato.c_NombreDeposito.c_Texto).Size = xdetalle.RegistroDato.c_NombreDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@signo", xdetalle.RegistroDato.c_SignoDocumento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_entidad", xdetalle.RegistroDato.c_AutoCliente.c_Texto).Size = xdetalle.RegistroDato.c_AutoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@decimales", xdetalle.RegistroDato.c_NumeroDecimales.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@contenido_empaque", xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@costo_inventario", xdetalle.RegistroDato.c_CostoInventario.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@precio_neto", xdetalle.RegistroDato.c_PrecioNeto.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@costo_venta", Decimal.Round(xdetalle.RegistroDato.c_CostoVenta.c_Valor * xdetalle.RegistroDato.c_CantidadDespachada.c_Valor, 2, MidpointRounding.AwayFromZero))
' ''                        xcmd.Parameters.AddWithValue("@precio_final", xdetalle.RegistroDato.c_PrecioFinal.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@precio_inventario", xdetalle.RegistroDato.c_PrecioInventario.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@utilidad", xdetalle.RegistroDato.c_UtilidadMonto.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@utilidadp", xdetalle.RegistroDato.c_UtilidadTasa.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@precio_item", xdetalle.RegistroDato.c_PrecioItem.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@estatus_garantia", xdetalle.RegistroDato.c_EstatusGarantia.c_Texto).Size = xdetalle.RegistroDato.c_EstatusGarantia.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@estatus_serial", xdetalle.RegistroDato.c_EstatusSerial.c_Texto).Size = xdetalle.RegistroDato.c_EstatusSerial.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@codigo_deposito", xdetalle.RegistroDato.c_CodigoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_CodigoDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@dias_garantia", xdetalle.RegistroDato.c_DiasGarantia.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@detalle", xdetalle.RegistroDato.c_DetalleNotas.c_Texto).Size = xdetalle.RegistroDato.c_DetalleNotas.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@psv", xdetalle.RegistroDato.c_PrecioSugerido.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@empaque_tipo", xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto).Size = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@estatus_corte", xdetalle.RegistroDato.c_EstatusCorte.c_Texto).Size = xdetalle.RegistroDato.c_EstatusCorte.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@x", xdetalle.RegistroDato.c_Corte_X.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@y", xdetalle.RegistroDato.c_Corte_Y.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@z", xdetalle.RegistroDato.c_Corte_Z.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@corte", xdetalle.RegistroDato.c_Corte.c_Texto).Size = xdetalle.RegistroDato.c_Corte.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@categoria", xdetalle.RegistroDato.c_CategoriaProducto.c_Texto).Size = xdetalle.RegistroDato.c_CategoriaProducto.c_Largo
' ''                        'CAMPOS NUEVOS, PARA EL PTO DE VENTA
' ''                        xcmd.Parameters.AddWithValue("@N_esoferta", xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EstaEnOferta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_espesado", xdetalle.RegistroDato.c_PTO_EsPesado.c_Texto).Size = xdetalle.RegistroDato.c_PTO_EsPesado.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_codigobarra", xdetalle.RegistroDato.c_PTO_CodigoBarra.c_Texto)
' ''                        xcmd.Parameters.AddWithValue("@N_plu", xdetalle.RegistroDato.c_PTO_Plu.c_Texto).Size = xdetalle.RegistroDato.c_PTO_Plu.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_formato", xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_FormatoEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_depart", xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroDepartEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_seccion", xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_SeccionEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_vendedor", xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_VendedorEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_plu", xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_PluEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_peso", xdetalle.RegistroDato.c_PTO_PesoEtiqueta.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_precio", xdetalle.RegistroDato.c_PTO_PrecioEtiqueta.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_control", xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroControlEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_digitos", xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_DigitosEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_ticket", xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroTicketEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_numbalanza", xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Texto).Size = xdetalle.RegistroDato.c_PTO_NumeroBalanzaEtiqueta.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_montoitem", xdetalle.RegistroDato.c_PTO_MontoTotalEtiqueta.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@N_etiq_numitem", xdetalle.RegistroDato.c_PTO_NumeroItemEtiqueta.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@N_auto_jornada", xdetalle.RegistroDato.c_PTO_AutoJornada.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoJornada.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_auto_operador", xdetalle.RegistroDato.c_PTO_AutoOperador.c_Texto).Size = xdetalle.RegistroDato.c_PTO_AutoOperador.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_automedida", xdetalle.RegistroDato.c_AutoMedida.c_Texto).Size = xdetalle.RegistroDato.c_AutoMedida.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_forzarmedida", xdetalle.RegistroDato.c_ForzarMedida.c_Texto).Size = xdetalle.RegistroDato.c_ForzarMedida.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_TipoCalculoUtilidad", xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Texto).Size = xdetalle.RegistroDato.c_TipoCalculoUtilidad.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@N_TipoMovimiento", xdetalle.RegistroDato.c_TipoMovimiento.c_Texto).Size = xdetalle.RegistroDato.c_TipoMovimiento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_auto_item_origen", xdetalle.RegistroDato.c_AutoItemOrigen.c_Texto).Size = xdetalle.RegistroDato.c_AutoItemOrigen.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_nombre_corto", xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto).Size = xdetalle.RegistroDato.c_NombreCortoProducto.c_Largo

' ''                        xcmd.Parameters.AddWithValue("@n_licor_capacidad", xdetalle.RegistroDato._f_FichaProducto._CapacidadBotellaLicor)
' ''                        xcmd.Parameters.AddWithValue("@n_licor_grados", xdetalle.RegistroDato._f_FichaProducto._GradosAlcoholdBotellaLicor)
' ''                        xcmd.Parameters.AddWithValue("@n_licor_nacional_importado", xdetalle.RegistroDato._f_FichaProducto._OrigenDelProducto.Substring(0, 1)).Size = 1

' ''                        xcmd.ExecuteNonQuery()

' ''                        'PRODUCTOS_DEPOSITO
' ''                        If xdetalle._DepositoBloqueado Then
' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = FichaVentas.PRODUCTOS_DEPOSITO_DESBLOQUEAR
' ''                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
' ''                            xcmd.ExecuteNonQuery()
' ''                        End If

' ''                        If xcondiciones._Permitir_RupturaPorExistencia Then
' ''                            Dim xdisp As Decimal = 0
' ''                            Dim xreal As Decimal = 0

' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "select disponible from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
' ''                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
' ''                            xdisp = xcmd.ExecuteScalar()

' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "select real from productos_deposito where auto_producto=@auto_producto and auto_deposito=@auto_deposito"
' ''                            xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
' ''                            xreal = xcmd.ExecuteScalar()

' ''                            ''27/06/2018
' ''                            If xdoc_origen IsNot Nothing Then
' ''                                If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
' ''                                    If xdoc_origen._BloquearExistencia Then
' ''                                        If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                                        Else
' ''                                            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                                        End If
' ''                                    End If
' ''                                Else
' ''                                    If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                                    Else
' ''                                        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                                    End If

' ''                                    If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                                    Else
' ''                                        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
' ''                                    End If
' ''                                End If
' ''                            Else
' ''                                If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                                Else
' ''                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                                End If

' ''                                If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                                Else
' ''                                    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
' ''                                End If
' ''                            End If

' ''                            ' '' 12/06/2018
' ''                            'If xdoc_origen._TipoDocumento = TipoDocumentoVentaRegistrado.Pedido Then
' ''                            '    If xdoc_origen._BloquearExistencia Then
' ''                            '        If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                            '        Else
' ''                            '            Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                            '        End If
' ''                            '    End If
' ''                            'Else
' ''                            '    If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                            '    Else
' ''                            '        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                            '    End If

' ''                            '    If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                            '    Else
' ''                            '        Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
' ''                            '    End If
' ''                            'End If

' ''                            'If xreal >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                            'Else
' ''                            '    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA REAL PARA DESPACHAR")
' ''                            'End If

' ''                            'If xdisp >= xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor Then
' ''                            'Else
' ''                            '    Throw New Exception("ERROR AL PROCESAR ITEM" + vbCrLf + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "NO HAY EXISTENCIA DISPONIBLE PARA DESPACHAR")
' ''                            'End If
' ''                        End If

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaVentas.VENTAS_UPDATE_PRODUCTOS_DEPOSITO
' ''                        xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_deposito", xdetalle.RegistroDato.c_AutoDeposito.c_Texto).Size = xdetalle.RegistroDato.c_AutoDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor)
' ''                        xcmd.ExecuteNonQuery()

' ''                        'PRODUCTOS_KARDEX
' ''                        Dim xkardex As New FichaProducto.Prd_Kardex.c_Registro
' ''                        With xkardex
' ''                            .c_AutoConcepto.c_Texto = auto_concepto
' ''                            .c_AutoDeposito.c_Texto = xdetalle.RegistroDato.c_AutoDeposito.c_Texto
' ''                            .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
' ''                            .c_AutoProducto.c_Texto = xdetalle.RegistroDato.c_AutoProducto.c_Texto
' ''                            .c_CantidadMover.c_Valor = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
' ''                            .c_CantidadUnidadesMover.c_Valor = xdetalle.RegistroDato.c_CantidadUnidadInventario.c_Valor
' ''                            .c_Documento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
' ''                            .c_Entidad.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
' ''                            .c_Estatus.c_Texto = xventa.RegistroDato.c_EstatusDocumento.c_Texto
' ''                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                            .c_NotasDetallesMovimiento.c_Texto = ""
' ''                            .c_OrigenMovimiento.c_Texto = "0801"
' ''                            .c_ReferenciaEmpaque.c_Texto = xdetalle.RegistroDato.c_ReferenciaEmpaque.c_Texto
' ''                            .c_TipoMovimiento.c_Valor = TipoMovimientoInventario.Salida
' ''                            'Campos Nuevos
' ''                            .c_NombreProducto.c_Texto = xdetalle.RegistroDato.c_NombreProducto.c_Texto.Trim
' ''                            .c_NombreDeposito.c_Texto = xdetalle.RegistroDato.c_NombreDeposito.c_Texto.Trim
' ''                            .c_NombreConcepto.c_Texto = xconcepto
' ''                            .c_NombreMedidaEmpaque.c_Texto = xdetalle.RegistroDato.c_NombreEmpaque.c_Texto.Trim
' ''                            .c_AutoMedida.c_Texto = xdetalle.RegistroDato.c_AutoMedida.c_Texto.Trim
' ''                            .c_ContenidoMedidaEmpaque.c_Valor = xdetalle.RegistroDato.c_ContenidoEmpaque.c_Valor
' ''                            .c_CodigoProducto.c_Texto = xdetalle.RegistroDato._CodigoProducto
' ''                            .c_CodigoDeposito.c_Texto = xdetalle.RegistroDato._CodigoDeposito
' ''                            .c_CodigoConcepto.c_Texto = "VENTAS"
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaProducto.Prd_Kardex.INSERT_PRODUCTOS_KARDEX
' ''                        xcmd.Parameters.AddWithValue("@auto_producto", xkardex.c_AutoProducto.c_Texto).Size = xkardex.c_AutoProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha", xkardex.c_FechaEmision.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_deposito", xkardex.c_AutoDeposito.c_Texto).Size = xkardex.c_AutoDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cantidad", xkardex.c_CantidadMover.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_concepto", xkardex.c_AutoConcepto.c_Texto).Size = xkardex.c_AutoConcepto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@entidad", xkardex.c_Entidad.c_Texto).Size = xkardex.c_Entidad.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@documento", xkardex.c_Documento.c_Texto).Size = xkardex.c_Documento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@medida_empaque", xkardex.c_ReferenciaEmpaque.c_Texto).Size = xkardex.c_ReferenciaEmpaque.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@signo", xkardex.c_TipoMovimiento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@cantidad_inventario", xkardex.c_CantidadUnidadesMover.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@estatus", xkardex.c_Estatus.c_Texto).Size = xkardex.c_Estatus.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@origen", xkardex.c_OrigenMovimiento.c_Texto).Size = xkardex.c_OrigenMovimiento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_documento", xkardex.c_AutoDocumento.c_Texto).Size = xkardex.c_AutoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@nota", xkardex.c_NotasDetallesMovimiento.c_Texto).Size = xkardex.c_NotasDetallesMovimiento.c_Largo
' ''                        'Campos Nuevos
' ''                        xcmd.Parameters.AddWithValue("@n_nombreproducto", xkardex.c_NombreProducto.c_Texto).Size = xkardex.c_NombreProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_nombredeposito", xkardex.c_NombreDeposito.c_Texto).Size = xkardex.c_NombreDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_nombreconcepto", xkardex.c_NombreConcepto.c_Texto).Size = xkardex.c_NombreConcepto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_nombremedidaempaque", xkardex.c_NombreMedidaEmpaque.c_Texto).Size = xkardex.c_NombreMedidaEmpaque.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_automedida", xkardex.c_AutoMedida.c_Texto).Size = xkardex.c_AutoMedida.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_contenidomedidaempaque", xkardex.c_ContenidoMedidaEmpaque.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@n_codigoproducto", xkardex.c_CodigoProducto.c_Texto).Size = xkardex.c_CodigoProducto.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_codigodeposito", xkardex.c_CodigoDeposito.c_Texto).Size = xkardex.c_CodigoDeposito.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@n_codigoconcepto", xkardex.c_CodigoConcepto.c_Texto).Size = xkardex.c_CodigoConcepto.c_Largo
' ''                        xcmd.ExecuteNonQuery()

' ''                        'CARGAR REGISTRO DE PRODUCTO A IMPRRIMIR EN IMP FISCAL
' ''                        Dim dr As DataRow = xtablaprd.NewRow
' ''                        dr("cantidad") = xdetalle.RegistroDato.c_CantidadDespachada.c_Valor
' ''                        'dr("nombre") = "EMP:" + xdetalle.RegistroDato._NombreEmpaque.Trim + ", " + xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto.Trim
' ''                        dr("nombre") = xdetalle.RegistroDato.c_NombreCortoProducto.c_Texto.Trim
' ''                        dr("codigo") = xdetalle.RegistroDato.c_CodigoProducto.c_Texto.Trim
' ''                        dr("descuento1p") = xdetalle.RegistroDato.c_DescuentoTasa_1.c_Valor
' ''                        dr("precio_neto") = xdetalle.RegistroDato.c_PrecioNeto.c_Valor
' ''                        dr("codigo_tasa") = xdetalle.RegistroDato._TipoTasaIva
' ''                        dr("detalle") = xdetalle.RegistroDato.c_DetalleNotas.c_Texto.Trim
' ''                        dr("SUBDETALLE") = ""

' ''                        Select Case ximpresora._SubDetalleFiscal_1.Trim.ToUpper
' ''                            Case "@CODIGO_PRODUCTO"
' ''                                dr("SUBDETALLE") += "COD:" + xdetalle.RegistroDato._CodigoProducto
' ''                            Case "@NOMBRE_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += "EMP:" + xdetalle.RegistroDato._NombreEmpaque
' ''                            Case "@CONTENIDO_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += "CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
' ''                            Case "@PRECIO_SUGERIDO_PRODUCTO"
' ''                                dr("SUBDETALLE") += "PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
' ''                            Case "@PRECIO_LIQUIDA_PRODUCTO"
' ''                                dr("SUBDETALLE") += "PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
' ''                        End Select

' ''                        Select Case ximpresora._SubDetalleFiscal_2.Trim.ToUpper
' ''                            Case "@CODIGO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
' ''                            Case "@NOMBRE_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
' ''                            Case "@CONTENIDO_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
' ''                            Case "@PRECIO_SUGERIDO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
' ''                            Case "@PRECIO_LIQUIDA_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
' ''                        End Select

' ''                        Select Case ximpresora._SubDetalleFiscal_3.Trim.ToUpper
' ''                            Case "@CODIGO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
' ''                            Case "@NOMBRE_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
' ''                            Case "@CONTENIDO_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
' ''                            Case "@PRECIO_SUGERIDO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
' ''                            Case "@PRECIO_LIQUIDA_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
' ''                        End Select

' ''                        Select Case ximpresora._SubDetalleFiscal_4.Trim.ToUpper
' ''                            Case "@CODIGO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", COD:" + xdetalle.RegistroDato._CodigoProducto
' ''                            Case "@NOMBRE_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", EMP:" + xdetalle.RegistroDato._NombreEmpaque
' ''                            Case "@CONTENIDO_EMPAQUE_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", CONT:" + xdetalle.RegistroDato._ContenidoEmpaque.ToString.Trim
' ''                            Case "@PRECIO_SUGERIDO_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PSV:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioSugerido)
' ''                            Case "@PRECIO_LIQUIDA_PRODUCTO"
' ''                                dr("SUBDETALLE") += ", PLQ:" + String.Format("{0:#0.00}", xdetalle.RegistroDato._PrecioLiquida)
' ''                        End Select

' ''                        xtablaprd.Rows.Add(dr)

' ''                        'VERIFICO ESTATUS / EXISTENCIA DEL PRODUCTO 
' ''                        Dim xestatus As String = ""
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "SELECT ESTATUS FROM PRODUCTOS WHERE AUTO=@AUTO"
' ''                        xcmd.Parameters.AddWithValue("@auto", xdetalle.RegistroDato.c_AutoProducto.c_Texto).Size = xdetalle.RegistroDato.c_AutoProducto.c_Largo
' ''                        xestatus = xcmd.ExecuteScalar().ToString.Trim.ToUpper
' ''                        If xestatus <> "ACTIVO" Then
' ''                            Throw New Exception("PRODUCTO: " + xdetalle.RegistroDato.c_NombreProducto.c_Texto + vbCrLf + "CAMBIO DE ESTATUS, VERIFIQUE")
' ''                        End If

' ''                        If xcondiciones._Permitir_PrecioCero = False AndAlso xcondiciones._Permitir_PrecioMenorCosto = False Then
' ''                            ''VERIFICO COSTO ACTUAL DEL PRODUCTO Y COMPARO CON PRECIO DE VENTA ACTUAL
' ''                            'Dim xres As Integer = 0
' ''                            'xcmd.Parameters.Clear()
' ''                            'xcmd.CommandType = CommandType.Text
' ''                            'xcmd.CommandText = "select  dbo.verificarcosto_al_procesarventa(@auto_producto,@precio_venta)"
' ''                            'xcmd.Parameters.AddWithValue("@auto_producto", xdetalle.RegistroDato._AutoProducto)
' ''                            'xcmd.Parameters.AddWithValue("@precio_venta", xdetalle.RegistroDato._PrecioFinal)
' ''                            'xres = xcmd.ExecuteScalar()
' ''                            'If xres = 1 Then
' ''                            '    Dim xmens As String = "ERROR... PRODUCTO POR DEBAJO DEL COSTO, VERIFIQUE POR FAVOR" & vbCrLf & xdetalle.RegistroDato._NombreProducto
' ''                            '    Throw New Exception(xmens)
' ''                            'End If
' ''                        End If
' ''                    Next

' ''                    'FACTURA CONTADO
' ''                    Dim MontoNotaCredito As Decimal = 0
' ''                    Dim CantNotaCredito As Decimal = 0
' ''                    Dim MontoAnticipo As Decimal = 0
' ''                    If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Contado Then
' ''                        For Each xpag In xpagos
' ''                            If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "NC00000001" Then
' ''                                MontoNotaCredito += xpag.RegsitroDato.c_MontoImporte.c_Valor
' ''                                CantNotaCredito += 1
' ''                            End If
' ''                            If xpag.RegsitroDato.c_AutoTipoPago.c_Texto = "AN00000001" Then
' ''                                MontoAnticipo += xpag.RegsitroDato.c_MontoImporte.c_Valor
' ''                            End If
' ''                        Next

' ''                        Dim autocxc_pago As String = ""
' ''                        Dim autocxc_recibopago As String = ""
' ''                        Dim autocxc_numerorecibopago As String = ""

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "update contadores SET a_cxc=a_cxc+1;select a_cxc from contadores"
' ''                        autocxc_pago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "update contadores set a_cxc_recibos=a_cxc_recibos+1;select a_cxc_recibos from contadores"
' ''                        autocxc_recibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "update contadores set a_cxc_recibos_numero=a_cxc_recibos_numero+1;select a_cxc_recibos_numero from contadores"
' ''                        autocxc_numerorecibopago = xcmd.ExecuteScalar().ToString.Trim.PadLeft(10, "0")

' ''                        'CXC, sea Contado / Credito
' ''                        Dim xcxc_doc_pago As New FichaCtasCobrar.c_CxC.c_Registro
' ''                        xcxc_doc_pago.LimpiarRegistro()
' ''                        With xcxc_doc_pago
' ''                            .c_AutoAgencia.c_Texto = ""
' ''                            .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
' ''                            .c_AutoCxC.c_Texto = autocxc_pago
' ''                            .c_AutoDocumento.c_Texto = ""
' ''                            .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
' ''                            .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
' ''                            .c_EstatusCancelado.c_Texto = ""
' ''                            .c_EstatusDocumentoCxC.c_Texto = "0"
' ''                            .c_FechaProceso.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                            .c_FechaVencimiento.c_Valor = xventa.RegistroDato.c_FechaVencimiento.c_Valor
' ''                            .c_MontoAcumulado.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                            .c_MontoImporte.c_Valor = (xventa.RegistroDato.c_TotalGeneral.c_Valor - MontoNotaCredito - MontoAnticipo)
' ''                            .c_MontoPorCobrar.c_Valor = 0
' ''                            .c_NombreAgencia.c_Texto = ""
' ''                            .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
' ''                            .c_NotasDetalles.c_Texto = ""
' ''                            .c_Numero.c_Texto = ""
' ''                            .c_NumeroDocumento.c_Texto = autocxc_numerorecibopago
' ''                            .c_TipoDocumento.c_Texto = "PAG"
' ''                            .c_TipoMovimiento.c_Valor = -1
' ''                            .c_TipoOperacion.c_Texto = ""
' ''                            .c_AutoMovimientoEntrada.c_Texto = ""

' ''                            'Nuevo
' ''                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC
' ''                        xcmd.Parameters.AddWithValue("@auto", xcxc_doc_pago.c_AutoCxC.c_Texto).Size = xcxc_doc_pago.c_AutoCxC.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha", xcxc_doc_pago.c_FechaProceso.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@tipo_documento", xcxc_doc_pago.c_TipoDocumento.c_Texto).Size = xcxc_doc_pago.c_TipoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@documento", xcxc_doc_pago.c_NumeroDocumento.c_Texto).Size = xcxc_doc_pago.c_NumeroDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha_vencimiento", xcxc_doc_pago.c_FechaVencimiento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@detalle", xcxc_doc_pago.c_NotasDetalles.c_Texto).Size = xcxc_doc_pago.c_NotasDetalles.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@importe", xcxc_doc_pago.c_MontoImporte.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@acumulado", xcxc_doc_pago.c_MontoAcumulado.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_cliente", xcxc_doc_pago.c_AutoCliente.c_Texto).Size = xcxc_doc_pago.c_AutoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cliente", xcxc_doc_pago.c_NombreCliente.c_Texto).Size = xcxc_doc_pago.c_NombreCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@ci_rif", xcxc_doc_pago.c_CiRifCliente.c_Texto).Size = xcxc_doc_pago.c_CiRifCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@codigo_cliente", xcxc_doc_pago.c_CodigoCliente.c_Texto).Size = xcxc_doc_pago.c_CodigoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cancelado", xcxc_doc_pago.c_EstatusCancelado.c_Texto).Size = xcxc_doc_pago.c_EstatusCancelado.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@resta", xcxc_doc_pago.c_MontoPorCobrar.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@operacion", xcxc_doc_pago.c_TipoOperacion.c_Texto).Size = xcxc_doc_pago.c_TipoOperacion.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@estatus", xcxc_doc_pago.c_EstatusDocumentoCxC.c_Texto).Size = xcxc_doc_pago.c_EstatusDocumentoCxC.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_documento", xcxc_doc_pago.c_AutoDocumento.c_Texto).Size = xcxc_doc_pago.c_AutoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@numero", xcxc_doc_pago.c_Numero.c_Texto).Size = xcxc_doc_pago.c_Numero.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_agencia", xcxc_doc_pago.c_AutoAgencia.c_Texto).Size = xcxc_doc_pago.c_AutoAgencia.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@agencia", xcxc_doc_pago.c_NombreAgencia.c_Texto).Size = xcxc_doc_pago.c_NombreAgencia.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@signo", xcxc_doc_pago.c_TipoMovimiento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_mov_entrada", xcxc_doc_factura.c_AutoMovimientoEntrada.c_Texto).Size = xcxc_doc_factura.c_AutoMovimientoEntrada.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha_emision", xcxc_doc_factura.c_FechaEmision.c_Valor)
' ''                        xcmd.ExecuteNonQuery()

' ''                        'CXC_RECIBOS
' ''                        Dim xrecibo As New FichaCtasCobrar.c_Recibos.c_Registro
' ''                        With xrecibo
' ''                            .c_AutoCliente.c_Texto = xventa.RegistroDato.c_AutoCliente.c_Texto
' ''                            .c_AutoCobrador.c_Texto = xventa._AutoCobrador
' ''                            .c_AutoRecibo.c_Texto = autocxc_recibopago
' ''                            .c_AutoUsuario.c_Texto = xventa.RegistroDato.c_AutoUsuario.c_Texto
' ''                            .c_CiRifCliente.c_Texto = xventa.RegistroDato.c_CiRifCliente.c_Texto
' ''                            .c_CodigoCliente.c_Texto = xventa.RegistroDato.c_CodigoCliente.c_Texto
' ''                            .c_DirFiscalCliente.c_Texto = xventa.RegistroDato.c_DirFiscalCliente.c_Texto
' ''                            .c_EstatusRecibo.c_Texto = "0"
' ''                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                            .c_MontoAnticipo.c_Valor = MontoAnticipo
' ''                            .c_MontoDescuento.c_Valor = 0
' ''                            .c_MontoImporte.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                            .c_MontoImporteDocumento.c_Valor = 0
' ''                            .c_MontoTotalDocumento.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                            .c_NombreCliente.c_Texto = xventa.RegistroDato.c_NombreCliente.c_Texto
' ''                            .c_NombreCobrador.c_Texto = xventa._NombreCobrador
' ''                            .c_NombreUsuario.c_Texto = xventa.RegistroDato.c_Usuario.c_Texto
' ''                            .c_NotasDetalles.c_Texto = ""
' ''                            .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
' ''                            .c_TelefonoCliente.c_Texto = xventa.RegistroDato.c_TelefonoCliente.c_Texto
' ''                            .c_CantidadDocumentosRelacionados.c_Valor = 1
' ''                            .c_CantNCPagadas.c_Valor = CantNotaCredito
' ''                            .c_MontoNCPagadas.c_Valor = MontoNotaCredito
' ''                            .c_AutoCxcPago.c_Texto = autocxc_pago
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaCtasCobrar._INSERT_CXC_RECIBOS
' ''                        xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@numero", xrecibo.c_NumeroRecibo.c_Texto).Size = xrecibo.c_NumeroRecibo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha", xrecibo.c_FechaEmision.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_usuario", xrecibo.c_AutoUsuario.c_Texto).Size = xrecibo.c_AutoUsuario.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@importe", xrecibo.c_MontoImporte.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@usuario", xrecibo.c_NombreUsuario.c_Texto).Size = xrecibo.c_NombreUsuario.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@importe_documentos", xrecibo.c_MontoImporteDocumento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@descuentos", xrecibo.c_MontoDescuento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@total_documentos", xrecibo.c_MontoTotalDocumento.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@detalle", xrecibo.c_NotasDetalles.c_Texto).Size = xrecibo.c_NotasDetalles.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@cobrador", xrecibo.c_NombreCobrador.c_Texto).Size = xrecibo.c_NombreCobrador.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_cliente", xrecibo.c_AutoCliente.c_Texto).Size = xrecibo.c_AutoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@nombre_cliente", xrecibo.c_NombreCliente.c_Texto).Size = xrecibo.c_NombreCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@ci_rif_cliente", xrecibo.c_CiRifCliente.c_Texto).Size = xrecibo.c_CiRifCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@codigo_cliente", xrecibo.c_CodigoCliente.c_Texto).Size = xrecibo.c_CodigoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@estatus", xrecibo.c_EstatusRecibo.c_Texto).Size = xrecibo.c_EstatusRecibo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@direccion", xrecibo.c_DirFiscalCliente.c_Texto).Size = xrecibo.c_DirFiscalCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@telefono", xrecibo.c_TelefonoCliente.c_Texto).Size = xrecibo.c_TelefonoCliente.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_cobrador", xrecibo.c_AutoCobrador.c_Texto).Size = xrecibo.c_AutoCobrador.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@anticipos", xrecibo.c_MontoAnticipo.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@cant_doc_rel", xrecibo.c_CantidadDocumentosRelacionados.c_Valor)
' ''                        'campos nuevos
' ''                        xcmd.Parameters.AddWithValue("@monto_nc_pagadas", xrecibo.c_MontoNCPagadas.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@cant_nc_pagadas", xrecibo.c_CantNCPagadas.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_cxc", xrecibo.c_AutoCxcPago.c_Texto)
' ''                        xcmd.ExecuteNonQuery()

' ''                        'VENTAS
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "UPDATE VENTAS SET " _
' ''                          + "recibo=@recibo, auto_recibo=@auto_recibo where auto=@auto"
' ''                        xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto)
' ''                        xcmd.Parameters.AddWithValue("@auto_recibo", autocxc_recibopago)
' ''                        xcmd.Parameters.AddWithValue("@recibo", autocxc_numerorecibopago)
' ''                        xcmd.ExecuteNonQuery()

' ''                        'CXC_DOCUMENTOS
' ''                        Dim xdoc As New FichaCtasCobrar.c_Documentos.c_Registro
' ''                        With xdoc
' ''                            .c_AutoCxC.c_Texto = autocxc
' ''                            .c_AutoCxCPago.c_Texto = autocxc_pago
' ''                            .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
' ''                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                            .c_Item.c_Valor = 1
' ''                            .c_Monto.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                            .c_NotasDetalles.c_Texto = ""
' ''                            .c_NumeroDocumento.c_Texto = xventa.RegistroDato.c_Documento.c_Texto
' ''                            .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
' ''                            .c_OrigenDocumento.c_Texto = "FACTURA"
' ''                            .c_TipoDocumento.c_Texto = "PAG"
' ''                            .c_TipoOperacion.c_Texto = "Cancelación"
' ''                            .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                            .c_SignoDocumento.c_Valor = 1
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
' ''                        xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
' ''                        'campos nuevo
' ''                        xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
' ''                        xcmd.ExecuteNonQuery()

' ''                        If MontoNotaCredito > 0 Then
' ''                            Dim dr As SqlDataReader
' ''                            Dim xtb_nc As New DataTable

' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "SELECT * FROM cxc WHERE auto_cliente=@auto_cliente AND TIPO_DOCUMENTO='NCF' AND CANCELADO='0' AND ESTATUS='0' ORDER BY AUTO ASC"
' ''                            xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto).Size = xventa.RegistroDato.c_AutoCliente.c_Largo
' ''                            dr = xcmd.ExecuteReader()
' ''                            xtb_nc.Load(dr)

' ''                            Dim xitem As Integer = 1
' ''                            Dim xresul As Integer = 0
' ''                            Dim xmonto As Decimal = 0
' ''                            Dim xcxc_nc As New FichaCtasCobrar.c_CxC
' ''                            Dim xsaldopendiente_antes_del_pago As Decimal = 0

' ''                            For Each xr As DataRow In xtb_nc.Rows
' ''                                xitem += 1
' ''                                xcxc_nc.M_CargarRegistro(xr)
' ''                                xsaldopendiente_antes_del_pago = 0
' ''                                xsaldopendiente_antes_del_pago = xcxc_nc.RegistroDato._MontoPorCobrar

' ''                                If (MontoNotaCredito - xmonto) >= Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar) Then
' ''                                    xmonto += Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)

' ''                                    xcmd.Parameters.Clear()
' ''                                    xcmd.CommandText = "update cxc set resta=0, acumulado=importe, cancelado='1' where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
' ''                                    xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
' ''                                    xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
' ''                                    xresul = xcmd.ExecuteNonQuery()

' ''                                    If xresul = 0 Then
' ''                                        Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
' ''                                            xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
' ''                                        Throw New Exception(xmen)
' ''                                    End If

' ''                                    'CXC DOCUMENTOS DE NOTAS DE CREDITO
' ''                                    With xdoc
' ''                                        .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
' ''                                        .c_AutoCxCPago.c_Texto = autocxc_pago
' ''                                        .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
' ''                                        .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                                        .c_Item.c_Valor = xitem
' ''                                        .c_Monto.c_Valor = Math.Abs(xcxc_nc.RegistroDato._MontoPorCobrar)
' ''                                        .c_NotasDetalles.c_Texto = ""
' ''                                        .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
' ''                                        .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
' ''                                        .c_OrigenDocumento.c_Texto = "NOTA CRÉDITO"
' ''                                        .c_TipoDocumento.c_Texto = "PAG"
' ''                                        .c_TipoOperacion.c_Texto = "Cancelación"
' ''                                        .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
' ''                                        .c_SignoDocumento.c_Valor = -1
' ''                                    End With

' ''                                    xcmd.Parameters.Clear()
' ''                                    xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
' ''                                    xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
' ''                                    xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
' ''                                    xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
' ''                                    xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
' ''                                    xcmd.Parameters.AddWithValue("@monto_pendiente", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
' ''                                    'campos nuevo
' ''                                    xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
' ''                                    xcmd.ExecuteNonQuery()
' ''                                Else
' ''                                    If (MontoNotaCredito - xmonto) >= 0 Then
' ''                                        Dim xmont As Decimal = 0
' ''                                        xmont = -1 * (MontoNotaCredito - xmonto)
' ''                                        xmonto += (MontoNotaCredito - xmonto)

' ''                                        xcmd.Parameters.Clear()
' ''                                        xcmd.CommandText = "update cxc set resta=resta-@monto, acumulado=acumulado+@monto where auto=@auto and estatus='0' and resta=@resta and acumulado=@acumulado"
' ''                                        xcmd.Parameters.AddWithValue("@auto", xcxc_nc.RegistroDato.c_AutoCxC.c_Texto).Size = xcxc_nc.RegistroDato.c_AutoCxC.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@resta", xcxc_nc.RegistroDato.c_MontoPorCobrar.c_Valor)
' ''                                        xcmd.Parameters.AddWithValue("@acumulado", xcxc_nc.RegistroDato.c_MontoAcumulado.c_Valor)
' ''                                        xcmd.Parameters.AddWithValue("@monto", xmont)
' ''                                        xresul = xcmd.ExecuteNonQuery()

' ''                                        If xresul = 0 Then
' ''                                            Dim xmen As String = "ERROR AL REALIZAR PAGO DE DOCUMENTO DE NOTA DE CREDITO" + vbCrLf + _
' ''                                                xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
' ''                                            Throw New Exception(xmen)
' ''                                        End If

' ''                                        'CXC DOCUMENTOS DE NOTAS DE CREDITO
' ''                                        With xdoc
' ''                                            .c_AutoCxC.c_Texto = xcxc_nc.RegistroDato._AutoCxC
' ''                                            .c_AutoCxCPago.c_Texto = autocxc_pago
' ''                                            .c_AutoCxCRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
' ''                                            .c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor
' ''                                            .c_Item.c_Valor = xitem
' ''                                            .c_Monto.c_Valor = Math.Abs(xmont)
' ''                                            .c_NotasDetalles.c_Texto = ""
' ''                                            .c_NumeroDocumento.c_Texto = xcxc_nc.RegistroDato.c_NumeroDocumento.c_Texto
' ''                                            .c_NumeroRecibo.c_Texto = autocxc_numerorecibopago
' ''                                            .c_OrigenDocumento.c_Texto = "NOTA CRÉDITO"
' ''                                            .c_TipoDocumento.c_Texto = "PAG"
' ''                                            .c_TipoOperacion.c_Texto = "Cancelación"
' ''                                            .c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor = xsaldopendiente_antes_del_pago
' ''                                            .c_SignoDocumento.c_Valor = -1
' ''                                        End With

' ''                                        xcmd.Parameters.Clear()
' ''                                        xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_DOCUMENTOS
' ''                                        xcmd.Parameters.AddWithValue("@item", xdoc.c_Item.c_Valor)
' ''                                        xcmd.Parameters.AddWithValue("@operacion", xdoc.c_TipoOperacion.c_Texto).Size = xdoc.c_TipoOperacion.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@monto", xdoc.c_Monto.c_Valor)
' ''                                        xcmd.Parameters.AddWithValue("@auto_cxc", xdoc.c_AutoCxC.c_Texto).Size = xdoc.c_AutoCxC.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@documento", xdoc.c_NumeroDocumento.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@auto_cxc_pago", xdoc.c_AutoCxCPago.c_Texto).Size = xdoc.c_AutoCxCPago.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@tipo", xdoc.c_TipoDocumento.c_Texto).Size = xdoc.c_TipoDocumento.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@fecha", xdoc.c_FechaEmision.c_Valor)
' ''                                        xcmd.Parameters.AddWithValue("@detalle", xdoc.c_NotasDetalles.c_Texto).Size = xdoc.c_NotasDetalles.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@auto_cxc_recibo", xdoc.c_AutoCxCRecibo.c_Texto).Size = xdoc.c_AutoCxCRecibo.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@numero_recibo", xdoc.c_NumeroRecibo.c_Texto).Size = xdoc.c_NumeroDocumento.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@origen", xdoc.c_OrigenDocumento.c_Texto).Size = xdoc.c_OrigenDocumento.c_Largo
' ''                                        xcmd.Parameters.AddWithValue("@origen", xdoc.c_SaldoPendienteAlMomentoDeAbonarPagar.c_Valor)
' ''                                        'campos nuevo
' ''                                        xcmd.Parameters.AddWithValue("@signo", xdoc.c_SignoDocumento.c_Valor)
' ''                                        xcmd.ExecuteNonQuery()
' ''                                    End If
' ''                                End If

' ''                                If xmonto = MontoNotaCredito Then
' ''                                    Exit For
' ''                                End If
' ''                            Next

' ''                            If (MontoNotaCredito - xmonto) <> 0 Then
' ''                                Throw New Exception("ERROR EN PROCESAR DOCUMENTOS DE NOTAS DE CREDITO... VERIFIQUE POR FAVOR" + vbCrLf + "SALDO NO CORRESPONDE AL MONTO TOTAL DE NOTAS DE CREDITO")
' ''                            End If

' ''                            'DOCUMENTO CXC RECIBO :> INCDICAR EL NUMERO DE DOCUMENTOS RELACIONADOS
' ''                            xcmd.Parameters.Clear()
' ''                            xcmd.CommandText = "update cxc_recibos set cant_doc_rel= @cant_doc_rel where auto = @auto"
' ''                            xcmd.Parameters.AddWithValue("@auto", xrecibo.c_AutoRecibo.c_Texto).Size = xrecibo.c_AutoRecibo.c_Largo
' ''                            xcmd.Parameters.AddWithValue("@cant_doc_rel", xitem)
' ''                            xcmd.ExecuteNonQuery()
' ''                        End If

' ''                        'CXC_MODO_PAGO
' ''                        For Each xpag In xpagos
' ''                            If xpag.RegsitroDato.c_AutoTipoPago.c_Texto <> "NC00000001" Then
' ''                                xpag.RegsitroDato.c_AutoRecibo.c_Texto = xrecibo.c_AutoRecibo.c_Texto
' ''                                xpag.RegsitroDato.c_EstatusMovimiento.c_Texto = "0"
' ''                                xpag.RegsitroDato.c_FechaEmision.c_Valor = xventa.RegistroDato.c_FechaEmision.c_Valor

' ''                                xcmd.Parameters.Clear()
' ''                                xcmd.CommandText = FichaCtasCobrar.INSERT_CXC_MODO_PAGO
' ''                                xcmd.Parameters.AddWithValue("@numero", xpag.RegsitroDato.c_Numero.c_Texto).Size = xpag.RegsitroDato.c_Numero.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@agencia", xpag.RegsitroDato.c_NombreAgencia.c_Texto).Size = xpag.RegsitroDato.c_NombreAgencia.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@importe", xpag.RegsitroDato.c_MontoImporte.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@codigo", xpag.RegsitroDato.c_CodigoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_CodigoTipoPago.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_recibo", xpag.RegsitroDato.c_AutoRecibo.c_Texto).Size = xpag.RegsitroDato.c_AutoRecibo.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@nombre", xpag.RegsitroDato.c_NombreTipoPago.c_Texto).Size = xpag.RegsitroDato.c_NombreTipoPago.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_medios_pago", xpag.RegsitroDato.c_AutoTipoPago.c_Texto).Size = xpag.RegsitroDato.c_AutoTipoPago.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@auto_agencia", xpag.RegsitroDato.c_AutoAgencia.c_Texto).Size = xpag.RegsitroDato.c_AutoAgencia.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@fecha", xpag.RegsitroDato.c_FechaEmision.c_Valor)
' ''                                xcmd.Parameters.AddWithValue("@estatus", xpag.RegsitroDato.c_EstatusMovimiento.c_Texto).Size = xpag.RegsitroDato.c_EstatusMovimiento.c_Largo
' ''                                xcmd.Parameters.AddWithValue("@monto_recibido", xpag.RegsitroDato.c_MontoRecibido.c_Valor)
' ''                                xcmd.ExecuteNonQuery()
' ''                            End If
' ''                        Next

' ''                        'DOCUMENTO FACTURA EN CXC :> PAGADO COMPLETO
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "update cxc set cancelado = '1', acumulado = importe, resta = 0 where auto = @auto"
' ''                        xcmd.Parameters.AddWithValue("@auto", xcxc_doc_factura.c_AutoCxC.c_Texto).Size = xcxc_doc_factura.c_AutoCxC.c_Largo
' ''                        xcmd.ExecuteNonQuery()
' ''                    End If

' ''                    'VENTAS_MEDIDAS
' ''                    Dim x = From n In xlista_medidasventa _
' ''                            Select n._Auto, n._Cantidad, n._Decimales, n._Nombre _
' ''                            Group By _Auto, _Decimales, _Nombre Into Sum(_Cantidad)

' ''                    Dim xmedida As New FichaVentas.V_VentasMedida.c_Registro
' ''                    For Each xmed In x
' ''                        xmedida.M_LimpiarRegistro()

' ''                        With xmedida
' ''                            .c_AutoDocumento.c_Texto = xventa.RegistroDato.c_AutoDocumento.c_Texto
' ''                            .c_AutoMedida.c_Texto = xmed._Auto
' ''                            .c_CantidadEmpaques.c_Valor = xmed.Sum
' ''                            .c_DecimalesEmpaque.c_Texto = xmed._Decimales
' ''                            .c_NombreEmpaque.c_Texto = xmed._Nombre
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaVentas.INSERT_VENTAS_MEDIDA
' ''                        xcmd.Parameters.AddWithValue("@auto_documento", xmedida.c_AutoDocumento.c_Texto).Size = xmedida.c_AutoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@auto_medida", xmedida.c_AutoMedida.c_Texto).Size = xmedida.c_AutoMedida.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@total_medida", xmedida.c_CantidadEmpaques.c_Valor)
' ''                        xcmd.Parameters.AddWithValue("@decimales", xmedida.c_DecimalesEmpaque.c_Texto).Size = xmedida.c_DecimalesEmpaque.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@nombre", xmedida.c_NombreEmpaque.c_Texto).Size = xmedida.c_NombreEmpaque.c_Largo
' ''                        xcmd.ExecuteNonQuery()
' ''                    Next

' ''                    Dim t_debito As Single = 0
' ''                    Dim t_credito As Single = 0
' ''                    Dim t_saldo As Single = 0

' ''                    'BUSCA LOS SALDOS PARA EL CLIENTE
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
' ''                    xcmd.CommandText = "select sum(resta) as s_importe from cxc where auto_cliente=@auto_cliente and " _
' ''                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe>=0 group by auto_cliente"
' ''                    t_debito = xcmd.ExecuteScalar()

' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
' ''                    xcmd.CommandText = "select sum(resta) as s_acumulado from cxc where auto_cliente=@auto_cliente and " _
' ''                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' and importe<0 group by auto_cliente"
' ''                    t_credito = xcmd.ExecuteScalar()

' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.Parameters.AddWithValue("@auto_cliente", xventa.RegistroDato.c_AutoCliente.c_Texto)
' ''                    xcmd.CommandText = "select sum(resta) as s_resta from cxc where auto_cliente=@auto_cliente and " _
' ''                      + "cancelado='0' and estatus='0' and tipo_documento<>'PAG' group by auto_cliente"
' ''                    t_saldo = xcmd.ExecuteScalar()

' ''                    'CLIENTES
' ''                    Dim xr_cliente As Integer = 0
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = "UPDATE CLIENTES SET " _
' ''                      + "TOTAL_DEBITOS=@total_debitos,total_creditos=@total_creditos," _
' ''                      + "total_saldo=@total_saldo, credito_disponible=limite_credito-@total_saldo, total_anticipos=total_anticipos-@total_anticipos, " _
' ''                      + "fecha_ult_compra=@fecha_ult_compra where auto=@auto and estatus='Activo'"
' ''                    xcmd.Parameters.AddWithValue("@total_debitos", t_debito)
' ''                    xcmd.Parameters.AddWithValue("@total_creditos", t_credito)
' ''                    xcmd.Parameters.AddWithValue("@total_saldo", t_saldo)
' ''                    xcmd.Parameters.AddWithValue("@fecha_ult_compra", xventa.RegistroDato.c_FechaEmision.c_Valor)
' ''                    xcmd.Parameters.AddWithValue("@total_anticipos", MontoAnticipo)
' ''                    xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoCliente.c_Texto)
' ''                    xr_cliente = xcmd.ExecuteNonQuery()
' ''                    If xr_cliente = 0 Then
' ''                        Throw New Exception("VERIFICAR CLIENTE, AL PARECER FUE EILIMINADO / CAMBIO DE ESTATUS")
' ''                    End If

' ''                    'TABLA TEMPORALVENTA
' ''                    xcmd.Parameters.Clear()
' ''                    xcmd.CommandText = "delete temporalventa where idunico=@idunico and tipodocumento='1' and autousuario=@autousuario"
' ''                    xcmd.Parameters.AddWithValue("@idunico", idunico)
' ''                    xcmd.Parameters.AddWithValue("@autousuario", xventa.RegistroDato.c_AutoUsuario.c_Texto)
' ''                    xcmd.ExecuteNonQuery()

' ''                    If xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega <> "" Then
' ''                        ' ACTUALIZO ESTATUS DOCUMENTO ORIGEN A PROCESADO
' ''                        Dim xres As Integer = 0
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "UPDATE VENTAS SET estatus='2' where auto=@autodoc and estatus='0'"
' ''                        xcmd.Parameters.AddWithValue("@autodoc", xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega)
' ''                        xres = xcmd.ExecuteNonQuery()
' ''                        If xres = 0 Then
' ''                            If xventa._f_FichaDocumentoOrigen._TipoDocumento = TipoDocumentoVentaRegistrado.Presupuesto Then
' ''                            Else
' ''                                Throw New Exception("DOCUMENTO ORIGEN HA SIDO IMPOSIBLE ACTUALIZAR SU ESTATUS A PROCESADO, VERIFIQUE POR FAVOR")
' ''                            End If
' ''                        End If

' ''                        Dim xreg As New FichaVentas.V_PresupuestoPedidoOtros
' ''                        With xreg.RegistroDato
' ''                            .c_AutoDocumentoOrigen._ContenidoCampo = xventa._DocumentoOrigen_PresupuestoPedidoNotaEntrega
' ''                            .c_AutoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._AutoDocumento
' ''                            .c_AutoEntidad._ContenidoCampo = xventa.RegistroDato._AutoCliente
' ''                            .c_CiRif._ContenidoCampo = xventa.RegistroDato._CiRifCliente
' ''                            .c_DiasValidesDocOrigen._ContenidoCampo = xdoc_origen._DiasValidezDocumento
' ''                            .c_FechaEmisionDocumentoOrigen._ContenidoCampo = xdoc_origen._FechaEmision
' ''                            .c_FechaProcesoDocumentoVenta._ContenidoCampo = xventa.RegistroDato._FechaEmision
' ''                            .c_NombreEntidad._ContenidoCampo = xventa.RegistroDato._NombreCliente
' ''                            .c_NumeroDocumento_Origen._ContenidoCampo = xdoc_origen._Documento
' ''                            .c_NumeroDocumento_Venta._ContenidoCampo = xventa.RegistroDato._Documento
' ''                            .c_TipoDocumentoOrigen._ContenidoCampo = xdoc_origen.c_TipoDocumento.c_Texto
' ''                        End With

' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = FichaVentas.V_PresupuestoPedidoOtros.Insert_Ventas_PresupuestoPedidoOtros
' ''                        xcmd.Parameters.AddWithValue("@auto_doc_origen", xreg.RegistroDato._AutoDocumentoOrigen).Size = xreg.RegistroDato.c_AutoDocumentoOrigen._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@auto_doc_venta", xreg.RegistroDato._AutoDocumentoVenta).Size = xreg.RegistroDato.c_AutoDocumentoVenta._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@fechaemision_origen", xreg.RegistroDato._FechaEmisionDocumento_Origen)
' ''                        xcmd.Parameters.AddWithValue("@fechaproceso", xreg.RegistroDato._FechaProcesoDocumento_Venta)
' ''                        xcmd.Parameters.AddWithValue("@auto_entidad", xreg.RegistroDato._AutoEntidad).Size = xreg.RegistroDato.c_AutoEntidad._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@ci_rif_entidad", xreg.RegistroDato._CiRif_Entidad).Size = xreg.RegistroDato.c_CiRif._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@nombre_entidad", xreg.RegistroDato._NombreEntidad).Size = xreg.RegistroDato.c_NombreEntidad._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@diasvalidez_doc_origen", xreg.RegistroDato._DiasValidezDocumentoOrigen)
' ''                        xcmd.Parameters.AddWithValue("@tipodocumento_origen", IIf(xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo Is Nothing, _
' ''                                "", xreg.RegistroDato.c_TipoDocumentoOrigen._ContenidoCampo)).Size = xreg.RegistroDato.c_TipoDocumentoOrigen._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@numdocumento_origen", xreg.RegistroDato._NumeroDocumentoOrigen).Size = xreg.RegistroDato.c_NumeroDocumento_Origen._LargoCampo
' ''                        xcmd.Parameters.AddWithValue("@numdocumento_venta", xreg.RegistroDato._NumeroDocumentoVenta).Size = xreg.RegistroDato.c_NumeroDocumento_Venta._LargoCampo
' ''                        xcmd.ExecuteNonQuery()
' ''                    End If

' ''                    Dim TipoEfectivoTickets As Decimal = 0
' ''                    Dim TipoCheque As Decimal = 0
' ''                    Dim TipoDebito As Decimal = 0
' ''                    Dim TipoCredito As Decimal = 0
' ''                    Dim TipoOtros As Decimal = 0

' ''                    Dim FormasPago As New List(Of FormaPago)
' ''                    For Each xpag In xpagos
' ''                        Select Case xpag.RegsitroDato.c_AutoTipoPago.c_Texto
' ''                            Case "0000000001", "0000000005" 'efectivo, cesta ticket
' ''                                TipoEfectivoTickets += xpag.RegsitroDato.c_MontoRecibido.c_Valor
' ''                            Case "0000000002" 'cheque
' ''                                TipoCheque += xpag.RegsitroDato.c_MontoRecibido.c_Valor
' ''                            Case "0000000003" 'debito
' ''                                TipoDebito += xpag.RegsitroDato.c_MontoRecibido.c_Valor
' ''                            Case "0000000004" 'credito
' ''                                TipoCredito += xpag.RegsitroDato.c_MontoRecibido.c_Valor
' ''                            Case Else
' ''                                TipoOtros += xpag.RegsitroDato.c_MontoRecibido.c_Valor
' ''                        End Select
' ''                    Next

' ''                    If TipoEfectivoTickets > 0 Then
' ''                        Dim metodoPago As New FormaPago With {.Monto = TipoEfectivoTickets, .Tipo = FormaPago.TipoPago.EfectivoTickets}
' ''                        FormasPago.Add(metodoPago)
' ''                    End If
' ''                    If TipoCheque > 0 Then
' ''                        Dim metodoPago As New FormaPago With {.Monto = TipoCheque, .Tipo = FormaPago.TipoPago.Cheque}
' ''                        FormasPago.Add(metodoPago)
' ''                    End If
' ''                    If TipoDebito > 0 Then
' ''                        Dim metodoPago As New FormaPago With {.Monto = TipoDebito, .Tipo = FormaPago.TipoPago.TDebito}
' ''                        FormasPago.Add(metodoPago)
' ''                    End If
' ''                    If TipoCredito > 0 Then
' ''                        Dim metodoPago As New FormaPago With {.Monto = TipoCredito, .Tipo = FormaPago.TipoPago.TCredito}
' ''                        FormasPago.Add(metodoPago)
' ''                    End If
' ''                    If TipoOtros > 0 Then
' ''                        Dim metodoPago As New FormaPago With {.Monto = TipoOtros, .Tipo = FormaPago.TipoPago.Otros}
' ''                        FormasPago.Add(metodoPago)
' ''                    End If

' ''                    If ximpresora._ModoImpresion = TipoImpresora.Fiscal Then
' ''                        If ximpresora._Impresora.Ver_FechaImpresoraFiscal <> xventa.RegistroDato.c_FechaEmision.c_Valor Then
' ''                            Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, FECHA IMPRESORA NO ES IGUAL AL DEL SISTEMA")
' ''                        End If

' ''                        If ximpresora._Impresora.Ver_SerialImpresoraFiscal.Trim <> xventa.RegistroDato.c_SerialImpresoraFiscal.c_Texto.Trim Then
' ''                            Throw New Exception("ERROR AL IMPRIMIR EN IMPRESORA FISCAL, SERIAL FISCAL NO CORRESPONDE AL SERIAL ASIGANADO AL DOCUMENTO")
' ''                        End If

' ''                        Dim xcontrol As Integer = 0
' ''                        Dim xz As Integer = 0
' ''                        Integer.TryParse(ximpresora._Impresora.Ver_UltimaFacturaRegistrada, xcontrol)
' ''                        Integer.TryParse(ximpresora._Impresora.Ver_UltimoZFiscal, xz)
' ''                        xcontrol += 1
' ''                        xz += 1
' ''                        Dim xcont As String = xcontrol.ToString.Trim.PadLeft(10, "0")

' ''                        'VENTAS
' ''                        xcmd.Parameters.Clear()
' ''                        xcmd.CommandText = "update ventas set control = @control, relacion_z = @relacion_z where auto = @auto"
' ''                        xcmd.Parameters.AddWithValue("@auto", xventa.RegistroDato.c_AutoDocumento.c_Texto).Size = xventa.RegistroDato.c_AutoDocumento.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@control", xcont).Size = xventa.RegistroDato.c_ControlFiscal.c_Largo
' ''                        xcmd.Parameters.AddWithValue("@relacion_z", xz)
' ''                        xcmd.ExecuteNonQuery()

' ''                        With ximpresora._Impresora
' ''                            .FacturaInicializa(xventa.RegistroDato.c_Tasa1.c_Valor, _
' ''                                               xventa.RegistroDato.c_Tasa2.c_Valor, _
' ''                                               xventa.RegistroDato.c_Tasa3.c_Valor)

' ''                            .Cli_CondicionVenta = "CONTADO"
' ''                            If xventa.RegistroDato._CondicionPago = TipoCondcionPago.Credito Then
' ''                                .Cli_CondicionVenta = "CREDITO " + xventa.RegistroDato._DiasCreditoOtorgado.ToString.Trim + " Dias"
' ''                            End If
' ''                            .cli_codCliente = xventa.RegistroDato._CodigoCliente
' ''                            .Cli_DirCliente = xventa.RegistroDato._DirFiscalCliente
' ''                            .Cli_EstacionVenta = xventa.RegistroDato._EstacionEquipoProceso
' ''                            .Cli_FacturaVenta = xventa.RegistroDato.c_Documento.c_Texto.Trim
' ''                            .Cli_NomCliente = xventa.RegistroDato._NombreCliente
' ''                            .Cli_RifCliente = xventa.RegistroDato._CiRifCliente
' ''                            .Cli_TelCliente = xventa.RegistroDato.c_TelefonoCliente.c_Texto.Trim
' ''                            .Cli_UsuarioOperador = xventa.RegistroDato._NombreUsuario
' ''                            .Cli_UsuarioVenta = xventa.RegistroDato._NombreVendedor
' ''                            .Cli_DocumentoVenta = xventa.RegistroDato._Documento + ", Vend: " + xventa.RegistroDato._NombreVendedor

' ''                            .CargoGlobal = xventa.RegistroDato.c_TasaCargos.c_Valor
' ''                            .DsctoGlobal = xventa.RegistroDato.c_TasaDescuento_1.c_Valor
' ''                            .AutoDocumento = xventa.RegistroDato.c_AutoDocumento.c_Texto
' ''                        End With
' ''                        Dim xmontorecibe As Decimal = 0
' ''                        If xventa.RegistroDato.c_CondicionPago.c_Texto.Trim.ToUpper = "CONTADO" Then
' ''                            xmontorecibe = xventa.RegistroDato.c_TotalGeneral.c_Valor
' ''                        End If

' ''                        If xventa.RegistroDato.c_TotalGeneral.c_Valor > 0 Then
' ''                            Dim xtbr As New DataTable
' ''                            xtbr = xtablaprd
' ''                            If ximpresora._OrdenAlImprimir = FichaGlobal.c_ConfSistema.ConfModuloVentas.OrdenImprimirItems.PorNombre Then
' ''                                'Dim xtbr As New DataTable
' ''                                xtbr = xtablaprd.Select("cantidad>=0", "NOMBRE").CopyToDataTable()
' ''                                'ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
' ''                            ElseIf ximpresora._OrdenAlImprimir = FichaGlobal.c_ConfSistema.ConfModuloVentas.OrdenImprimirItems.PorCodigo Then
' ''                                'Dim xtbr As New DataTable
' ''                                xtbr = xtablaprd.Select("cantidad>=0", "codigo").CopyToDataTable
' ''                                'ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
' ''                            Else
' ''                                'ImprimeFactura(ximpresora._Impresora, xtablaprd, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor)
' ''                            End If
' ''                            ImprimeFactura(ximpresora._Impresora, xtbr, xmontorecibe, xventa.RegistroDato.c_TotalGeneral.c_Valor, FormasPago)
' ''                        Else
' ''                            Throw New Exception("NO SE PUEDE GENERAR UNA FACTURA FISCAL DE MONTO CERO (0.0)")
' ''                        End If

' ''                    ElseIf ximpresora._ModoImpresion = TipoImpresora.Texto Then
' ''                    ElseIf ximpresora._ModoImpresion = TipoImpresora.Grafico Then
' ''                    Else
' ''                        Throw New Exception("NO SE HA DEFINIDO UN MODO DE IMPRESION DE FACTURA")
' ''                    End If

' ''                    xtr.Commit()
' ''                End Using

' ''                RaiseEvent FacturaExitosa()
' ''                RaiseEvent DocumentoProcesado(xventa.RegistroDato.c_AutoDocumento.c_Texto)
' ''                Return True
' ''            Catch xsql As SqlException
' ''                xtr.Rollback()
' ''                If xsql.Number = 2601 Then
' ''                    Throw New Exception("ERROR... YA EXISTE UN DOCUMENTO CON EL MISMO NUMERO Y SERIE, VERIFIQUE")
' ''                ElseIf xsql.Number = 547 Then
' ''                    Throw New Exception("ERROR... AL PARECER EL CLIENTE / VENDEDOR SELECCIONADO FUE ELIMINADO POR OTRO USUARIO, VERIFIQUE")
' ''                Else
' ''                    Throw New Exception(xsql.Message + vbCrLf + "ERROR NUMERO: " + xsql.Number.ToString)
' ''                End If
' ''            Catch ex As Exception
' ''                xtr.Rollback()
' ''                Throw New Exception(ex.Message)
' ''            End Try
' ''        End Using
' ''    Catch ex As Exception
' ''        Throw New Exception("PROBLEMA AL REGISTRAR VENTA:" + vbCrLf + ex.Message)
' ''    End Try
' ''End Function
